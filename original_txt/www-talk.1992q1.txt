From timbl  Thu Jan  9 12:34:24 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08666; Thu, 9 Jan 92 12:34:24 GMT+0100
Date: Thu, 9 Jan 92 12:34:24 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9201091134.AA08666@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Mark Alexander Davis-Craig <mad@merit.edu>
Subject: Re: Is there a paper which describes the www protocol?
Cc: www-talk



> From: Mark Alexander Davis-Craig <mad@merit.edu>
> 

> I was looking through the web and found information on servers and
> clients.  I saw mention in the "History" section about wanting to
> develop a good protocol for information exchange, but haven't seen a
> paper specifically about the www protocol.  Is there one?  If not,
> could you describe it in some detail?

You are right that the protocol documentation was not as good as it could
have been. I have improved it. To save you browing through the web for it,
I append to this message the information as plain text.

> I ask because we at the University of Michigan are evaluating www,
> wais, and gopher for campus-wide information delivery.
>

I have no need to tell you what our suggestion would be!  The W3 architecure
will give you (almost) everything you can get from WAIS and Gopher rolled into one.
The trick is that almost anything is representable by hypertext links and index searches. The  
Gopher menus and plain text, for example, are both special cases of hypertext.  As it is more  
work to do the job for hypertext in general, we do not yet have software to cover as many  
platforms as Gopher, for example. However, when we do, the W3 system will be more flexible.   
Running a W3 server on top of a WAIS or Gopher world in fact makes these worlds subsets of the W3  
web. The reverse is not possible because the WAIS and Gopher information models are not flexible  
enough
to encompass the W3 model.

That said, if you want an indexer we can only recommend the wais code (or NeXT code) and we do  
not yet supply (as Gopher does) an off-the shelf index server for either of those indexes yet. It  
is easy to do, however, with our generic server code.

Please keep me informed of your thinking, whether you plan to go W3 or Gopher.  If we can help  
you set up a demonstration system, then mail me.
 

>Thanks in advance.
>  -----------------------------------------------------------------
>  Mark Davis-Craig, Merit/MichNet Technical Support Consultant
>  mad@merit.edu        mad@merit.bitnet        (313)-936-2110


Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web project                (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155

_________________________________ protocol notes follow ___________


                                         The HTTP Protocol As Implemented In W3


                          HTTP AS IMPLEMENTED IN WWW
                                       

   This document defines the Hypertext Transfer protocol  (HTTP) as currently
   implemented by the WorldWideWeb initaitive software. This is a subset of the
   proposed full HTTP protocol.  No client profile information is transferred
   with the query. Future HTTP protocols will be back-compatible with this
   protocol.
   

    The protocol  uses the normal internet-style telnet protocol style on a
   TCP-IP link. The following describes how a client acquires a (hypertext)
   document from an HTTP server, given an HTTP document address .
   

Connection

   The client makes a TCP-IP connection to the host using the domain name or IP
   number , and the port number  given in the address.
   

    During development, the default HTTP TCP port number is 2784 -- this will
   change when an official port number is allocated.
   

    The server accepts the connection.
   

    Note: HTTP currently runs over TCP, but could run over any
   connection-oriented service.   The interpretation of the protocol below in
   the case of a sequenced packet service (such as DECnet(TM) or ISO TP4) is
   that that the request should be one TPDU, but the repose may be many.
   

Request

   The client sends a document request consisting of a line of ASCII characters
   terminated by a CR LF (carriage return, line feed) pair. A well-behaved
   server will not require the carriage return character.
   

    This request consists of the word "GET", a space, the document address ,
   omitting the "http:, host and port parts when they are the coordinates just
   used to make the connection. (If a gateway is being used, then a full
   document address may be given specifying a different naming scheme).
   

    The search functionality of the protocol lies in the ability of the
   addressing syntax to describe a search on a named index .
   

    A search should only be requested by a client when the index document
   itself has been descibed as an index using the  ISINDEX tag .
   

Response

   The response to a simple GET request is a message in hypertext mark-up
   language ( HTML ). This is a byte stream of ASCII characters.
   

    Lines shall be delimited by an optional carriage return followed by a
   mandatory line feed chararcter. The client should not assume that the
   carriage return will be present.  Lines may be of any length. Well-behaved
   servers should retrict line length to 80 characters excluding the CR LF
   pair.
   

    The format of the message is HTML - that is, a trimmed SGML document. Note
   that this format allows for menus and hit lists to be returned as hypertext.
   It also allows for plain ASCII text to be returned following the  PLAINTEXT
   tag .
   

    The message is terminated by  the closing of the connection by the server.
   

    Well-behaved clients will read the entire document as fast as possible. The
   client shall not wait for user action (output paging for example) before
   reading the whole of the document.  The server may impose a timeout of the
   order of 15 seconds on inactivity.
   

    Error responses are supplied in human readable text in HTML syntax. There
   is no way to distinguish an error response from a satisfactory response
   except for the content of the text.
   

Disconnection

   The TCP-IP connection is broken by the server when the whole document has
   been transferred.
   

    The client may abort the transfer by breaking the connection before this,
   in which case the server will not record any error condidtion.
   

    Requests are idempotent .  The server need not store any information about
   the request after disconnection.
   

    _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                               W3 NAMING SCHEMES
                                       

   (See also: a discussion of design issues involved , BNF syntax , W3
   background)
   

    The format of a hypertext name consists of the name of the naming
   sub-scheme to be used, then a name in a format particular to that subscheme,
   then an optional anchor identifier within the document. For example, the
   format is for all internet-based access methods:
   

      scheme : // host.domain:port / path / path  # anchor
   

    A suffix # anchor id allows one to refer to a particular anchor within a
   document.
   

    A suffix ? followed by words separated by + signs  allows one to seach an
   index (see details ).
   

    References from one document to another with a similar name may be
   abbreviated to a relative name . This imposes certain restrictions on the
   way that the "path" is represented.
   

    A special format is used to represent a search on an index . See also: the
   full BNF description , about escaping illegal characters .
   

Examples


         file://cernvax.cern.ch/usr/lib/WWW/defaut.html#123

   This is a fully qualified file name, referring to a document in the file
   name space of the given internet node, and an imaginary anchor 123 within
   it.
   


         #greg

   This refers to anchor "greg" in the same document as that in which the name
   appears.
   

Naming sub-schemes

   Different schemes usually use different protocols on the network. The format
   of the address after the scheme name is a function of the particular scheme.
   In practice, all internet-based schemes have a common format for the node
   name and port.   Schemes currently defined are as follows, with links to
   more details.
   

  file                    Access is provided to files, using whatever means the
                         browser and/or gateways have to reach files on obscure
                         machines.
                         

  news                    Access is provided to news articles, and newsgroups,
                         normally using the NNTP protocol.
                         

  http                    Access is provided to any other information using the
                         HTTP search and retrieve protocol . The internal
                         addressing of the information system is mapped onto a
                         W3 path.
                         

  telnet                  Access is provided by an interactive telnet session.
                         This is provided ONLY as an interface to other
                         existing online systems which cannot or have not been
                         mapped onto the W3 space.
                         

  gopher                  Access is provided using the "gopher" protocol. The
                         gopher protocol is similar to HTTP but uses separate
                         concepts of menus and text files rather than
                         hypertext.
                         

   Other schemes we foresee are wais and x500.  Systems (such as WAIS) which
   are not currently accessed directly be W3 servers may be accessed though
   gateways, in which case the document address is encoded within the http
   address of the document in the gateway.  Browsers which do not have the
   ability to use certain protocols may (in principle) be configured to
   automaticaly use certain gateways for certain addressing schemes.
   

    This will allow, for example, simple PC-based clients to follow links
   through X500 name servers.
   

                                RELATIVE NAMING
                                       

   The address of a hypertext document is normally given within the context of
   another hypertext document. Where the addresses of the two documents are the
   similar, this allows only the difference between the two names to be given,
   saving space. An example is the address of the destination of a hypertext
   link , which is specified relative to the source document address.
   

    (A futher practical advantage is that a group of documents may be
   transmitted without internal changes, or accessed using more than one
   address.)
   

    In the WWW address format , the rules for relative naming are:
   

       If the "scheme" parts  are different, the whole absolute address must be
          given. Other wise, the scheme is omitted, and:
          

       If the "host" and/or "port" parts are the different, the host name and
          all the rest of the address must be given. The host name may be given
          using internet hostname conventions, ie domains may be omitted where
          different. This is not very well defined:  one tends to assume that
          if any dot is present, then the full domain name is being given, up
          to the root (.) domain, while if there are no dots, the domain is the
          same as that of the hostname part of the the base address.
          

       If the access and host parts are the same, then the path may be given
          with the unix convention, including the use of  ".." to mean indicate
          deletion of a path element. Within the path:
          

       If a leading slash is present, the path is absolute. Otherwise:
          

       The last part of the path of the base address (e.g. the filename of the
          current document) is removed, and the given relative address appended
          in its place.
          

       Within the result,  all occurences "xxx/.."  are recursively removed,
          where xxx is one path element (directory).
          

   The use of the slash "/" and double dot ".." in this case must be respected
   by all servers. If necessary, this may mean converting their local
   representations in order that these characters should not appear within path
   elements (see "escaping").
   

                          ADDRESS FOR AN INDEX SEARCH
                                       

   If a given hypertext node is an index, or the server has an index associated
   with it, then a search may be done on that index by suffixing the name of
   the index with a list of keywords, after a question mark:
   


        address_of_index ? keywordlist

   The address of the index is a normal hypertext address. In the keuwordlist,
   multiple keywords are separated by plus signs (+) .  (See BNF syntax
   description .)  The resulting string still does not contain any spaces. It
   may be considered to be the hypertext address of a document which is the
   result of making the keyword search on the index. Normally, if the search
   was successful, the document returned will contain anchors leading to other
   documents which match the selection criteria.
   

    The search method, and the logical and lexical functions, weights, etc
   applied to the keywords will depend on the index address.  One actual index
   may have several hypertext addresses,  which when searched on will behave in
   different ways. For example, one may allow a search on author-given keywords
   only, while another may be a full text search.  These things particular to
   an index should be descibed in the hypertext page for the index node itself
   (or in linked documents). For example, a server may allow specific boolean
   search combinations may be represented by the words "and", "or" and "not".
   

Example:


                http://cernvm/FIND/?sgml+cms

   indicates the result of perfoming a search for keywords "sgml" and "cms" on
   the index http://cernvm/FIND/.
   

                                HTTP ADDRESSING
                                       

   With an access code of http:,  a protocol introduced for  the WWW initiative
   is used to acquire data from a server. This is the "Hypertext Transfer
   protocol", HTTP , a simple search and retrieve (S and R) protocol.
   

    The syntax of an http address is, with [] indicating optional parts (see
   BNF description ),
   


        http : // hostname [ : port ] / path [ ? searchwords ]

   for example, the following are valid addresses:
   


        http://info.cern.ch/hypertext/WWW/TheProject.html

        http://crnvmc.cern.ch/FIND?sgml+examples

   HTTP addresses conform to the WWW conventions,  including the possibility of
   using the search format . The significance of the items in the path part of
   the document name is completely up to the server. Different paths may be
   used to select different databases, different views of the same database,
   etc.
   

  hostname                This is the name of the server in internet form. A
                         numeric form (e.g. 128.141.201.74) may be used, by the
                         domain name form (e.g. info.cern.ch) is preferred. The
                         hostname is mandatory.
                         

  port                    This is a numeric port number. If a non-numeric
                         string is used, it must be a defined service name.
                         Note that as there is no central repository for
                         service names (they are defined locaaly for each
                         host), a service name is NOT an appropriate way to
                         specify a port number for a hypertext address. If the
                         port number is omitted the preceding colon must also
                         be omitted. In this case, port number 2784 is assumed
                         [This may change!].
                         

  See also: WWW addressing in general , HTTP protocol .
                         

   _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                             W3 ADDRESSES OF FILES
                                       

   The format of a hypertext reference to a file is an extension of the unix
   naming system. The full explicit format is:
   

       file :  //  node /  directories /  name
   

    The actual protocols used by the client depend on the implementation of the
   browser and the environment. Typically, the browser will check to see
   whether the node is the local node,  or a node for which files are available
   mounted in some form of distributed file system.  If neither of these are
   the case, then the browser may try rpc, anonymous FTP or other protocols.
   

Examples


         file://cernvax.cern.ch/usr/lib/WWW/defaut.html

   This is a fully qualified file name.
   


         fred.html

   This relative name , used within a file, will refer to a file of the same
   node and directory as that file, but the name fred.html.
   

Improvements : Directory access

   The final file name should be optional. If the address ends with a '/', the
   browser should retrieve the contents of the specified directory and generate
   a page of virtual hypertext pointing to its contents. In addition, it could
   display an information file contained in that directory, if any is present.
   Suggested file names to search for in order : README.html, *README*.html,
   README, *README*, *readme*.
   

   

   

                        HYPERTEXT ADDRESS FOR NET NEWS
                                       

   The format of a hypertext reference to information in the internet/usenet
   news system can take any of the following forms:
   

  news: newsgroup         This refers to a list of articles currently available
                         in the given newsgroup. The newsgroup is a series of
                         alphanumeric characters and dots.
                         

  news:*                  This refers to a list of valid newsgroups.
                         

  news: message_id        This refers to a given article explicitly. The
                         message_id is optionally surrounded by angle brackets,
                         and must contain an @ sign.
                         

  

                         

   Possible extensions to this are more generous wildcarding for the list of
   newsgroups. It takes too long to load the whole list, and it would be more
   useful to be able to browse through a set of newsgroups.
   

    There is no way of referring to "unread" articles. Keeping track of this is
   the job of the browser.
   

Examples


         news:<12345678@cernvax.cern.ch>

         news:12345678@cernvax.cern.ch

   These addresses both refer to the same (imaginary!) article by its unique
   message-id.
   



news:comp.sys.next.announce

   This refers to a list of articles in the newsgroup comp.sys.next.announce.
   The list is, of course, a list of references to article by message-id.
   

                               TELNET ADDRESSING
                                       

   A telnet address is a spcecial case of a W3 address.
   

    When a telnet address is used, information can only be rertrieved using an
   interactive telnet session. This has the disadvantage that information
   cannot be indexed, searched, etc automatically, nor can it be gatewayed into
   other systems.  The telnet addressing form is used to allow a pointer to
   information systems such as library information systems which have not been
   gatewayed into the web properly yet.
   

    The syntax is, with [] indicating optional parts (see full BNF)
   


        telnet : / /  [ user @ ] host  [ : port ]

   There should be no spaces. For example, the following are valid telnet
   addresses:
   


        telnet://www@info.cern.ch:23

        telnet://www@info.cern.ch

        telnet://info.cern.ch

  user                   is the optional name of the user to be used for login.
                         If the username  is omitted, then so must be the "@"
                         sign. This is equivalent to the argument used with the
                         -l option on the ucb telnet command. When the username
                         is omitted, some access servers will prompt for a
                         username and password.
                         

  host                   This is the name of the server in internet form. A
                         numeric form (e.g. 128.141.201.74) may be used, by the
                         domain name form (e.g.  info.cern.ch) is preferred.
                         The host is mandatory.
                         

  port                   This is a numeric port number. If a non-numeric string
                         is used, it must be a defined service name. Note that
                         as there is no central repository for service names
                         (they are defined locaaly for each host),  a service
                         name is NOT an appropriate way to specify a port
                         number for a hypertext address. If the port number is
                         omitted the preceding colon must also be omitted. In
                         this case, port number 23 is assumed.
                         

   _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                               GOPHER ADDRESSING
                                       

   Gopher addresses indicate that the gopher protocol should be used to access
   the information.  The Gopher protocol is a simple internet protocol similar
   to HTTP . It allows the transfer of menus or plain text files.  (HTTP
   expresses both menus and plain text files as special cases of hypertext
   files). See the gopher protocol notes .
   

    The syntax is, with [] indicating optional parts (see BNF )
   


        gopher:// hostname [: port ] [/gtype/ [selector] ] [ ? search ]

   There should be no spaces. For example, the following are valid addresses:
   


        gopher://gopher.micro.umn.edu:70

        gopher://gopher.micro.umn.edu:70/1/

        gopher://gopher.micro.umn.edu:70

   The W3 address for a gopher item may be derived from the fields of a gopher
   menu line which has the format
   

  host                    This is the name of the server in internet form. A
                         numeric form (e.g. 128.141.201.74) may be used, by the
                         domain name form (e.g. info.cern.ch) is preferred. The
                         hostname is mandatory.
                         

  port                    This is a numeric port number. If a non-numeric
                         string is used, it must be a defined service name.
                         Note that as there is no central repository for
                         service names (they are defined locaaly for each
                         host), a service name is NOT an appropriate way to
                         specify a port number for a hypertext address. If the
                         port number is omitted the preceding colon must also
                         be omitted. In this case, port number 70 is assumed.
                         

  gtype                   This is a gopher item type number, a (hopefully
                         printable!) ASCII character.  Currently these types
                         are all ASCII decimal digit characters. Character "0"
                         (hex 30)  signifies a plain text file. Character "1"
                         signifies a Menu.  Character "7" signifies a
                         searchable index.  Character "8" should not be used in
                         a W3 address: use telnet addressing instead.  In
                         general W3 terms, the type is the first part of the
                         path. The rest of the path is the gopher selector
                         string. The type field is a hint to the client as to
                         how to represent the anchor, and how to follow it.
                         

  selector                This is the string to be sent to the gopher server to
                         identify the information required.
                         

   _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                          ESCAPING ILLEGAL CHARACTERS
                                       

   The W3 address syntax allows a path to contain most printable ASCII
   characters, but some are inevitably used for punctuation are excluded. W3
   addresses are sometimes used to represent addresses in some other space.
   This happens when an HTTP server, for example, uses file names as its
   document names, or when addresses from some other protocol (Gopher, WAIS,
   etc) are mapped into the W3 web.
   

    In these cases, a convention is normally used to map illegal characters in
   these "foreign" names onto the allowed set.
   

    In the case of an HTTP server,  any mapping may be used.
   

    A suitable convention is that a percent sign (%) followed by two
   hexadecimal digits (0-9 or a-f)  stands for the single character with ASCII
   hexadecimal code represented by those two digits (Most significant digit
   first).
   

    A percent sign itself must therefore be represented by %25, as 25 hex is
   the ASCII code for "%".
   

    _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                            W3 ADDRESS SYNTAX: BNF
                                       

   This is a BNF-like description of the W3 addressing syntax . We use a
   vertical line "|" to indicate alternatives, and [brackets] to indicate
   optional parts.   Spaces are representational only: no spaces are actually
   allowed within a W3 address. Single letters stand for single letters. All
   words of more than one letter below are entites described elsewhere in the
   syntax description.  (Entity names are here linked to their definitions,
   probably making this unreadable with the line mode browser.)
   

    An absolute address specified in a link is an anchoraddress . The address
   which is passed to a server is a docaddress .
   

  anchoraddress           docaddress [ # anchor ]
                         

  docaddress              httpaddress | fileaddress | newsaddress |
                         telnetaddress | gopheraddress
                         

  httpaddress             h t t p :   / / hostport  [  / path ] [ ? search ]
                         

  fileaddress             f i l e : / / host / path
                         

  newsaddress            n e w s : groupart
                         

  groupart               * | group | article
                         

  group                  ialpha [ . group ]
                         

  article                xalphas @ host
                         

  telnetaddress           t e l n e t : / / [ user @ ] hostport
                         

  gopheraddress           g o p h e r : / / hostport  [/ gtype  [ / selector ]
                         ] [ ? search ]
                         

  hostport                host [ : port ]
                         

  host                    hostname | hostnumber
                         

  hostname                ialpha [  .  hostname ]
                         

  hostnumber              digits . digits . digits . digits
                         

  port                    digits
                         

  selector                path
                         

  path                    void |  xalphas  [  / path ]
                         

  search                  xalphas [ + search ]
                         

  user                    xalphas
                         

  anchor                  xalphas
                         

  gtype                   xalpha
                         

  xalpha                  alpha | $ | _ | @ | ! | % | ^ | | * |  (  |  ) | . |
                         digit
                         

  xalphas                 xalpha [ xalphas ]
                         

  ialpha                 alpha [ xalphas ]
                         

  alpha                   a | b | c | d | e | f | g | h | i | j | k | l | m | n
                         | o | p | q | r | s | t | u | v | w | x | y | z | A |
                         B | C | D | E | F | G | H | I | J | K | L | M | N  | O
                         | P | Q | R | S | T | U | V | W | X | Y | Z
                         

  digit                   0 |1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
                         

  digits                  digit [ digits ]
                         

  alphanum                alpha | digit
                         

  alphanums               alphanum [ alphanums ]
                         

  void
                         

  See also: General description of this syntax, Escaping conventions.
                         

   _________________________________________________________________
   

                                                                         Tim BL
                                                                               

                                     HTML
                                       

   The WWW system uses marked-up text to represent a hypertext document for
   transmision over the network. The hypertext mark-up language is an SGML
   format. This defines the basic syntax used. The particular language, the set
   of tags and the rules about their use, and their significance is not part of
   the SGML standard. There being no standard on this, we have adopted a set
   which seems sensible. We call them HTML -- hypertext markup language. HTML
   is not an alternative to SGML, it is a particular format within the SGML
   rules (an SGML "DTD"). HTML parsers should ignore tags which they do not
   understand, and ignore attributes which they do not understand of tags which
   they do understand.
   

    See also:
   

  The tags                A list of the tags used in HTML with their
                         significance.
                         

  Example                 A file containing a variety of tags used for test
                         purposes.
                         

Default text

   Unless otherwise defined by tags, text is transmitted as a stream of lines.
   The division of the stream of characters into lines is arbitrary, and only
   made in order to allow the text to be passed through systems which can only
   handle text with a limited line length. The recommended line length for
   transmission is 80 characters. The division into lines has no significance
   (except in the case of  example sections and PLAINTEXT ) apart from
   indicating a word end. Line breaks between tags have no significance.
   

                                   HTML TAGS
                                       

   This is a list of tags used in the HTML language.  Each tag starts with a
   tag opener (a less than sign) and ends with a tag closer (a greater than
   sign).   Many tags have corresponding closing tags which identical except
   for a slash after the tag opener. (For example, the TITLE tag).
   

    Some tags take parameters, called attributes. The attributes are given
   after the tag, separated by spaces. Certain attributes have an effect simply
   by their presence, others are followed by an equals sign and a value. (See
   the Anchor tag, for example). The names of tags and attributes are not case
   sensitive: they may be in lower, upper, or mixed case with exactly the same
   meaning.  (In this document they are generally represented in upper case.)
   

    Currently HTML documents are transmitted without the normal SGML framing
   tags, but if these are included parsers will ignore them.
   

Title

   The title of a document is given between title tags:
   


        <TITLE> ... </TITLE>

   The text between the opening and the closing tags is a title for the
   hypertext node. There should only be one title in any node. It should
   identify the content of the node in a fairly wide context, and should
   ideally fit on one line.
   

    The title is not strictly part of the text of the document, but is an
   attribute of the node. It may not contain anchors, paragraph marks, or
   highlighting. the title may be used to identify the node in a history list,
   to label the window displaying the node, etc. It is not normally displayed
   in the text of a document itself. Contrast titles with headings .
   

Next ID

   This tag takes a  single attribute which is the number of the next
   document-wide numeric identifier to be allocated (not good SGML). Note that
   when modifying a document,  old anchor ids should not be reused, as there
   may be references stored elsewhere which point to them.  This is read and
   generated by hypertext editors. Human writers of HTML usually use mnemonic
   alpha identifiers.  Browser software may ignore this tag. Example of use:
   


        <NEXTID 27>

Base Address

   Anchors specify addresses of other documents, in a from relative to the
   address of the current document. Normally, the address of a document is
   known to the browser because it was used to access the document. However, is
   a document is mailed, or is somehow visible with more than one address (for
   example, via its filename and also via its library name server catalogue
   number), then the browser needs to know the base address in order to
   correctly deduce external document addresses.
   

    The format of this tag is not yet specified.
   

Anchors

   The format of an anchor is as follows:
   


        <A NAME=xxx HREF=XXX> ... </A>

   The text between the opening tag and the closing tag is either the start or
   destination (or both) of a link. Attributes of the anchor tag are as
   follows.
   

  HREF                    If the HREF attribute is present, the anchor is
                         senstive text: the start of a link. If the reader
                         selects this text,  he should be presented with
                         another document whose network address is defined by
                         the value of the HREF attribute . The format of the
                         network address is specified elsewhere . This allows
                         for the form HREF=#identifier to refer to another
                         anchor in the same document. If the anchor is in
                         another document, the atribute is a relative name ,
                         relative to the documents address (or specified base
                         address if any).
                         

  NAME                    The attribute NAME allows the anchor to be the
                         destination of a link. The value of the parameter is
                         that part of a hypertext address which follows the
                         hash sign.
                         

  TYPE                    An attribute TYPE may give the relationship described
                         by the hyertext link. The type is expressed by a
                         string for extensibility.  Strings for types with
                         particular semantics will be registered by the W3
                         team. The default relationship if none other is given
                         is void.
                         

   All attributes are optional, although one of NAME and HREF is necessary for
   the anchor to be useful.
   

IsIndex

   This tag informs the reader that the document is an index document. As well
   as reading it, the reader may use a keyword search.
   

    Format:
   


        <ISINDEX>

   The node may be queried with a keyword search by suffixing the node address
   with a question mark, followed by a list of keywords separated by plus
   signs. See the network address format.
   

Plaintext

   This tag indicates that all following text is to be taken litterally, up to
   the end of the file.  Plain text is designed to be represented in the same
   way as example XMP text, with fixed width character and significant line
   breaks. Format:
   


                <PLAINTEXT>

   This tag allows the rest of a file to be read efficiently without parsing.
   Its presence is an optimisation. There is no closing tag.
   

Example sections

   These styles allow text of fixed-width characters to be embedded absolutely
   as is into the document. The format is:
   


        <LISTING>

                ...

        </LISTING>

   The text between these tags is to be portrayed in a fixed width font, so
   that any formatting done by character spacing on successive lines will be
   maintained. Between the opening and closing tags:
   

       The text may contain any ISO Latin printable characters, including the
          tag opener, so long as it does not contain the closing tag in full.
          

       Line boundaries are significant, and are to be interpreted as a move to
          the start of a new line.
          

       The ASCII Horizontal Tab (HT) character should be interpreted as the
          smallest positive nonzero number of spaces which will leave the
          number of characters so far on the line as a multiple of 8. Its use
          is not recommended however.
          

   The LISTING tag is portrayed so that at least 132 characters will fit on a
   line.  The XMP tag is portrayed in a font so that at least 80 characters
   will fit on a line but is otherwise identical to LISTING. The examples of
   markup are here given using the XMP tag.
   

Paragraph

   This tag indicates a new paragraph. The exact representation of this
   (indentation,  leading, etc) is not defined here, and may be a function of
   other tags, style sheets etc. The format is simply
   


        <P>

   (In SGML terms, paragraph elements are transmitted in minimised form).
   

Headings

   Several levels (at least six) of heading are supported. Note that a
   hypertext document tends to need less levels of  heading than a normal
   document whose only structure is given by the nesting of headings. H1 is the
   highest level of heading, and is recommened for the start of a hypertext
   node.   It is suggested that the first heading be one suitable for a reader
   who is already browsing in related information, in contrast to the title tag
   which should identify the node in a wider context.
   


        <H1>, <H2>, <H3>, <H4>, <H5>, <H6>

   These tags are kept as defined in the CERN SGML guide. Their definition is
   completely historical, deriving from the AAP tag set.  A difference is that
   HTML documents allow headings to be terminated by  closing tags:
   


        <H2>Second level heading</h2>

Highlighting

   The highlighted phrase tags may occur in normal text, and may be nested. For
   each opening tag there must follow a corresponding closing tag. NOT
   CURRENTLY USED.
   



        <HP1>...</HP1>   <HP2>... </HP2> etc.

Glossaries


   A glosary (or definition list) is a list of paragraphs each of which has a
   short title alongside it.  Apart from glossaries, this format is useful for
   presenting a set of named elements to the reader. The format is as follows:
   



        <DL>

        <DT>Term<DD>definition pagagraph

        <DT>Term2<DD>Definition of term2

        </DL>

Lists


   A list is a sequence of paragraphs, each of which is preceded by a special
   mark or sequence number. The format is:
   



        <UL>

        <LI> list element

        <LI> another list element ...

        </LI>

   The opening list tag (UL for an unordered list, OL for an ordered one) must
   be immediately followed by the first list element. The representation of the
   list is not defined here, but a bulleted list for unordered lists,  and a
   sequence of numbered paraghraphs for an ordered list would be quite
   appropriate.
   

    "OL" IS NOT CURRENTLY USED



From timbl  Fri Jan 24 16:07:49 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12579; Fri, 24 Jan 92 16:07:49 GMT+0100
Date: Fri, 24 Jan 92 16:07:49 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9201241507.AA12579@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: www-interest@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: WorldWideWeb news: New software includes Gopher, News, Telnet access


           World Wide Web:          WHAT'S NEW IN '92
                                       

   Here's the latest (that we know) about W3, the hypertext information
   system. The High-Energy Physics world got
   its first official announcement of W3 in the CERN computer newsletter
   released at Christmas, with an introductory article. However, there are
   already many users of W3 outside HEP!
   

New browser

   The new year starts with a release (version 1.1 - our first official
   "version1" release) of the line mode browser.  This has protocol code in for
   a wealth of new information, with:
   

       o  Direct access to internet news groups
          

       o  Direct access to " gopher " campus-wide information systems etc.
          (Gopher  is system similar to W3 but using a web of menus and
	  plain text files rather than hypertext.  It is all readable as
	  hypertext using W3)
          

       o  Browsing of remote directories using FTP. Before, files could be
          read - now you can browse around as well. Any FTP site becomes a W3
          information source.
          

       o  Links directly to telnet (and rlogin) sites.  This allows
          hypertexts to point to online communications facilities which don't
          have servers.
          

       o  Extensibility using gateways - you can configure www to use specific
          gateways for any access protocol which might turn up in the future
          which it can't handle directly.
          

   The user interface is slightly improved,  and  you can save a document to a
   file, pipe it, or print it (under unix).
   

   The browser version can be picked up by anonymous FTP in the usual way
   including source binaries for several platforms.
   

   Those who have built other hypertext systems (such as Hyperbole and Viola)
   on top of the www browser will immediately gain access to the all this newly
   accessible information.
   

W3 at SLAC

   Hot on the heels of the announcement of the W3 server for the "SPIRES"
   High-Energy Physics preprint database at the Stanford Linear ACcelerator lab
   comes news from Paul Kunz that the line mode browser is installed on all
   unix systems at SLAC. Happy browsing, folks.
   

Browsing on VM/CMS

   The IBM mainframe at CERN now has a copy of the w3 browser (v0.14) running
   in line mode. We are considering ways to make it more full-screen in the VM
   style.  The v1.1 browser is under test and may be installed by the time
   you get this. Other VM sites mail me for details.
   

Browsing under X with Viola

   A version of www running in the "Viola" hypertext system looks neat - I just
   saw it running on an apollo and on a decstation. We shall release it soon
   with the coming new version of viola.
   

Conferences

   The W3 demonstration had an enthusiastic reception at " HyperText'91 " in
   San Antonio, Texas.
   

   Jean-Francois Groff presented W3 live at the Software Engineering
   and AI for High-Energy Physics workshop in La Londe, France.  We've also
   been asked to demonstrate, as well as present a paper, at the Joint European
   Networking Conference (JENC3) in Innsbruck, Austria, in May.

As usual, details by telnetting info.cern.ch (no username or password),
then selecting the "WorldWideWeb" link, software by anonymous FTP
from node info.cern.ch.
__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web project                (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155







From timbl  Fri Jan 24 17:12:46 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12783; Fri, 24 Jan 92 17:12:46 GMT+0100
Date: Fri, 24 Jan 92 17:12:46 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9201241612.AA12783@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: wei@xcf.berkeley.edu (Pei Y. Wei)
Subject: Viola - WWW interface
Cc: www-talk@nxoc01.cern.ch

Pei,

ViolaWWW works great!  It has impressed us here. Its fine on decstation and apollo  
displays (The crashing HP display was an HP X server problem.)   A strange thing is  
that it seems to be so fast -- a search in the CERN phone book seems instantaneous
(when done at CERN).  Perhaps the line mode browser's critical path is the
time taken for the terminal emulator to display the characters, and Viola is  
faster.

We're going to have to standardize (have a competetion for) the WWW icon.
I like the web, though some may be arachnophobic. We use a globe on the NeXT.
I wondered about some combination of an open book and a globe...

The viola changes aren't in www v1.1, but are in the master code for 1.2
(or 1.1a) already.

Now for details about the marking of fields for viola:

>To answer your questions:
>
>> Do I correctly assume that anything which is displayed on the screen  

>> surrounded by SI..SO characters can be clicked on and will then be  

>> sent to www?
>
>That's correct, for the old version of Viola. This scheme, however, has
>changed in the new version... (see below).
>
> Here are two important things Viola need to interface to www. Both might
> be effected by -viola:
>
>1) A consistant and hopefully unique prompt ending. It should always look
>the same ("::: " or whatever is predictable).

    Are you sure it isn't safer to use a non-printable character? That would
    be guaranted unique.

> 2) Instead of the old (and limiting) SI..SO scheme, the new scheme is to use
> the \h()\e() combination thusly:
>
>	See also CERN copyright[\h(2)\e(2)].
>
> The text within \h(...) is displayed highlited, and text within \e(...) 

> is ``embedded'' into the text field for retrieval (when clicked) by Viola
> scripts.

To separate the anchor text (highlished bit) and the meaning is a good idea.
In that case we would highlight the whole phrase: in the underlying mark-up,
the beginning of the anchor is marked as well as the end, although that is not
apparent with the line-mode browser normally. Using your example, this would come  
out like

	See also \h(CERN copyright)\e(2).

without any [numbers] displayed at all.

Again, the use of printable brackets () is a bit dangerous, as in fact
there will be cases in which unmatche dbrackets appear within the highlighted bit.


-------------


> I'm very interested in producing a usable WWW front-end (the current
> ViolaWWW was a one-nite hack to prove feasibility). I am also thinking
> of incorporating the HHTP code into Viola. Thou I have to look at the 

> code more...
>

If you want to look at the code, see whether your text widget can implement the
"Object Building" methods in HText.h.  These are the calls made by the www
communications code and parsers to build the hypertext.  If you can provide those,
it should be easy.  You just call one of the routines in HTAccess.h to
load a document by name, and it calls you back to create and build the document.


>> More qustions:
>> Did you need any mods to viola, or is everything you needed put into  

>> the "ht" stack?  In other words, was the viola directory a stnadrd  

>> release which we can replace with new versions when they come out?
>
> No modification was made to Viola in order to front-end the modified
> www.

Great stuff.


> [...] No problem! Give me a few days, and I may have the new ViolaWWW ready. 

> It will have a lot of improvements such as multiple fonts and geometry
> management.

If you really do multiple fonts, that would be great!  In that case
you will probably want to combine the www access code with viola itself
in order to get the style changes as a hypertext document is parsed.
That would be really neat.  It would remove all this marking of fields with
funny characters, as well.

>>      Tim 

>   -Pei
  Tim


From dkrieger%monty@rand.org  Fri Jan 24 19:09:34 1992
Return-Path: <dkrieger%monty@rand.org>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13051; Fri, 24 Jan 92 19:09:34 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA19386; Fri, 24 Jan 92 19:03:37 +0100
Received: from monty.rand.org by rand.org; Fri, 24 Jan 92 09:48:06 -0800
Received: from thoreau by monty; Fri, 24 Jan 92 09:48:03 PST
Received: from localhost by thoreau (4.1/SMI-4.1)
	id AA12826; Fri, 24 Jan 92 09:48:02 PST
Message-Id: <9201241748.AA12826@thoreau>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: www-interest@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: Re: WorldWideWeb news: New software includes Gopher, News, Telnet access 
In-Reply-To: Your message of Fri, 24 Jan 92 16:07:49 N.
             <9201241507.AA12579@ nxoc01.cern.ch > 
Date: Fri, 24 Jan 92 09:48:01 PST
From: David Krieger <dkrieger%monty@rand.org>

WHOEVER IS IN CHARGE OF THESE MAILING LISTS -- PLEASE REMOVE ME.
		dkrieger%monty@rand.org


From timbl  Tue Feb  4 08:44:25 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24645; Tue, 4 Feb 92 08:44:25 GMT+0100
Date: Tue, 4 Feb 92 08:44:25 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202040744.AA24645@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: emv@cic.net
Subject: Re: using WWW to follow gopher links 
Cc: www-talk@nxoc01.cern.ch, gopher@boombox.micro.umn.edu,
        wais-talk@quake.think.com

Ed,

All good stuff -- the world is coming together.

What do you think is the most useful www option for tracing what's out there?
I have two suggestions - one is a -list option (or something) which makes
www return only list of related documents, one on each line.
Another is one which will recursively run down a tree. The
trouble with the latter is telling it where to stop. Depth isn't really good enough
as probably you also want to constrain it to only gopher files, for example.
Perhaps the most flexible would be just the first option, with a perl etc script  
around ir to be flexible. I'd link to see for example lists of all telnet sites
references by gopher or www links, a wais server for www documents and gopher  
nodes.  My guess is that one index could handle the lot so long as one trimmed
off the few places where people have gatewayed in the entire ftp world, etc.
Then I'd like to see a www server for that index so that one could jump straight to  
the docoument wherever it came from.... I have to write an articel today, maybe
tomorrow I'll put in www -list.

KUTGW
	Tim

[PS: I assume you meant -p rather than -np in the www command. Perhaps we
should put in -np if it is more intuitive than -p for no paging.
I'll look at the CR problem.]

__________________original message follows
Tim,

Some more results of wais/www/gopher collaboration.

I have a new WAIS server running at wais.cic.net, called
"midwest-weather".  It's fed by loading in a bunch of weather reports
from a gopher at Minnesota every hour.  That system gets them from the
"weather underground" at Michigan using some hairy expect scripts, I
figured it'd be easier to get things out of gopher instead.

The script looks like:

WEATHER=gopher://mermaid.micro.umn.edu:150/00/Weather
www -n -np ${WEATHER}/Indiana/Fort%20Wayne | sed -e 's/.$//' > fort-wayne.in
www -n -np ${WEATHER}/Indiana/Indianapolis | sed -e 's/.$//' > indianapolis.in
www -n -np ${WEATHER}/Indiana/South%20Bend | sed -e 's/.$//' > south-bend.in
[...]

For some reason the gopher files are coming out of www with extra ^M's
on the end, as if they were DOS files; so the sed thing gets rid of them.

I don't see a way to do this with just one invocation of www, so
instead it runs once for each file.

Neither gopher nor WWW have the notion of a "recursive directory
listing", either some complete overview of the structure of the system
or some skeleton outline.  (I realize it's arbitrarily hard to do so
since any link could point off anywhere else.)  That makes it tougher
to do an archie-style catalog.  I think it wouldn't be that hard to
build a tree-walker for gopher that prints out a list of the
directories on every system that it can find and also the text of all
of the stuff that's in the ".about" directories.  At the very least
I'm doing some of that by hand now (just a script like the one above)
& waising it so I have some clue what all is out there.  *not* a 

replacement for the per-site indexes, but a cross-section.

--Ed


From jfg@bernd.cern.ch  Tue Feb  4 10:14:38 1992
Return-Path: <jfg@bernd.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24750; Tue, 4 Feb 92 10:14:38 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA08874; Tue, 4 Feb 92 10:08:04 +0100
Received: by bernd.cern.ch (AIX 3.1/UCB 5.61/4.03)
          id AA12890; Tue, 4 Feb 92 10:07:25 -2300
Date: Tue, 4 Feb 92 10:07:25 -2300
From: jfg@bernd.cern.ch (Jean-Francois Groff)
Message-Id: <9202050907.AA12890@bernd.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: forwarded message from emv@cic.net

------- Start of forwarded message -------
Received: from cernvax.cern.ch by bernd.cern.ch (AIX 3.1/UCB 5.61/4.03)
          id AA13075; Tue, 4 Feb 92 00:59:29 -2300
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA02837; Tue, 4 Feb 92 00:59:58 +0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA24681; Tue, 4 Feb 92 00:59:56 +0100
Received: from nic.cic.net by quake.think.com (4.1/SMI-4.0)
	id AA02414; Mon, 3 Feb 92 15:42:59 PST
Received: by nic.cic.net (4.1/SMI-4.1)
	id AA09725; Mon, 3 Feb 92 18:41:34 EST
Message-Id: <9202032341.AA09725@nic.cic.net>
In-Reply-To: Your message of "Mon, 20 Jan 92 10:19:51 +0100."
             <9201200919.AA05201@ nxoc01.cern.ch > 
From: emv@cic.net
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: jfg@cernvax.cern.ch, gopher@boombox.micro.umn.edu,
        wais-talk@quake.think.com
Subject: Re: using WWW to follow gopher links 
Date: Mon, 03 Feb 92 18:41:32 -0500

Tim,

Some more results of wais/www/gopher collaboration.

I have a new WAIS server running at wais.cic.net, called
"midwest-weather".  It's fed by loading in a bunch of weather reports
from a gopher at Minnesota every hour.  That system gets them from the
"weather underground" at Michigan using some hairy expect scripts, I
figured it'd be easier to get things out of gopher instead.

The script looks like:

WEATHER=gopher://mermaid.micro.umn.edu:150/00/Weather
www -n -np ${WEATHER}/Indiana/Fort%20Wayne | sed -e 's/.$//' > fort-wayne.in
www -n -np ${WEATHER}/Indiana/Indianapolis | sed -e 's/.$//' > indianapolis.in
www -n -np ${WEATHER}/Indiana/South%20Bend | sed -e 's/.$//' > south-bend.in
[...]

For some reason the gopher files are coming out of www with extra ^M's
on the end, as if they were DOS files; so the sed thing gets rid of them.

I don't see a way to do this with just one invocation of www, so
instead it runs once for each file.

Neither gopher nor WWW have the notion of a "recursive directory
listing", either some complete overview of the structure of the system
or some skeleton outline.  (I realize it's arbitrarily hard to do so
since any link could point off anywhere else.)  That makes it tougher
to do an archie-style catalog.  I think it wouldn't be that hard to
build a tree-walker for gopher that prints out a list of the
directories on every system that it can find and also the text of all
of the stuff that's in the ".about" directories.  At the very least
I'm doing some of that by hand now (just a script like the one above)
& waising it so I have some clue what all is out there.  *not* a 
replacement for the per-site indexes, but a cross-section.

- --Ed



------- End of forwarded message -------

From ojala@dolphin.funet.fi  Tue Feb  4 20:29:53 1992
Return-Path: <ojala@dolphin.funet.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25924; Tue, 4 Feb 92 20:29:53 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA02208; Tue, 4 Feb 92 20:23:20 +0100
Received: by dolphin.funet.fi id AA12182
  (5.65c/IDA-1.4.3 for www-talk@nxoc01.cern.ch); Tue, 4 Feb 1992 21:23:28 +0200
Date: Tue, 4 Feb 1992 21:23:28 +0200
Message-Id: <199202041923.AA12182@dolphin.funet.fi>
From: Petri Ojala <ojala@funet.fi>
Sender: ojala@dolphin.funet.fi
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: <9202040744.AA24645@ nxoc01.cern.ch >
Subject: Re: using WWW to follow gopher links 


I would prefer the latter suggestion plus some additions.  For example in
X environment it would be nice to be able to get a overview of the
"hypertext network" around the current location.  A sort of scan to the
next level following all the links at the current document.  (Maybe
with possibility see more than one level with the client keeping book
of not following one document more than once.)

The other feature would be fully recursive list of documents (or
references).  However this list would not follow all the links but
only those marked to be followed in the anchor specification.  As this
is quite dangerous feature it should be avoided but still possible
for example in Gopher-environments.  Of course the client could in
any case keep book of the documents shown and not follow same page
more than once.

Petri

From timbl  Fri Feb  7 16:40:18 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00647; Fri, 7 Feb 92 16:40:18 GMT+0100
Date: Fri, 7 Feb 92 16:40:18 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202071540.AA00647@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: www-talk@nxoc01.cern.ch
Subject: W3 server at NIKHEF;  Scripst as w3 servers


From W.vanLeeuwen@nikhef.nl (Willem van Leeuwen):

I installed the server on our recently installed network sun (nic.nikhef.nl).
With a very crude change in HTRetrieve it is possible to activate
a script in case of a keyword search:

/*		Handle a Retrieve request from a WWW client	HTRetrieve.c
...
extern int HTWriteASCII(int soc, char * s);	/* In HTDaemon.c */

	char *command;
	char string[80];
	char *ip;

/*		Read a file
...
    if (keywords) {
/*
	if (TRACE) fprintf(logfile,"HTHandle: can't perform search %s\n",
		arg);
	HTWriteASCII(soc,
	    "Sorry, this server does not perform searches.\n");
*/
	ip = string;
	command = "/user/a03/bin/WWWsh ";
	for (;*command!='\0';) *ip++ = *command++;
	for (;*arg!='\0';) *ip++ = *arg++;
	*ip++ = '?';
	for (;*keywords!='\0';) *ip++ = *keywords++;
	system (string);
	return fd;
    }
    

    StrAllocCopy(arg2, arg);
...

With the following script the finger information is sent to the client:

	name=`echo $@ | awk -F? '{print $2}`
	echo '<plaintext>'
	/usr/ucb/finger $name@nikhefh

This script only serves to demonstrate that this solution works.

Our default file is //nic.nikhef.nl./user/a03/www/default/default.html
but we are still experimenting so it is too early to hook nikhef into WWW.
I'll let you know when we have more useful information.

Best regards,
Willem van Leeuwen


From timbl  Fri Feb  7 17:58:24 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00861; Fri, 7 Feb 92 17:58:24 GMT+0100
Date: Fri, 7 Feb 92 17:58:24 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202071658.AA00861@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: emv@cic.net
Subject: Re: gopher can read www links right now!
Cc: www-talk



Begin forwarded message:

To: timbl@nxoc01.cern.ch
Subject: gopher can read www links right now!
Date: Fri, 07 Feb 92 09:15:54 -0500
From: emv@cic.net

> ho ho ho!  take a look at this:
> 

> www gopher://info.cern.ch:2784//GET%20/hypertext/WWW/FileFormat.html
> 

> accidental compatibility...

Ha!  There's a man who knows what's going on.... of course the slash just before
the GET is interpreted as a gopher type character which happens to be
invalid, so www just reads the document as plain text. With versiuon 1.1c or later  
(no, it's not released yet but I will if you want it), an "h" field means "html  
format". So I can say:(spot of the difference)

www gopher://info.cern.ch:2784/hGET%20/hypertext/WWW/FileFormat.html

File format

   The system uses marked-up text to represent a hypertext document when one is
   being stored in a file or transmitted over the network. Some of the formats
   available are illustrated in a test hypertext[1]. The hypertext mark-up
   language is an SGML format. This means basically that it uses angle brackets
   to delimit language constructs embedded within the text. The particular
   language 1 the set of tags and the rules about their use, and their
   significance 1 is not part of the SGML standard. There being no standard on
   this, we have adopted a set which seems sensible. Let's call them HTML --
   hypertext markup language. HTML is not an alternative to SGML, it is a
   particular format within the SGML rules (an SGML "DTD"). We have included in
   HTML  tags from the SGML tagset used at and once supported at CERN by  quite
   a lot of documentation and SGML examples.[2] The HTML parser will ignore
   tags which it does not understand, and will ignore attributes which it does
   not understand of CERN-SGML tags.
     [End]


Basically, Gopher addresses and w3 addresses are fairly interconvertable. And you  
are right, http and gopher protocols are very similar.  [The "w" field can only be  
used in a gopher menu. It means "The selector string is in fact a w3 address, don't  
expect a port number or host address to follow it".]

From timbl  Mon Feb 17 17:32:58 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18163; Mon, 17 Feb 92 17:32:58 GMT+0100
Date: Mon, 17 Feb 92 17:32:58 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202171632.AA18163@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Eelco van Asperen <evas@cs.few.eur.nl>
Subject: Re: WWW LineMode browser
Cc: www-talk

> From: Eelco van Asperen <evas@cs.few.eur.nl>
>
> I've been working on a curses-version of the line mode browser
> and I think the code works reasonably well. The modifications
> I made to v1.1 have now been incorporated into v1.2. Most
> changes are in the form of #ifdef CURSES ... #endif.
> I've also added lots of checks where malloc ea. are used to
> make sure that they return a non-NULL pointer.

Great to have a curses full-screen browser!  Something we has always throught ought  
to be done, but hadn't had the time.  Send me the patches, and I'll insert them  
into our current code and into the next release.

> Unfortunately, the PC version keeps crashing lately; I'm not sure
> if the problem is the PC-NFS toolkit or the browser code.
> The program hangs when one of the PC-NFS toolkit routines tries 

> to free a memory block; this could be caused by a corrupted memory
> chain. This in turn can be caused by freeing some pointer that
> was not malloc'ed.  The code runs ok under Unix even when I add
> the malloc-debugging library.

Sounds like a PC-sepcific bug there... but you never know. We have found something  
weird with realloc() under aix but that looks like an aix bug.

> Some other points;
> - a lot of files (especially *.html and *.txt files) don't end
>   with a linefeed; the SCCS source code control system does not
>  like this. Perhaps this can be fixed in future releases ?

I think this may be Edit on the NeXT which is happy to leave an uncompleted line on  
the end of a file.  I'll have to look at it.

> - could you make context diffs from the last to the current
>  release ? This would make it easier to see what has changed
>  and merge those changes with the ones I've made to my copy
>  of the last release.

Assuming your patches are useful -- which they certainly have been up till now,  
we'll incorporate them into the release.

> So, if you are interested in my patches, please let me now and I'll
> send them.

	yes please!


__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155








From timbl  Tue Feb 18 11:30:44 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19728; Tue, 18 Feb 92 11:30:44 GMT+0100
Date: Tue, 18 Feb 92 11:30:44 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202181030.AA19728@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: "Timo Harmo - SocSci U of Helsinki" <HARMO@valt.helsinki.fi>
Subject: W3 and other systems
Cc: www-talk@nxoc01.cern.ch

> From: "Timo Harmo - SocSci U of Helsinki"  <HARMO@valt.helsinki.fi>

>> In the end, there will be hypertext, certainly.
> Yes, I agree (I hate hierarchical information systems). But meanwhile
> gopher (wais I don't know about) offers working systems for many
> platforms, doesn't it?
>
> Let's continue on the list.

Ok, a discussion of the proliferation of protocols is a thing suitable for the
list.  Timo had been saying - why not broadcast about W3 on the WAIS and Gopher
lists/groups? Well, every now and again I mention it, but I do not want to misuse
the groups.

Yes, gopher offers working systems for many platforms.  The gopher protocol
is VERY like the basic HTTP protocol.  We feel that the W3 model is more general.
Its very easy to write gopher and w3 servers, but more difficult to write w3  
browsers. The trouble is, it takes longer to write a hypertext browser because the  
hypertext widgets won't exist. The gopher people are doing really good work by  
getting information out there.  This gives everyone experience. We run the w3 web  
with the gopher web as a subset. This gives a lot of data. It means w3-based search  
engines and indexers can include gopher data.

The disappointing thing of course is that a lot of information is better presented
as hypertext. If you like, a gopher menu page is ulrra-simple hypertext. Real  
hypertext, with the little formatting you get in HTML, is more powerful, and leads  
to better communication between the information provider and the reader. And  
communication is what we are talking about.

Actually, the HTTP protocol is not te most important thing for people to use. There  
will always be many S&R protcols. The W3 addressing syntax is much more important.

>> - Timo
	- Tim


From timbl  Tue Feb 18 14:25:04 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19967; Tue, 18 Feb 92 14:25:04 GMT+0100
Date: Tue, 18 Feb 92 14:25:04 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202181325.AA19967@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: kean@talon.ucs.orst.edu
Subject: Re: archie wais server - WWW access directly to files
Cc: wais-talk@think.com, www-talk@nxoc01.cern.ch


> If there's no improvement to the disk space used by these I'll announce the
> server to the world Wednesday morning in alt.wais and the archie-people mailing
> list.

Magic -- I really like it.  I have modified the WAIS-WWW gateway so that is the  
database is an archie one (i.e.database name contains "archie" :-| ) a W3 search of  
the database will give links directly to the files.  This relies on the headline  
starting with host:/filename.

For the first test I ran www, followed a pointer to your archie server, looked for
"html" to find any hypertext files out there. At the bottom of the list is a file  
of Ed Vielmetti's "archie.html" in Toronto.  Jumped over there.. it has a pointer  
to the comp.archives newgroup ... jumped into the newsgroup... jumped into an  
article...  This is how things SHOULD work!

Now the things which need neatening up. The gateway I was using is here in CERN,  
and the server is at ordst.edu. This implies a transatlantic link for every search.

- Would you or anyone like to run the gateway locally? Volunteers?

- Perhaps we should run the WAIS archie here, mirroring files.

- One of us could run a direct W3 archie server rather than using a gateway
     process.

To use www as an archie client,

	setenv  WWW_wais_GATE  http://info.cern.ch:8001/

(or point to a more local gateway!) and 


	alias archie  www wais://archive.orst.edu:9000/archie-orst.edu

I've put a pointer to the archie index in our CERN home page, but not publicised it  
yet.

Tim BL

From brewster@quake.think.com  Tue Feb 18 15:05:19 1992
Return-Path: <brewster@quake.think.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20087; Tue, 18 Feb 92 15:05:19 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA20506; Tue, 18 Feb 92 14:59:37 +0100
Received: by quake.think.com (4.1/SMI-4.0)
	id AA28643; Tue, 18 Feb 92 05:58:16 PST
Date: Tue, 18 Feb 92 05:58:16 PST
Message-Id: <9202181358.AA28643@quake.think.com>
From: Brewster Kahle <brewster@think.com>
Sender: brewster@quake.think.com
To: timbl@nxoc01.cern.ch
Cc: kean@talon.ucs.orst.edu, wais-talk@think.com, www-talk@nxoc01.cern.ch
In-Reply-To: Tim Berners-Lee's message of Tue, 18 Feb 92 14:25:04 GMT+0100 <9202181325.AA19967@ nxoc01.cern.ch >
Subject: archie wais server - WWW access directly to files

   Date: Tue, 18 Feb 92 14:25:04 GMT+0100
   From: timbl@nxoc01.cern.ch (Tim Berners-Lee)

   ...
   Magic -- I really like it.  I have modified the WAIS-WWW gateway so that is the  
   database is an archie one (i.e.database name contains "archie" :-| ) a W3 search of  
   the database will give links directly to the files.  This relies on the headline  
   starting with host:/filename.

I wish we used /filename@hostname so that waisretrieve could handle it (and
be compatible with the WAIS doc-id.

   Now the things which need neatening up. The gateway I was using is here in CERN,  
   and the server is at ordst.edu. This implies a transatlantic link for every search.

   - Would you or anyone like to run the gateway locally? Volunteers?
WAIS packets are small, but the distance makes reduces reliability.

   - Perhaps we should run the WAIS archie here, mirroring files.

   - One of us could run a direct W3 archie server rather than using a gateway
	process.

   To use www as an archie client,

	   setenv  WWW_wais_GATE  http://info.cern.ch:8001/

   (or point to a more local gateway!) and 


	   alias archie  www wais://archive.orst.edu:9000/archie-orst.edu

   I've put a pointer to the archie index in our CERN home page, but not publicised it  
   yet.

   Tim BL

This is really cool.

-brewster


From timbl  Tue Feb 18 16:44:35 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20333; Tue, 18 Feb 92 16:44:35 GMT+0100
Date: Tue, 18 Feb 92 16:44:35 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202181544.AA20333@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Brewster Kahle <brewster@think.com>
Subject: Documet ids (was Archie, WWW access directly to files, and document ids
Cc: jcurran@nnsc.nsf.net, kean@talon.ucs.orst.edu, wais-talk@think.com,
        www-talk@nxoc01.cern.ch

From: Brewster Kahle <brewster@think.com>

   Date: Tue, 18 Feb 92 14:25:04 GMT+0100
   From: timbl@nxoc01.cern.ch (Tim Berners-Lee)

Tim:
  ... This relies on the headline [of an archie index] 

	starting with host:/filename.

Brewster:

  I wish we used /filename@hostname so that waisretrieve could handle it (and
  be compatible with the WAIS doc-id.

Tim:

Well, Brester, I wish that we used //hostname/filename so that it would be
directly compatible with the W3 doc-id ;-). In fact, of course, the user never ses  
the doc-ids themselves as he browses.

But seriously, Brewster, you suggested to John Curran <jcurran@nnsc.nsf.net> that,  
on the subject of document ids, "[Brewster's] proposal that is on the table is  
worth implementing for a good run".  I would suggest that John look at w3 Universla  
Document Identifiers as a similar but more open and more established scheme.  W3  
has been running now for 18 months or so using the UDI syntax and the addressing  
syntax has expanded easily to include wais and now gopher. The www retrieval engine  
will handle any of these, FTP access and news access etc.

When x500 document naming becomes practical, it will be important that the UDI  
scheme can expand to accept x500 names.

There is nothing proprietory or w3-specific about w3 UDIs.  They are generic,  
caonnonical and univeral. Could I strongly suggest that you extend waisretrieve to  
use UDIs?

[Your objection to the w3 UDIs was that you prefered "@" to "//" because you wanted  
to use parsers written for mail.  Is that is a strong enough reason for inventing a  
new, wais-specific scheme instead of using an existing, open one?  Actually, the w3  
scheme uses @ for  //user@hostname/ when a username is needed, which is even more  
mail-like. The choice of punctuation is of course fairly arbitrary.]

The universal document identifier syntax is dead simple. It is described in BNF in  
/pub/www/doc/udi.txt.  Comments from all parties who haven't seen it before are  
solicited.

We must to put systems together to make the information universe happen, and not  
quarrel about trivia. We must remain open to the future.

I must put down the reasons for UDIs in a paper, but they're probably obvious to  
everyone on these lists....

	Tim

From kean@argh.ucs.orst.edu  Tue Feb 18 19:30:51 1992
Return-Path: <kean@argh.ucs.orst.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20651; Tue, 18 Feb 92 19:30:51 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA20672; Tue, 18 Feb 92 19:25:11 +0100
Received: from argh.UCS.ORST.EDU by mcsun.EU.net with SMTP;
	id AA14104 (5.65a/CWI-2.143); Tue, 18 Feb 1992 19:24:40 +0100
Received: from localhost.ucs.orst.edu by argh.UCS.ORST.EDU (4.1/SMI-DDN)
	id AA28008; Tue, 18 Feb 92 10:21:46 PST
Message-Id: <9202181821.AA28008@argh.UCS.ORST.EDU>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: kean@talon.ucs.orst.edu, wais-talk@think.com, www-talk@nxoc01.cern.ch
Subject: Re: archie wais server - WWW access directly to files 
In-Reply-To: Your message of Tue, 18 Feb 92 14:25:04 +0100.
			 <9202181325.AA19967@ nxoc01.cern.ch > 
Date: Tue, 18 Feb 92 10:21:42 PST
From: kean@argh.ucs.orst.edu

We've a T1 to the T3 backbone, so mirroring the archie stuff I have isn't 
a problem (from my end).

I'll provide the scripts and the glue etc to do the mirroring and indexing to
whoever wants to do it.  

**** I'd really like to see a few more waised archie servers out there ****
Why?  Well, mostly mercenary self-interest (archive.orst.edu is the campus 
news server too) + redundancy.  Takes 600 Mb to do it properly (if you have
400Mb main memory you could get away with 450 Mb disk space 8) ).

Kean

Kean Stump (503)-737-4740                 Why choose the *lesser* of
two evils?
OSSHE Network Operations                  Vote for Cthulu, '92
DOMAIN: kean@ucs.orst.edu                 UUCP: hplabs!hp-pcd!orstcs!kean

From kean@argh.ucs.orst.edu  Tue Feb 18 19:32:02 1992
Return-Path: <kean@argh.ucs.orst.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20657; Tue, 18 Feb 92 19:32:02 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA20691; Tue, 18 Feb 92 19:26:23 +0100
Received: from argh.UCS.ORST.EDU by mcsun.EU.net with SMTP;
	id AA14194 (5.65a/CWI-2.143); Tue, 18 Feb 1992 19:25:52 +0100
Received: from localhost.ucs.orst.edu by argh.UCS.ORST.EDU (4.1/SMI-DDN)
	id AA28016; Tue, 18 Feb 92 10:23:03 PST
Message-Id: <9202181823.AA28016@argh.UCS.ORST.EDU>
To: Brewster Kahle <brewster@think.com>
Cc: timbl@nxoc01.cern.ch, kean@talon.ucs.orst.edu, wais-talk@think.com,
        www-talk@nxoc01.cern.ch
Subject: Re: archie wais server - WWW access directly to files 
In-Reply-To: Your message of Tue, 18 Feb 92 05:58:16 -0800.
			 <9202181358.AA28643@quake.think.com> 
Date: Tue, 18 Feb 92 10:23:02 PST
From: kean@argh.ucs.orst.edu

I'm going to reformat the database to the /filename@hostname convention on 
the next mirror run I do.  I haven't forgotten 8)

Kean 

Kean Stump (503)-737-4740                 Why choose the *lesser* of
two evils?
OSSHE Network Operations                  Vote for Cthulu, '92
DOMAIN: kean@ucs.orst.edu                 UUCP: hplabs!hp-pcd!orstcs!kean

From emv@heifetz.msen.com  Wed Feb 19 05:48:30 1992
Return-Path: <emv@heifetz.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21309; Wed, 19 Feb 92 05:48:30 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA19551; Wed, 19 Feb 92 05:42:51 +0100
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lGj60-000HxNC@heifetz.msen.com>; Tue, 18 Feb 92 23:39 EST
Message-Id: <m0lGj60-000HxNC@heifetz.msen.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: Brewster Kahle <brewster@think.com>, jcurran@nnsc.nsf.net,
        kean@talon.ucs.orst.edu, wais-talk@think.com, www-talk@nxoc01.cern.ch
Subject: Re: Documet ids (was Archie, WWW access directly to files, and document ids 
In-Reply-To: Your message of Tue, 18 Feb 92 16:44:35 +0100.
             <9202181544.AA20333@ nxoc01.cern.ch > 
Date: Tue, 18 Feb 92 23:39:44 -0500
From: Edward Vielmetti <emv@msen.com>

Throughout the years people have used different ways to 
describe files available for anonymous ftp.  that has never
been standardized ever.  no reason to believe it ever will
be.

If we are going to come up with a special kind of document
that refers to a new document type that has the semantics
of "pointer to file available for anonymous ftp", then it
should be assigned a WAIS type tag, described, and specified.
I'd suggest the tag AFTP.  Someone write a spec, we'll all
write code, & be done with it.  (There's plenty of data after
all.)  It would be better to do that rather than to use a TEXT
type tag and bicker about the format.

I don't think it would be hard for the WWW gateway to WAIS to
do special things to documents if they had a different type,
and then use that to convert AFTP type documents to WWW format.
Ditto gopher, archie, etc. clients.

If it's TEXT, on the other hand, it can be *anything*.  Please
don't overload the semantics of the name of the server or the 
accidental formatting of the contents of the document.  I would
like to create AFTP records to stick into many servers.

--
Edward Vielmetti, vice president for research, MSEN Inc. emv@msen.com
      MSEN Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 741 1120
     "Things are glued together with spit and bailing wire now."

From emv@heifetz.msen.com  Wed Feb 19 05:49:40 1992
Return-Path: <emv@heifetz.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21315; Wed, 19 Feb 92 05:49:40 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA19574; Wed, 19 Feb 92 05:44:01 +0100
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lGj7D-000HxNC@heifetz.msen.com>; Tue, 18 Feb 92 23:41 EST
Message-Id: <m0lGj7D-000HxNC@heifetz.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: bug in HTAccess.c confused me - WWW_wais_GATEWAY
Date: Tue, 18 Feb 92 23:41:05 -0500
From: Edward Vielmetti <emv@msen.com>

the error message refers to WWW_wais_gateway, but the code
wants WWW_wais_GATEWAY.  either way is fine by me so long
as you're consistent...

--Ed

From timbl  Wed Feb 19 10:41:35 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21668; Wed, 19 Feb 92 10:41:35 GMT+0100
Date: Wed, 19 Feb 92 10:41:35 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202190941.AA21668@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: Documet ids (was Archie, WWW access directly to files)
Cc: Brewster Kahle <brewster@think.com>, jcurran@nnsc.nsf.net,
        kean@talon.ucs.orst.edu, wais-talk@think.com, www-talk@nxoc01.cern.ch



Date: Tue, 18 Feb 92 23:39:44 -0500
From: Edward Vielmetti <emv@msen.com>

> Throughout the years people have used different ways to 

> describe files available for anonymous ftp.  that has never
> been standardized ever.  no reason to believe it ever will
> be.
	Is there a similey for a big sigh?...

> If we are going to come up with a special kind of document
> that refers to a new document type that has the semantics
> of "pointer to file available for anonymous ftp", then it
> should be assigned a WAIS type tag, described, and specified.
> I'd suggest the tag AFTP.  Someone write a spec, we'll all
> write code, & be done with it.  (There's plenty of data after
> all.)  It would be better to do that rather than to use a TEXT
> type tag and bicker about the format.

This Archie-wais-www has to get around the fact that the doc-id in  
the search response is not the doc-id of the file, it's the id of a  
line in the site listing which refers to the file.  However, one  
wants to jump straight to the file, rather than to the site listing.  
For this reason, the gateway throws away the wais doc-id and  
generates an id for the file itself from the headline. If the doc-id  
itself was that of the file (in any format), that would be cleaner of  
course, as the headline could be in any human readable format. [Would  
that be easy, Kean?]

> I don't think it would be hard for the WWW gateway to WAIS to
> do special things to documents if they had a different type,
> and then use that to convert AFTP type documents to WWW format.
> Ditto gopher, archie, etc. clients.

It would be possible, sure. Do we want to have to access an AFTP type  
document just to get a pointer to an FTP site? This takes time, I'd  
prefer top skip that step.

> If it's TEXT, on the other hand, it can be *anything*.  Please
> don't overload the semantics of the name of the server or the 

> accidental formatting of the contents of the document.  I would
> like to create AFTP records to stick into many servers.

I agree that overloading the database name is horrible! Its a hack to  
show what is possible. You can only do it cleanly if you has  
universal document ids of some form or other.

Sure, clients and gateways can convert UDI formats -- avoids the  
bickering but not as cool as having a common format. (Need that  
smiley again!)

[BTW, If you're going to have an AFTP file format for pointing to  
aftp sites, will you also need a GOPH file format for pointing to  
gopher sites, and a NEWS file format for pointing to newsgroups...?   
Suppose you do have some universal id scheme. Then you could have one  
format for a file of pointers. Using the SES filter system, indexing  
that file could (if it looked like a README for example) retrieve the  
referenced document and index the actual document rather than just  
the name.]

	Tim


__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155






From timbl  Fri Feb 21 10:52:53 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28042; Fri, 21 Feb 92 10:52:53 GMT+0100
Date: Fri, 21 Feb 92 10:52:53 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202210952.AA28042@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: brennan@hal.com (Dave Brennan)
Subject: Making an http gateway
Cc: www-talk@nxoc01.cern.ch

Dave,

> In our network environment there is only one machine that has  
direct access
> to the Internet for security reasons.  Is there a way to run the  
client on
> some other system in our net and have it use the "gateway" machine?   
I am
> very interested in learning more about the WWW and similar  
projects.  It's
> kind of annoying that the setup here makes this difficult.
>
> Thanks,
>
> Dave Brennan

That's a very good question, as lots of companies have this  
restriction.
Fortunately, the browser is set up so that you can
pass requests (according to protocol in the document id) to a  
gateway.  You can on the client node setenv WWW_http_GATEWAY and  
WWW_wais_GATEWAY etc to point gateway addresses. At that address you  
need to set up a server to access the remote whateveritis and send  
the results back as hypertext.

	HTTP gateway:

I've just tried this and it seems to work fine. You use the www  
client as a server. On your gateway machine,

1. Put a new service (htgate, 8002 say) into /etc/services or  
whatever you use instead.

2. Set up inetd.conf to run /usr/local/bin/htgate when a tcp  
connection to htgate comes in. You have to kill -HUP the inetd  
process to get it to take the change into account.

3. Use this htgate script which reads the command line and then calls  
www with its second parameter and sends the source to the caller:

#! /bin/sh
read get docid
/usr/local/bin/www -source -n -na -p "$docid"

That will handle anything where the source is HTML.  It won't handle  
internet news, gopher, etc.  (For that we need an option on the  
browser -html which generates HTML
from news, etc, which we haven't done yet -- but you're not the first  
to ask)

I suggest you run the wais gateway separately, but you could change  
the shell script to check the protocol on the doc-id and run www or  
WAISGate as appropriate. That means you set separately on the client

	setenv WWW_http_GATEWAY http://gate.hal.com:8002/
	setenv WWW_wais_GATEWAY http://gate.hal.com:8001/

For the wais gateway, you get the sources from info.cern.ch  
/pub/www/stcWWWDaemon_v.vv.tar.Z and compile it. The documentation is
http://info.cern.ch/hypertext/WWW/Daemon/User/Guide.html and linked  
documents.

I hope this solves the problem and opens up the web for the  
organsiation.  If you need the option for news or gopher, we'll have  
to put the -html option in. Let me (and the list) know how you get  
on...

	Tim

From timbl  Mon Feb 24 17:21:19 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02717; Mon, 24 Feb 92 17:21:19 GMT+0100
Date: Mon, 24 Feb 92 17:21:19 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202241621.AA02717@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: W.vanLeeuwen@nikhef.nl (Willem van Leeuwen)
Subject: Re: www @ nikhef
Cc: www-talk@nxoc01.cern.ch

Willem,

Great to see the NIKHEF server on the web!  For others on the list,
see Willem's message below for examples of how to put together
www servers, including indexes, out of simple shell scripts.

I have put links to NIKHEF from our home page, and from the subject and  
organisation index.

There is one little bug in Xfind: the reference to //nic/ rather than //nic.nl./  
will work for those in the Netherlands but not for the rest of us.
(By the way, xfind is the name of a program by Bernd Pollermann which runs on VM  
... he might feel that the name is his.)

This is a neat server, particularly as it uses existing unix tools and data to  
provide a useful service.... keep up the good work!

	Tim BL

______________________________________________________________________
Date: Thu, 20 Feb 92 14:58:11 +0100
From: W.vanLeeuwen@nikhef.nl (Willem van Leeuwen)
Organisation: Nikhef-H (National Institute for Nuclear and High-Energy Physics)
Address: Kruislaan 409, P.O. Box 41882, 1009 DB Amsterdam, the Netherlands
Phone: +31 20 5920411, +31 2995 2499 (home)
Telex: 10262 hef nl
Telefax: +31 20 5925155
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Subject: Re: www @ nikhef
Cc: a03@nikhef.nl

Hi,

There is a very preliminary version of xfind working on a very stupid set
of helpfiles.
These helpfiles are input to a VAX like help, so browsing with www
does not give very useful information, I only want to show that
the principle works.

If you want to try you may link NIKHEF into WWW with

	http://nic.nikhef.nl./user/a03/www/default/NikhefGuide.html

I now have 2 files which can be searched with keywords: the telephone
directory and this set of helpfiles.

The http daemon calls the script WWWsh:

WWWsh
=====

name=`echo $@ | awk -F? '{print $1}`
keys=`echo $@ | awk -F? '{print $2}`
name=`basename $name .html`
/user/a03/bin/$name.sh $keys

which may call Phone.sh or Xfind.sh

Phone.sh
========

name=$1
echo "<title> $name at NIKHEF</title>"
echo "<h1> $name</h1>"
grep -i $name /user/a03/www/default/phone.html

phone.html is a file which is generated every night from the finger
information on our central server.

Xfind.sh
========

name=$1
echo "<title> $name at XFIND </title>"
echo "<h1> $name</h1>"
#
# Do not forget to put 

#	pass	/user/a03/www/xfind/*
# in httpd.conf
#
cd /user/a03/www/xfind
files=`echo $name | /usr/lib/refer/hunt -Fn -Ty Index`
echo $files | sed -e "s/\///g" | awk '{for (i=1;i<=NF;i++) printf("<a  
href=http://nic/user/a03/www/xfind/%s>%s</a><p>",$i,$i)}'

The helpfiles are in a different directory, which has to be mentioned
in httpd.conf.

The index is made with the command

	/usr/lib/refer/mkey -w -f files | /usr/lib/refer/inv

files contains the names of the files to be indexed.
This is a rather crude approach, since the index contains a lot of keywords,
but again the first aim was to get something working.

I'll try to write down wy experiences with www in a more coherent way,
until then I hope this information is of some help.

Regards, Willem


From timbl  Tue Feb 25 15:44:49 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04800; Tue, 25 Feb 92 15:44:49 GMT+0100
Date: Tue, 25 Feb 92 15:44:49 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202251444.AA04800@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: W.vanLeeuwen@nikhef.nl (Willem van Leeuwen)
Subject: Browser append to file, and SPIRES server
Cc: www-talk@nxoc01.cern.ch, pfkeb@slacvm.slac.stanford.edu



> Date: Tue, 25 Feb 92 13:40:05 +0100
> From: W.vanLeeuwen@nikhef.nl (Willem van Leeuwen)


> Some remarks about the new browser:
> 

> The use of >> to add text of a document to an existing file should  
be
> documented in the help:
>
>  > file          Save the text of this document in a file.
>  >>file          Add the text of this document to a file.
>

	Good point -- In fact I hadn't noticed that it works by
	virtue of the same code which makes ">" work!
	It's in the help for the next version.

> When browsing the SPIRES database one has to type find twice:
> the first is interpreted by the browser, the second by SPIRES.
> (The old browser used K, which could be omitted).

	Yes - This should be fixed at the server end.

> SPIRES does not give always the promised number of references.
> Try f find author holthuizen, there should be 111 references, only
> 104 are shown.

	This too.  The last one's a bit odd, as the limit seems to 

	vary. Perhaps its in lines. Another thing is taht the lines
	trainling spaces to 80 characters which makes them wrap aound
	a 79-character terminal. They could be stripped in the server
	EXEC too.

>Willem
	-Tim


From timbl  Tue Feb 25 15:52:17 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04826; Tue, 25 Feb 92 15:52:17 GMT+0100
Date: Tue, 25 Feb 92 15:52:17 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202251452.AA04826@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: "Mark P. McCahill" <mpm@boombox.micro.umn.edu>
Subject: Re: Size limits for text files? 
Cc: emv@cic.net, JONZY@cc.utah.edu, gopher-news@boombox.micro.umn.edu,
        www-talk@nxoc01.cern.ch

> Another thing clients should do (but don't yet) is to cache  
information.
> That is, the client ought to keep the previous list of gopher items  
in memory 

> so you don't have to fetch it again. Of course, there should also  
be a timer...

As happens, the www client caches information. The number of  
documents (text files or menus) cached is currently 2, defined by  
LOADED_LIMIT in GridText.c. We'll increase it next release, as 5  
seems more useful.  There's no timer, but it its a good idea.

	Tim BL

From emv@cic.net  Tue Feb 25 18:25:12 1992
Return-Path: <emv@cic.net>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05367; Tue, 25 Feb 92 18:25:12 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA01587; Tue, 25 Feb 92 18:19:45 +0100
Received: by nic.cic.net (4.1/SMI-4.1)
	id AA15081; Tue, 25 Feb 92 12:19:14 EST
Message-Id: <9202251719.AA15081@nic.cic.net>
To: timbl@nxoc01.cern.ch
Cc: "Mark P. McCahill" <mpm@boombox.micro.umn.edu>, JONZY@cc.utah.edu,
        gopher-news@boombox.micro.umn.edu, www-talk@nxoc01.cern.ch
Subject: Re: Size limits for text files? 
In-Reply-To: Your message of "Tue, 25 Feb 92 15:52:17 +0100."
             <9202251452.AA04826@ nxoc01.cern.ch > 
Date: Tue, 25 Feb 92 12:19:12 -0500
From: emv@cic.net

> WWW caches texts

hmmm.  If you were running a WWW "http" gateway, I suppose you
could do a big pile of caching - rather than have every individual
user go out to the world to fetch documents individually, they
would go to your relay server which might well have the things
they were interested in already.

Such things have also been proposed for FTP servers, I guess I
would add -- you'd connect to a local caching FTP server, from
which you could 'cd' to other anonymous FTP sites; if the local
cache didn't have what you wanted it'd go off to the real place
to get it.

Fortunately gopher and WWW both seem more amenable to 
hacking^H^H^H^H^H^H^H research in this regard than the
usual FTP demon.

w/r/t size - like I say I don't want to have hard coded limits
for things, but people doing design need to keep in mind that
if a menu pick results in a megabyte worth of text being thrown
at my client I'm not going to be happy about it...

--Ed

From timbl  Thu Feb 27 17:22:44 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09065; Thu, 27 Feb 92 17:22:44 GMT+0100
Date: Thu, 27 Feb 92 17:22:44 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9202271622.AA09065@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: chi-arch@uccvms.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca
Subject: Draft: Universal Document Identifiers
Cc: Rare WG3 <rare-wg3@surfnet.nl>, nisi@merit.edu


An information universe on the [Inter]net requires a cannonical form  
for the name or address of a document.  Building on much previous  
network discussion, a draft discussion paper

	Universal Document Identifiers on the Network

 is now availableby anonymous FTp from node info.cern.ch as
	/pub/www/doc/udi1.ps   (or if desperate .txt)

or, to use its UDI, file://info.cern.ch/pub/www/doc/udi1.ps.
This describes an addressing scheme encompassing many objects on the  
network including archived files, news articles and groups, gopher
things, wais indexes, queries, and documents.

Comments are solicited.

A shorter paper on the requirements a universal hypertext system
such as WWW imposes on WAIS and x.500 protocols is
file://info.cern.ch/pub/www/doc/wais_x500_www.ps (or .txt)
is intended as input to the IETF wais/x500 BOF in March
(which I might be able to go to)

	Tim

__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155






From bcn@isi.edu  Thu Feb 27 19:59:31 1992
Return-Path: <bcn@isi.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09473; Thu, 27 Feb 92 19:59:31 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA10546; Thu, 27 Feb 92 19:54:05 +0100
Received: from tgo.isi.edu by venera.isi.edu (5.65c/5.65+local-3)
	id <AA02373>; Thu, 27 Feb 1992 10:55:15 -0800
Date: Thu, 27 Feb 92 10:52:44 PST
Posted-Date: Thu, 27 Feb 92 10:52:44 PST
Message-Id: <9202271852.AA05956@tgo.isi.edu>
Received: by tgo.isi.edu (4.1/4.0.3-4)
	id <AA05956>; Thu, 27 Feb 92 10:52:44 PST
From: bcn@isi.edu (Clifford Neuman)
Sender: bcn@isi.edu
To: timbl@nxoc01.cern.ch
Cc: chi-arch@uccvms.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca, rare-wg3@surfnet.nl, nisi@merit.edu
In-Reply-To: Tim Berners-Lee's message of Thu, 27 Feb 92 17:22:44 GMT+0100 <9202271622.AA09065@ nxoc01.cern.ch >
Subject: Draft: Universal Document Identifiers

I have glanced through your document on universal directory
identifiers, and you seem to have left out Prospero.

Prospero is a little different in that it does late binding of the
access method.  In particular, a Prospero link consists of two parts,
a host name, and a name of the object on that host.  The latter part
is usually a path name, but in reality, it can be any string,
including simply a unique ID.  Thus, a Prospero link might look like

TGO.ISI.EDU /a/b/c  or   GUM.ISI.EDU 27

A Prospero link has a few other fields as well, but perhaps less
important.  There is a type field for the hostname.  It indicates
whether the hostname is an Internet name or address, or perhaps some
other kind of name or address.  Only one type is presently supported
(INTERNET-D) though, and that type includes Internet host names or
addresses, with or without an optional Internet UDP port.

  examples: TGO.ISI.EDU, TGO.ISI.EDU(191), 128.9.224.123, or 128.9.224.123(191)

Only a single type is used for all four types of Internet addresses
since they are not syntactically ambiguous.

The name relative to the host is also typed.  Presently, the only type
supported is ASCII, but the type field is there just in case.

Three other fields are a version number, a unique ID, and a type.  The
meaning of the version number should be fairly obvious.  A version
number of 0 matches the most recent version.  At present, most objects
don't have version numbers, but I felt it was important to include in
in the link data.  The purpose of the unique ID is less obvious.  It
is there to provide a mechanism for detecting when an object has been
deleted and replaced with an object of the same name.  In some cases,
it might be important to note that the object being retrieved is not
the same as the one to which the original link was made.  I will talk
about the type field later since it is not what you might think.

So, that is a Prospero link.  Note, that it does not specify the
access method.  Binding to an access method is accomplished by sending
a message to the Prospero server at the address in the link, and
requesting the access method for the named object.  The response
includes a sequence of tokens, the first identifies the access method,
and the remainder identify the information specific to the access
method (beyond that which already is part of the link).  If you
understand the access method, then you also know how to interpret the
remaining tokens.

For example, a response indicating access by anonymous FTP might be

  ANONYMOUS-FTP /pub/pfs/guest/README BINARY

Note that the host name is not specified since the hostname from the
link is assumed.  If the host name were different than that in the
link, then it would be specified in the response.  The path is
specified, however, because the path to be passed to the FTP program
is different than that in the link (in this case, the link included
the prefix /homes/june/ftp.

Similar responses are supported for other methods, and a response
might include more than one access method, in which case the
application choose the method that best suits its needs.

Now, back to the type field.  One of the shortcomings of the approach
as described so far is that it requires a Prospero server to run on
the system storing the object to be referenced.  This shortcoming is
addressed by the external link.  The type field in a Prospero link
provides information on what can be done with the link.  The three
common types are FILE, DIRECTORY, and EXTERNAL.  The links described
above were of type FILE.  If a links type is directory, its contents
can be listed by contacting the Prospero server (i.e. the links in the
directory can be returned).  If a links type is EXTERNAL, it means
that the object should be accessed without contacting a Prospero
server to obtain the access method (usually because a Prospero server
is not running on the target site).  Instead, the access information
that would otherwise have been returned is encoded as part of the
type.  Thus for example the type of an external link to the file
mentioned above would be.

  EXTERNAL(AFTP,BINARY)

Note that for external links using the AFTP or FTP method, the name
field of the link contains the path name to be passed to FTP.  For
other access methods, the meaning of the field is defined by the
particular access method to be used.

Anyway, I hope this adequate explains the form of Prospero
identifiers, and I hope that you can fit it in to your proposed
format. 

	~ Cliff





From timbl  Mon Mar  2 12:36:33 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14036; Mon, 2 Mar 92 12:36:33 GMT+0100
Date: Mon, 2 Mar 92 12:36:33 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203021136.AA14036@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: bcn@isi.edu (Clifford Neuman)
Subject: Re: Draft: Universal Document Identifiers
Cc: cni-arch@uccvma.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca

Cliff,

Thanks for your input, with explanations of addressing in Prospero.

Prospero should certainly go into the document. Indeed, it seems to  
fit in very well.   The small differences raise some interesting  
questions -- reactions off the top of my head follow, in the sequence  
of you messsage.

	Tim
  _______________________________________________

> Date: Thu, 27 Feb 92 10:52:44 PST
> From: bcn@isi.edu (Clifford Neuman)
> 

> I have glanced through your document on universal directory
> identifiers, and you seem to have left out Prospero.

Omission was from ignorance of the details you provide here and will  
certainly be corrected. Prospero is very relevant.

> In particular, a Prospero link consists of two
> parts, a host name, and a name of the object on that host.  The
> latter part is usually a path name, but in reality, it can be any 

> string, including simply a unique ID.  Thus, a Prospero link might 

> look like
>
> TGO.ISI.EDU /a/b/c  or   GUM.ISI.EDU 27

The UDI syntax //TGO.ISI.EDU/a/b/c or //GUM.ISI.EDU/27 matches that  
very well.  I suggest the prefix "prospero:" for prospero addresses.

> A Prospero link has a few other fields as well, but perhaps less
> important.  There is a type field for the hostname.  It indicates
> whether the hostname is an Internet name or address, or perhaps  
some
> other kind of name or address.  Only one type is presently  
supported
> (INTERNET-D) though, and that type includes Internet host names or
addresses, with or without an optional Internet UDP port.
>
>  examples: TGO.ISI.EDU, TGO.ISI.EDU(191), 128.9.224.123, or  
128.9.224.123(191)

The UDI scheme foresees these possibilities. These would map onto
//TGO.ISI.EDU/, //TGO.ISI.EDU:191/, //128.9.224.123/ and  
/128.9.224.123:191/ respectively. The whole UDI of the file above  
would be (if quoted out of the "prospero:" context),

	prospero://TGO.ISI.EDU:191/a/b/c


We, also, wondered about how to extend the system when other  
underlying protcols are used with the same higher-level protocol.  
Suppose for example later one adds dial-up prospero. Should one write

	prospero://dialup:+12025672654:200/a/b/c

or 	prospero-dialup:/+12025672654:200/a/b/c ?

My feeling is that the number of underlying network layers which have  
complete world-wide coverage will remain low. Furthermore, one can  
even imagine gateways there, so that those without X25 acces, say,  
can go throuh some transport level gateway from TCP/IP if the need  
arises. This suggests putting other low-level addresses into the  
"host/port" field, encoded in some fashion. One would hope that there  
will be less forms of transport service access point address than  
there will be application layer protocols.

> The name relative to the host is also typed.  Presently, the only  
type
> supported is ASCII, but the type field is there just in case.

The rule we have used is to put type information, if part of the  
link, into the path.  protocols differ upon whether they regard it as  
part of the link or it is returned when you try to retrieve the data.
In the latter case (which I prefer) it should not be in the UDI at  
all.

> Three other fields are a version number, a unique ID, and a type.  


The version number should I suggest be part of the path. Its  
significance will tend to vary between servers. The trouble is, as  
you say, noone has really put up a system dealing with multiple  
versions. We imagined having hidden links from a document to its  
previous, next and latest versions, and to a table of versions.

>The purpose of the unique ID is ... to provide a mechanism for  
detecting when an object has been
> deleted and replaced with an object of the same name.  In some  
cases,
> it might be important to note that the object being retrieved is  
not
> the same as the one to which the original link was made.

This is non-obvious.  My feeling is that a unique id is a useful  
thing, which I would regard as "header" information, ie information  
you can ask the server for.  Putting it into the link I'm not so sure  
about.  Suppose, for example, the retrieval goes through several  
stages of pointers, being referenced by serveral servers. Do you want  
to check that the final document, or the first link, was really the  
same as the one you made the original link to?

> Binding to an access method is accomplished by sending
> a message to the Prospero server at the address in the link, and
> requesting the access method for the named object.  The response
> includes a sequence of tokens, the first identifies the access  
method,
> and the remainder identify the information specific to the access
> method (beyond that which already is part of the link).  If you
> understand the access method, then you also know how to interpret  
the
> remaining tokens.

That "late binding" is just the sort of "name-server" function which  
I was talking about, and which for example x500 might also fit into.
So long as both the input and the output to the process are UDIs,  
it's very flexible.

> For example, a response indicating access by anonymous FTP might be
> 

>  ANONYMOUS-FTP /pub/pfs/guest/README BINARY

We'd write that now as file:/(samehost)/pub/pfs/guest/README.  
Currently, if the access protocol has to be specified, then the host  
does too. It could default ot the host of the context of the UDI even  
when protcol fields are different.

The "binary" flag is an interesting one and a perennial question.  My  
assumption was that if you know how to handle a file when you've got  
it, then you must know how to transfer it.  In practice with FTP both  
mean that you have to have a table of file suffixes.

> Similar responses are supported for other methods, and a response
> might include more than one access method, in which case the
> application choose the method that best suits its needs.

Sounds fine.

> Now, back to the type field.  One of the shortcomings of the  
approach
> as described so far is that it requires a Prospero server to run on
> the system storing the object to be referenced.  This shortcoming  
is
> addressed by the external link.  The type field in a Prospero link
> provides information on what can be done with the link.  The three
> common types are FILE, DIRECTORY, and EXTERNAL.  The links  
described
> above were of type FILE.  If a links type is directory, its  
contents
> can be listed by contacting the Prospero server (i.e. the links in  
the
> directory can be returned).  If a links type is EXTERNAL, it means
> that the object should be accessed without contacting a Prospero
> server to obtain the access method (usually because a Prospero  
server
> is not running on the target site).  Instead, the access  
information
> that would otherwise have been returned is encoded as part of the
> type.  Thus for example the type of an external link to the file
mentioned above would be.

  EXTERNAL(AFTP,BINARY)

Your "EXTERNAL" type is a pointer to a document in another naming  
scheme which neat, and expandable -- I like it.  The UDI syntax was  
basically invented to allow one to to that, so that all these systems  
can work together. Basically, type EXTERNAL(xxx) maps onto putting an  
xxx: prefix on the UDI. In your example, it maps to giving a file:  
reference.

You have, for prospero, the flag in the link as to whether the object  
is a directory or a file.  So does the Gopher.  This is useful for  
displaying different icons, etc. for the user.  A snag is that if we  
include anonymous FTP file systems, the NLIST command doesn't tell  
you that information, so it doesn't map.  You have to try to retrieve  
it and if that fails, cd to it.  If the flag is considered useful,  
then we could use the converntion (of ls-F) that a/c/b/ is a  
directory and a/b/c is a file. The trouble is, that you can't get  
that information from an FTP server without assuming unix to parse a  
long listing.

Do I _have_ to know in advance whether a Prospero item is a directory  
or a file?

> Note that for external links using the AFTP or FTP method, the name
> field of the link contains the path name to be passed to FTP.  For
> other access methods, the meaning of the field is defined by the
> particular access method to be used.

Yup - the UDI assumptions exactly.

> Anyway, I hope this adequate explains the form of Prospero
> identifiers, and I hope that you can fit it in to your proposed
> format. 

>
>	~ Cliff

Thanks for a very clear explanation.  It soudds as though Prospero  
will fit very well into the format.  I'll put it into the next draft  
of the document.

	- Tim





From timbl  Wed Mar  4 10:42:32 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17545; Wed, 4 Mar 92 10:42:32 GMT+0100
Date: Wed, 4 Mar 92 10:42:32 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203040942.AA17545@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: jcurran@nnsc.nsf.net
Subject: Re: Draft: Universal Document Identifiers
Cc: cni-arch@uccvma.bitnet@nnsc.nsf.net, wais-talk@think.com,
        www-talk@nxoc01.cern.ch

> Date: Thu, 27 Feb 92 19:45:42 -0500
> From: jcurran@nnsc.nsf.net

>Even if the exact scheme is not used, the requirement
> discussion contained in the paper is quite valuable.
> I have a few comments:
> 

>] Terms
>]
>] The objects on the network which are to be named include
>] objects which can be retrieved, and objects which can be searched.

> Using this definition, one would infer that document identifiers
> would allow reference to a distinct file, a particular mail
> message, news article, etc. I would not anticipate that a document
> identifier would be used to identify a newsgroup, interactive
> service, archive directory , or a wais source.  Are  we trying to
> define a universal id or a universal document id?  Might it be
> better to defer the definition of non-document resources and then
> come back and make the document specific id's be a subset of a
> future general resource identifier?

You are right that the UDIs were inteneded to be able to refer to any  
of those things. (In the W3 world, they all look pretty similar  
anyway -- they are all represented as [hyper]text objects.)  It is  
largely in order to be able to make references to any of those things  
that we need a UDI rather than a WAIS-DI and a W3-DI and a news-DI  
etc etc.  A UDI allows references between systems, and expandability  
for the future.  My answer would be that we are trying to define a  
universal document id, but where "document" has the very wide  
interpretation as any data which can be retrieved, viewed or  
searched: anything to which you might want to make a reference.
For example, a person is not a document (although to have a document  
on the net representing each person might be useful... their  
signature/disclaimer with links to their published works, etc etc.)  
If we can't cope with the objects which are on the net now, how can  
we hope to cope with the wierd things to come .. video clips from the  
news last night etc...


] Relevance
] 

] The life of a name is limited by any information contained within  
it which 

] may become prematurely invalid. It is therefore necessary to limit  
the 

] contents of a name to the information required for the operations  
above. 

] Other extraneous information about the document (its size, data  
format, 

] authorization details, etc) may in general change with time and  
should 

] not be part of the name.

> The proposed document identifiers have many characteristics which 

> may change with time: storage location, access protocol, format, 

> etc. If we focus instead on the "information content" of a \
> document, then it might be possible to form identifiers that are
>  more robust.  Many people consider:
>
> file://info.cern.ch./pub/www/doc/udi1.ps      and 

> file://info.cern.ch./pub/www/doc/udi1.txt
>
> to be the same document; just in different formats.

Precisely. We look forward to the day when a name like

	x500:/CH/CERN/CN/TBL/TechNote-15

will be put through a name server which will return a set of  
addresses. In the mean time, we don't have that ubiquitous name  
server (directory) facility. So we have to make do with physical  
addresses. And different versions of the same document look like  
different documents. Its a shame. The plan is that UDIs can migrate  
from physical addresses to registered names.



> It would be nice to be able to recognize this
> and allow  the user (and user interface) to determine which
> instance should be used for retreival.

Yes. Absolutely.  (The neatest way is for the client to send a set of  
preferences over with the request, and for the server to decide which  
to format to send. This is a suggestion for an evolved wais and/or  
http protoccol.) Another way if for the client to ask a name server  
for addresses, and retrieve the headers of each one to find out which  
representation he'd prefer -- But I'd prefer all the represenattions  
of the document to have the same name right down to the retrieval  
protocol level.

> This recognition may only
> be perform if the document id's (now being used document content
> ids) contain only location and format independant data.  It is easy
> to imagine that uniqueness could be assured by combining
> an organization, author, and title:
>
>
> cern.ch:www-staff:udi1 

>
> ietf:osids:archdirectory-00 


There are two functions: One, to find out whethre two documents are  
the same. Two, to derive a (set of) addresses for retrieval of the  
document. To be able to do the first, any unique id (like OSF/DCE  
UUIDs or RFCxxxx message ids) will work. To be able to do the second,  
a directory service is needed.

> Note that the actual location of the information might be far
> removed from the point of creation, and the format might be
> changed:
>
>cern.ch:www-staff:udi1;file://ftp.uu.net/doc/univeral-docids.PS.Z
>cern.ch:www-staff:udi1;news:<1992Feb21.121919.1@quake.think.com>
>cern.ch:www-staff:udi1;wais://nnsc.nsf.net/info-retrieval-notes?udi1

I see the usefulness of quoting both the unique identifier and the  
physical address. I hope that in the future, though, one will only  
need the first part "cern.ch:www-staff:udi1". That, fed into the  
directory service, will produce a list of addresses.

You can, of course, still quote both: "You need document  
x500:/cern.ch/www-staff/udi1 which I found on  
file://ftp.uu.net/doc/univeral-docids.PS.Z".

I would also suggest that if a document has a unique registered name  
then it should certainly contain that name, so that if you find it  
some otherway, you can refer to it (make links to it) by its official  
name.

> That's all
> /John

Good points -- thanks for the input...I think more needs to go in  
about registered unique names in the document.

	Tim BL



From timbl  Thu Mar  5 15:25:08 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20144; Thu, 5 Mar 92 15:25:08 GMT+0100
Date: Thu, 5 Mar 92 15:25:08 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203051425.AA20144@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: ses@cmns.think.com, peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Subject: Re: Draft: Universal Document Identifiers
Cc: iafa-request@kona.cc.mcgill.ca, cni-arch@uccvma.bitnet,
        www-talk@nxoc01.cern.ch, wais-talk@think.com, iafa@cc.mcgill.ca,
        rare-wg3@surfnet.nl, nisi@merit.edu

[Admin: If anyone is missing documents from this discussion which I  
have, they are all in a mailbox  
file://info.cern.ch/pub/www/doc/udi/discussion.mbox. Some of the  
messages were sent to only some of the lists.  Also, I mis-spelled  
the name of cni-arch.uccvma in my original posting, so some replies  
have not gone there. I will not repost them.  The orginal udi paper  
is slightly updated now. Same UDI -- no versioning ;-)]

Now, about these USDNs:

> Date: Thu, 5 Mar 92 07:32:50 EST
> From: ses@cmns.think.com

There have been several messages now with a common theme: That what I  
called in the udi1 paper a "lasting registered name" is better than  
an "address".

Peter Deutsch argues the point at length in  
<9203042206.AA12411@expresso.cc.mcgill.ca>, using the term USDN by  
analogy with ISBN.

John Curran on <Thu, 27 Feb 92 19:45:42 -0500> argues the same, and  
also suggests quoting both registered name and address (which I  
wasn't so sure about in case they get out of sync).

I completely agree with Peter and Simon's point of view, and I have  
modified the paper to put more emphasis on this. What I obvioulsy  
didn't make clear enough is my feeling that:-

1.There may be more than one USDN scheme, just as there are many  
physical addres schemes.

2. There may be more than two stages: it is  an oversimplifiaction to  
talk of only a USDN and an address: For example, an ISO standard may  
dereference (or as Ed says, "swizzle") to a document produced by the  
IETF which may dereference down to a prospero name which may be a  
pointer to an FTP file.

3. We can't use USDNs now because they aren't there. We need a  
transision strategy.

Therefore, UDis were supposed to be able to hold _either_ a USDN _or_  
a physical address. They weren't intended to get involved with the  
discussion of which USDN/ISBN/ISSN/ISDN (?!) scheme is better. So, I  
say, by all means define an USDN scheme, then register it as a  
possible UDI. If is good and everybody uses it, everything will end  
up with a USDN, and the context will always be USDN documents, so the  
usdn: prefix (or whatever) will not in practice be used. I'm all for  
the market deciding between protocols.

Simon:

> I'm strongly in favour of the two stage lookup process; X.500 is  
obvious
> technology, although it is rather heavyweight for personal  
computers. An 

> alternative might be some sort of DNS/archie-like service. These  
could return
> Tim's UDIs, which could then deliver the good themselves.

I would say "a server takes x500 UDIs and returns physical UDIs which  
deleiver the goods themselves.", meaning the same thing.  (I would  
allow it the option of delivering a set of addresses, not just one.)  
Yes, x500 is heavyweight so one can have a lighter protocol which  
accesses a real x500 engine via a gateway with a large cache.

> Of course, invdidual information sources should still use local  
document 

> numbers where possible, but should provide a way of mapping from  
local-id
> to universal-id when needed.

Yes.

> One little question: What should be done about document versions?
> Obviously, different versions of a document should have different
> UDSNs, but should there be a simple way to compare USDNs modulo
> versions? 


Good point.  What about versions which split?  A great spin-off of  
having versions available is that you can refer to a line number in  
them. A line number in a document which is not frozen is useless.  
[This solves a recurring problem in hypertext systems, when one wants  
to link to part of a document to which one has no write access, and  
which may change].

> Here are some suggestions.. Eat hot ASN, Cultural Cringer.
> [...]

We must be careful not to reinvent the wheel: if the USDN problem is  
the same as the phone book problem (which it seems to be) then we  
should pick up on x500.

An important thing about x.500 is that it was designed to scale (I  
hope!).  By contrast as Ed says:

| Date: Wed, 04 Mar 92 23:52:05 -0500
| From: Edward Vielmetti <emv@msen.com>
| [...]
| ISBN is hierarchical so you can stamp out your own
| unique ID's; ISSN (international standard serial number) has
| a central cataloging authority.

and i doubt whether either of those will scale to allow document  
publishing on the net by every kindergarten child etc etc twice a  
minute. That's why I assume x500 is best in theory at least. But tell  
me I'm wrong.

Ed also mentions message-ids which are after all unique. The trouble  
is, there's no way of looking up where to find them.

	Tim

__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155






From ses@cmns.think.com  Thu Mar  5 16:15:18 1992
Return-Path: <ses@cmns.think.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20281; Thu, 5 Mar 92 16:15:18 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA02722; Thu, 5 Mar 92 16:10:07 +0100
Received: by Cmns.Think.COM (5.57/Ultrix2.4-C)
	id AA13491; Thu, 5 Mar 92 10:09:58 EST
Date: Thu, 5 Mar 92 10:09:58 EST
From: ses@cmns.think.com (Simon Edward Spero)
Message-Id: <9203051509.AA13491@Cmns.Think.COM>
To: timbl@nxoc01.cern.ch
Cc: peterd@expresso.cc.mcgill.ca, iafa-request@kona.cc.mcgill.ca,
        cni-arch@uccvma.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca, rare-wg3@surfnet.nl, nisi@merit.edu
In-Reply-To: Tim Berners-Lee's message of Thu, 5 Mar 92 15:25:08 GMT+0100 <9203051425.AA20144@ nxoc01.cern.ch >
Subject: Draft: Universal Document Identifiers


   usdn: prefix (or whatever) will not in practice be used. I'm all for  
   the market deciding between protocols.

"That's the nice think about standards- there are so many of them to choose
 from" :-) Universal is as Universal does...

   Simon:

   I would say "a server takes x500 UDIs and returns physical UDIs which  
   deleiver the goods themselves.", meaning the same thing.  (I would  
   allow it the option of delivering a set of addresses, not just one.)  
   Yes, x500 is heavyweight so one can have a lighter protocol which  
   accesses a real x500 engine via a gateway with a large cache.

I think we're getting on to the really big problem I've seen in every
single Doc-ID discussion: every body seems to use the same words to
mean different things. To me, there's no such thing as a physical UDI.
There can be a reference to a physical copy of a document named by a
UDI, but that doesn't seem to be what you mean. confusing everybody
else. Anybody want to offer up an 'official' notation?


   Good point.  What about versions which split?  A great spin-off of  
   having versions available is that you can refer to a line number in  
   them. A line number in a document which is not frozen is useless.  
   [This solves a recurring problem in hypertext systems, when one wants  
   to link to part of a document to which one has no write access, and  
   which may change].

   > Here are some suggestions.. Eat hot ASN, Cultural Cringer.
   > [...]

   We must be careful not to reinvent the wheel: if the USDN problem is  
   the same as the phone book problem (which it seems to be) then we  
   should pick up on x500.

Just a couple of tyres...there should be no problem using those PDUs
with X.500 (Steve?). 


   and i doubt whether either of those will scale to allow document  
   publishing on the net by every kindergarten child etc etc twice a  
   minute. That's why I assume x500 is best in theory at least. But tell  
   me I'm wrong.

Distinguished names are ok, but I'd still rather have an OID associated
with each naming authority (maybe in the future, everybody will be 
issued with an OID at birth! What's your clearance, citizen?)

Simon

From timbl  Wed Mar 11 12:07:28 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28084; Wed, 11 Mar 92 12:07:28 GMT+0100
Date: Wed, 11 Mar 92 12:07:28 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203111107.AA28084@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Larry Masinter <masinter@parc.xerox.com>
Subject: Re: Draft: Universal Document Identifiers
Cc: peterd@expresso.cc.mcgill.ca, cni-arch@uccvma.bitnet,
        www-talk@nxoc01.cern.ch, wais-talk@think.com, iafa@cc.mcgill.ca


>> Peter Deutsch's message  <9203051920.AA14978@expresso.cc.mcgill.ca>
>> Actually, Mike Schwartz has suggested using CRC checksums,

> From: Larry Masinter <masinter@parc.xerox.com>
> You can do better than that by either:
> a) use a good digital signature (MD5 or Snefru or ...). [...]
> b) rely on something else that's unique, e.g., hostid + timestamp, ISO
> DFR's DORs, Object Identifiers, etc. 


> We've been using 256-bit UDSNs and are happy with the scheme. I'm
> hoping we'll have a writeup together before next week.

Peter, USDN is your term, so you decide what is and isn't one.

However, a UDI I define to be something you can use to get the object. You can't  
use digital signatures, or mail-style message-ids for that. You need some hints in  
the identifier as to where to start looking. (We're talking scalable distributed  
system here, no central hash tables allowed.) Knowing when you have a document that  
you have the right document is a different problem, but with a good name space  
(like x500) you can do both operations.

Tim

From peterd@expresso.cc.mcgill.ca  Wed Mar 11 19:04:39 1992
Return-Path: <peterd@expresso.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28995; Wed, 11 Mar 92 19:04:39 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA05278; Wed, 11 Mar 92 18:59:29 +0100
Received: from expresso.CC.McGill.CA by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA00781  (mail destined for timbl@nxoc01.cern.ch) on Wed, 11 Mar 92 12:45:46 -0500
Received: by expresso.cc.mcgill.ca (NeXT-1.0 (From Sendmail 5.52)/NeXT-1.0)
	id AA02532; Wed, 11 Mar 92 12:45:32 EST
Message-Id: <9203111745.AA02532@expresso.cc.mcgill.ca>
In-Reply-To: Tim Berners-Lee's message as of Mar 11, 12:07
From: peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Date: Wed, 11 Mar 92 17:45:31 GMT-0:02
In-Reply-To: Tim Berners-Lee's message as of Mar 11, 12:07
X-Mailer: Mail User's Shell (6.5.6 6/30/89)
To: Tim Berners-Lee <timbl@nxoc01.cern.ch>,
        Larry Masinter <masinter@parc.xerox.com>
Subject: Re: Draft: Universal Document Identifiers
Cc: cni-arch@uccvma.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca

> From timbl@nxoc01.cern.ch Wed Mar 11 06:03:54 1992
> >> Peter Deutsch's message  <9203051920.AA14978@expresso.cc.mcgill.ca>
> >> Actually, Mike Schwartz has suggested using CRC checksums,
> 
> > From: Larry Masinter <masinter@parc.xerox.com>
> > You can do better than that by either:
> > a) use a good digital signature (MD5 or Snefru or ...). [...]
> > b) rely on something else that's unique, e.g., hostid + timestamp, ISO
> > DFR's DORs, Object Identifiers, etc. 
> 
> > We've been using 256-bit UDSNs and are happy with the scheme. I'm
> > hoping we'll have a writeup together before next week.
> 
> Peter, USDN is your term, so you decide what is and isn't one.

I want a UDSN to be something that lets me identify the
contents of a file and compare the contents of multiple
files to test for uniqueness. In the long run I'd also
like them to permit me to identify contents across
multiple encodings, but that's harder and I'm prepared to
wait for that.

I wouldn't be so bold as to try and decide what makes a
suitable UDSN but I hope that we can discuss the issue at
IETF next week (since we will have so many of the players
there) and arrive at some sort of consensus.

I can say what _I_ want them for, and hope that this is
something that would be useful to enough other people that
we can agree to deploy something soon. Certainly there are
a number of candidates, and Larry has named some of the
most likely. I think something that can be applied
retroactively (MD5?) would be preferable to something like
hostID and timestamp, which would be hard to retrofit to
the existing archive collections.

> However, a UDI I define to be something you can use to get the object. .  .
> .  .  . Knowing when you have a document that  
> you have the right document is a different problem, but with a
> good name space (like x500) you can do both operations.

I'm principally interested in UDSNs at this point to allow
comparisions between multiple items (perhaps found in disparate
environments). I don't see how the X.500 name space can
help me here (unless I'm misunderstanding what you mean?).
Certainly it seems that UDIs should help locate items.
That seems to be their raison d'etre.


				- peterd

-- 

From masinter@parc.xerox.com  Wed Mar 11 19:22:44 1992
Return-Path: <masinter@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29032; Wed, 11 Mar 92 19:22:44 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA06015; Wed, 11 Mar 92 19:17:45 +0100
Received: from poplar.parc.xerox.com ([13.2.16.165]) by alpha.xerox.com with SMTP id <13949>; Wed, 11 Mar 1992 10:15:39 PST
Received: by poplar.parc.xerox.com id <101795>; Wed, 11 Mar 1992 10:15:28 -0800
To: timbl@nxoc01.cern.ch
Cc: peterd@expresso.cc.mcgill.ca, cni-arch@uccvma.bitnet,
        www-talk@nxoc01.cern.ch, wais-talk@think.com, iafa@cc.mcgill.ca
In-Reply-To: Tim Berners-Lee's message of Wed, 11 Mar 1992 04:07:28 -0800 <9203111107.AA28084@nxoc01.cern.ch>
Subject: Re: Draft: Universal Document Identifiers
From: Larry Masinter <masinter@parc.xerox.com>
Sender: Larry Masinter <masinter@parc.xerox.com>
Fake-Sender: masinter@parc.xerox.com
Message-Id: <92Mar11.101528pst.101795@poplar.parc.xerox.com>
Date: 	Wed, 11 Mar 1992 10:15:21 PST

Um, I think when I tell you about a document, I can tell you:
a)Some attributes about it that you can remember and use for
  finding it again.
b)its signature/fingerprint/checksum whatever
  This helps you know whether you already have exactly what I'm
  referring to or can get it more locally.
c)some information about where I think you can get it and how
d)a set of instructions you can use for getting it.

So I have a book here. a) It is called "Programming Perl", by Larry
Wall and Randal L. Schwartz. b) it is ISBN 0-937175-64-1. c) it is
part of the O'Reilly & Associatiates series of Unix books, try a
technical library d) If it were available for FTP, it would be in
//ora.com/nuts/books/perl/1991-edition.

The last two are a little strained in the analogy; don't jump on the
analogy, please, I just want to point out that it is reasonable and
customary to supply *MORE THAN ONE* of unique identifier, serial
number, access path, common attributes, etc.








From peterd@expresso.cc.mcgill.ca  Wed Mar 11 19:49:19 1992
Return-Path: <peterd@expresso.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29109; Wed, 11 Mar 92 19:49:19 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA07104; Wed, 11 Mar 92 19:44:15 +0100
Received: from expresso.CC.McGill.CA by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA01153  (mail destined for timbl@nxoc01.cern.ch) on Wed, 11 Mar 92 13:28:55 -0500
Received: by expresso.cc.mcgill.ca (NeXT-1.0 (From Sendmail 5.52)/NeXT-1.0)
	id AA02675; Wed, 11 Mar 92 13:28:40 EST
Message-Id: <9203111828.AA02675@expresso.cc.mcgill.ca>
In-Reply-To: Larry Masinter's message as of Mar 11, 10:15
From: peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Date: Wed, 11 Mar 92 18:28:36 GMT-0:02
In-Reply-To: Larry Masinter's message as of Mar 11, 10:15
X-Mailer: Mail User's Shell (6.5.6 6/30/89)
To: Larry Masinter <masinter@parc.xerox.com>, timbl@nxoc01.cern.ch
Subject: Re: Draft: Universal Document Identifiers
Cc: cni-arch@uccvma.bitnet, www-talk@nxoc01.cern.ch, wais-talk@think.com,
        iafa@cc.mcgill.ca

> From masinter@parc.xerox.com Wed Mar 11 13:18:12 1992
.  . .
> Um, I think when I tell you about a document, I can tell you:
> a)Some attributes about it that you can remember and use for
>   finding it again.
> b)its signature/fingerprint/checksum whatever
>   This helps you know whether you already have exactly what I'm
>   referring to or can get it more locally.
> c)some information about where I think you can get it and how
> d)a set of instructions you can use for getting it.
.  .  .
[* analogy deleted *]
> The last two are a little strained in the analogy; don't jump on the
> analogy, please, I just want to point out that it is reasonable and
> customary to supply *MORE THAN ONE* of unique identifier, serial
> number, access path, common attributes, etc.

I have no trouble with this. Obviously, I'm not sure I
need all of these for each query, since I'm trying to
accomplish different things at different times so what I
want back will change but that's just detail.

I suspect that only a) and b) are really permanently
associated with the information and the other two may or
may not be provided by external services. Of course, if
someone's favorite information delivery service wanted to
provide all four, (either directly or through gateways)
that's fine by me.


				- peterd

-- 

From emv@cic.net  Sat Mar 21 23:59:30 1992
Return-Path: <emv@cic.net>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16035; Sat, 21 Mar 92 23:59:30 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA10793; Sat, 21 Mar 92 23:54:52 +0100
Received: by nic.cic.net (4.1/SMI-4.1)
	id AA01687; Sat, 21 Mar 92 17:54:20 EST
Message-Id: <9203212254.AA01687@nic.cic.net>
To: www-talk@nxoc01.cern.ch
Subject: problem yacc'ing violaWWW
Date: Sat, 21 Mar 92 17:54:19 -0500
From: emv@cic.net

these errors making gram.y:

cc -g -I/usr/X11/include  -I/usr/X11/include/Xaw  -I/usr/X11/include/X11  -I/usr/X11/in
clude/X11/Xmu  -I/usr/X11/include/X11/Xaw  -I/usr/X11/include/Xmu  -Iwww/LineMode/Imple
mentation  -Iwww/Implementation  -target sun4 -c  gram.c
gram.y: 860: syntax error (in preprocessor if)
/usr/lib/yaccpar: 119: syntax error (in preprocessor if)
/usr/lib/yaccpar: 179: syntax error (in preprocessor if)
/usr/lib/yaccpar: 187: syntax error (in preprocessor if)
/usr/lib/yaccpar: 224: syntax error (in preprocessor if)
/usr/lib/yaccpar: 229: syntax error (in preprocessor if)
/usr/lib/yaccpar: 318: syntax error (in preprocessor if)
/usr/lib/yaccpar: 334: syntax error (in preprocessor if)
/usr/lib/yaccpar: 378: syntax error (in preprocessor if)
*** Error code 2
make: Fatal error: Command failed for target `gram.o'

this is on a sun sparcstation. any clues?  i don't grok yacc...

--Ed

From emv@heifetz.msen.com  Sun Mar 22 05:26:34 1992
Return-Path: <emv@heifetz.msen.com>
Received: from cernvax.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16158; Sun, 22 Mar 92 05:26:34 GMT+0100
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA22231; Sun, 22 Mar 92 05:22:04 +0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA29898; Sun, 22 Mar 92 06:21:52 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lSK12-000HpjC@heifetz.msen.com>; Sat, 21 Mar 92 23:18 EST
Message-Id: <m0lSK12-000HpjC@heifetz.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: behavior of ">" and ">>" in line mode browser
Date: Sat, 21 Mar 92 23:18:39 -0500
From: Edward Vielmetti <emv@msen.com>

I wanted to download a piece of html that I had written (and that Tim
had prettied up) so that I could bring it up to date.  When I did

% www -source http://......NewsGroupRelated.html

it started to show me the file as I would have properly expected to see
it.  But when I did 
	<RETURN> for more, etc: > /tmp/ng.html
the file that appeared was fully formatted (not what I expected or wanted).

i'll try to track down the problem...

--Ed


From emv@heifetz.msen.com  Sun Mar 22 06:10:07 1992
Return-Path: <emv@heifetz.msen.com>
Received: from cernvax.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16179; Sun, 22 Mar 92 06:10:07 GMT+0100
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA27945; Sun, 22 Mar 92 06:05:36 +0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA00994; Sun, 22 Mar 92 07:05:24 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lSKhB-000HcYC@heifetz.msen.com>; Sun, 22 Mar 92 00:02 EST
Message-Id: <m0lSKhB-000HcYC@heifetz.msen.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: "Cannot connect to information gateway %s\n", gateway
Date: Sun, 22 Mar 92 00:02:11 -0500
From: Edward Vielmetti <emv@msen.com>

(that's from HTAccess.c)

I want to be able to make references like
	   www rfc:934
	or www rfc:934.txt
and have that turned into
	www file://ftp.nisc.sri.com/rfc/rfc934.txt

what should I set "WWW_rfc_GATEWAY" to to do something like that?

it looks like the code in HTAccess.c is only set up to use HTTP as
a gateway scheme, which is fair and good, though I would expect that
if I say
	setenv WWW_rfc_GATEWAY file://ftp.nisc.sri.com/rfc/
that it would look and say "aha, a file, better FTP it".

this is with the 1.2c version of the line mode browser.

thanks,

--Ed

From HARMO@valt.helsinki.fi  Sun Mar 22 09:55:31 1992
Return-Path: <HARMO@valt.helsinki.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16284; Sun, 22 Mar 92 09:55:31 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA06249; Sun, 22 Mar 92 10:50:53 +0200
Received: from charon-gw.pc.Helsinki.FI by kruuna.helsinki.fi with SMTP id AA10617
  (5.65c/IDA-1.4.4 for <www-talk@nxoc01.cern.ch>); Sun, 22 Mar 1992 10:50:19 +0200
Received: From HYLKN1/WORKQUEUE by charon-gw.pc.Helsinki.FI
          via Charon 3.4 with IPX id 100.920322105033.256;
          22 Mar 92 10:51:56 +0200
Message-Id: <MAILQUEUE-101.920322104940.179@valt.Helsinki.FI>
To: www-talk@nxoc01.cern.ch
From: "Timo Harmo - SocSci U of Helsinki"  <HARMO@valt.helsinki.fi>
Date:     22 Mar 92 10:49:40 EET
Subject:  Graphical browsers in hypertext
X-Pmrqc:  1
X-Mailer: Pegasus Mail v2.2 (R3).

Is there, or is there planned, some kind of standard for
presenting graphical browsers in WWW?
I think it would be great to have maps of the hyperterritories one is
about to explore. And it could be quite simple, too. The map could be
just a list of links with coordinates (and maybe some formatting
info?), line-mode clients could ignore the coordinates and present
the browsers as lists.
 -Timo

From emv@heifetz.msen.com  Mon Mar 23 00:56:45 1992
Return-Path: <emv@heifetz.msen.com>
Received: from cernvax.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16785; Mon, 23 Mar 92 00:56:45 GMT+0100
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA22856; Mon, 23 Mar 92 00:52:15 +0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA27154; Mon, 23 Mar 92 01:51:59 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lScHN-000HntC@heifetz.msen.com>; Sun, 22 Mar 92 18:48 EST
Message-Id: <m0lScHN-000HntC@heifetz.msen.com>
To: www-talk@nxoc01.cern.ch
Cc: timbl@nxoc01.cern.ch
Subject: WAISGate support for WAIS 'HTML' doc type
Date: Sun, 22 Mar 92 18:48:43 -0500
From: Edward Vielmetti <emv@msen.com>

In WAISGate.c (part of the WAIS/WWW gateway in the Daemon distribution)
there's a little hunk of code that says basically

	pick up the doctype of the document
	if it's WSRC (a WAIS source),
		it's an index description file,
		parse the WSRC
	else
		it's a plain text document,
		send it as a straight text file

It strikes me as a reasonable idea to extend this to put in another
case that says
	if it's HTML
		it's an HTML file,
		send it with no extra parsing

If can agree that this is a reasonable thing to do, then I'll make
the necessary changes to "waisindex" to index up the html files I've
written to date and serve them up.  

--
Edward Vielmetti, vice president for research, MSEN Inc. emv@msen.com
      MSEN Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 741 1120
"Not to panic.  Networking will eventually get to Michigan.  Remember
 the decades it took IBM to discover virtual memory."  Randy Bush


From timbl  Mon Mar 23 16:30:33 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17902; Mon, 23 Mar 92 16:30:33 GMT+0100
Date: Mon, 23 Mar 92 16:30:33 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203231530.AA17902@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: "Timo Harmo - SocSci U of Helsinki" <HARMO@valt.helsinki.fi>
Subject: Re: Graphical browsers in hypertext
Cc: www-talk@nxoc01.cern.ch

> From: "Timo Harmo - SocSci U of Helsinki"  <HARMO@valt.helsinki.fi>
> Date:     22 Mar 92 10:49:40 EET
>
> Is there, or is there planned, some kind of standard for
> presenting graphical browsers in WWW?
> I think it would be great to have maps of the hyperterritories one is
> about to explore. And it could be quite simple, too. The map could be
> just a list of links with coordinates (and maybe some formatting
> info?), line-mode clients could ignore the coordinates and present
> the browsers as lists.
>  -Timo

There are three possibilities here.

One is a general graphics browser -- that is, instead of being limited to
hypertext, go for hypergraphics. This would mean picking a graphics
standard and adding an anchor representation to add to it. As you say, a
line mode browser could just list the links from a graphics node.

Another is building a graphical map of part of the web. This is a good way
to navigate, but it is quite a challenge to decide which nodes and links
to put in and leave out, and where to put the nodes. Bear in mind that some
nodes have just a few links, some have hundreds. Trying to get the most into a
window and at the same time make it look natural is an interesting problem.
If it was computationally intensive it could be done off-line.

The third is combining the two above by making a "map" window for an existing
browser. This could serve the "History" function of showing where a user
has been, but with links off to other nodes too.  As most people seem to prefer
to think of the data they browse as a tree, one could start by representing the
paths the user took as a tree, and then put in cross-links and links to
other referenced nodes.

Yes, its a great idea -- anyone want to implement it?   :-)

	Tim


From timbl  Mon Mar 23 17:32:29 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18049; Mon, 23 Mar 92 17:32:29 GMT+0100
Date: Mon, 23 Mar 92 17:32:29 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203231632.AA18049@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: WAISGate support for WAIS 'HTML' doc type
Cc: www-talk@nxoc01.cern.ch

Ed,

Great.  I have put in the mod into the WAIS gateway running here. -- I have no
HTML WAIS index to try it on though, so let me know when you do.

BTW, are you using Simon Spero's filter mods to filter out control information
(and weight title information and headings)?

Tim

From jfg@bernd.cern.ch  Mon Mar 23 17:53:17 1992
Return-Path: <jfg@bernd.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18099; Mon, 23 Mar 92 17:53:17 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA08402; Mon, 23 Mar 92 17:48:43 +0100
Received: by bernd.cern.ch (AIX 3.1/UCB 5.61/4.03)
          id AA15238; Mon, 23 Mar 92 17:47:01 -2300
Date: Mon, 23 Mar 92 17:47:01 -2300
From: jfg@bernd.cern.ch (Jean-Francois Groff)
Message-Id: <9203241647.AA15238@bernd.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: behavior of ">" and ">>" in line mode browser
References: <m0lSK12-000HpjC@heifetz.msen.com>

  Thank you Ed for more useful bug reports. Here are your answers...

----------------------------------------------------------------------------
problem yacc'ing violaWWW

I don't know. I never compiled it myself... The error is not in gram.y...
Looks like your cc doesn't understand the "#if" preprocessor directive (ANSI).
Try gcc instead.

----------------------------------------------------------------------------
behavior of ">" and ">>" in line mode browser

Here's a diff on HTBrowse.c to handle this. The line numbers and the
"the_choice" variable will not correspond to your code because they're
from the unreleased 1.2e (soon to become 1.3 on ftp...)

*** 1080,1087 ****
  
                command  = (char *) malloc(
                        strlen(address)+strlen(the_choice)+30);
!               sprintf(command, 
!                       "www -n -na -p \"%s\" %s", address, the_choice);
                result = system(command);
                if (result) printf("  %s  returns %d\n", command, result);
                free(command);
--- 1080,1087 ----
  
                command  = (char *) malloc(
                        strlen(address)+strlen(the_choice)+30);
!               sprintf(command, "www -n %s \"%s\" %s", 
!                       HTDiag ? "-source" : "-na -p", address, the_choice);
                result = system(command);
                if (result) printf("  %s  returns %d\n", command, result);
                free(command);

----------------------------------------------------------------------------
rfc: "gateway"

I see your point. However, the only intention of the WWW_foo_GATEWAY syntax
is to enable access to protocols not understood by the www client by means
of a gateway that translates those to/from HTTP/HTML. Ideally, what we need
to be able to fetch RFCs properly is a naming service, x500 or whatever.
Your rfc: access is rather an address alias. For that, you could direct it
to your own HTTP server with WWW_rfc_GATEWAY, and then insert

	map	rfc:	file://ftp.nisc.sri.com/rfc/

in your httpd.conf rule file. But beware that if you start serving HTML
files with rfc: addresses instead of file://host/rfc, every www client in
the world will have to set WWW_rfc_GATEWAY.

----------------------------------------------------------------------------
WAISGate support for WAIS 'HTML' doc type

Tim answered this one. As he said, "Great!".

----------------------------------------------------------------------------
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"If we were directed from Washington when to sow and when to reap,
 we would soon want bread."
	- Thomas Jefferson


From timbl  Tue Mar 24 11:23:31 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19187; Tue, 24 Mar 92 11:23:31 GMT+0100
Date: Tue, 24 Mar 92 11:23:31 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203241023.AA19187@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: jfg@bernd.cern.ch (Jean-Francois Groff)
Subject: Mapping names in the server
Cc: www-talk@nxoc01.cern.ch

Ed,

As JF says, you can  map logical document names to real file names in the server by  
means of the rule file. We didn't put the rule file into the client,
because we didn't want the start-up time to be long. Also,
we wanted a W3 document name to be followable by anyone, not just
the few who have picked up the latest gems of rule file titbits.

(There were a couple of starts missing from JF's example, which should have been

	map	rfc:*	file://ftp.nisc.sri.com/rfc/*

)

Actually the current distributed server expects the output of the rule file
to be a local filename. You would have to modify it to expect a w3 address.

In the long term, a name service should exist to translate

	name-service:/org/isoc/rfc/959

into say file://ftp.nisc.sri.com/rfc/rfc959.ps and .txt.  As noone seems to
want to extend the DNS, it looks as though x500 is the best bet. There was
some discussion on this at the IETF, though it'll be a while before x500 is all  
over.

Tim

From timbl  Thu Mar 26 15:25:12 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23337; Thu, 26 Mar 92 15:25:12 GMT+0100
Date: Thu, 26 Mar 92 15:25:12 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203261425.AA23337@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Jonny Goldman <jonathan@think.com>
Subject: Openning the WAIS document-id syntax
Cc: www-talk@nxoc01.cern.ch, wais-talk@think.com

> Date: Tue, 24 Mar 92 09:46:21 PST
> From: Jonny Goldman <jonathan@think.com>

Jonny,

This is relevant to the WAIS-FTP work Jim is doing.

Unfortunately none of the WAIS crowd could get to discussions at the IETF -- though  
John Curran represented the WAIS side. Those discussions were very interesting. 


The data model of WAIS (documents in databases) could be deconstrained to allow  
documents themselves to be or contain lists of documents, and for lists of  
documents to point to things other than documents in the same database.

This is the way the second part can work.  Normally, a search returns a list of  
doc-ids, each one (basically) like

	/usr/local/lib/wais/mydatabase/fred/myfile.txt

which is in fact a filename. There's a load of other stuff in there which we can  
ignore for now.  What a WAIS search needs to be able to do, when you are pointing
to files, is to return a pointer to a file in FTP say. We do that in two steps.
First, we recognise that that id is local to the conext of a wais server on host  
myhost and port myport. When the server returns that string, the client
uses knowledge of the context in which it was quoted to exapnd that to

	wais://myhost.dom.net:myport/usr/local/lib/wais/mydatabase/fred/myfile.txt

This is a refernece you can quote to anyone as it makes sense anywhere. No context.
I called it a UDI but we'll have to change the name. Document Access Token maybe.
It's like Brewster's proposal but extendable to other protocols.  [Yes, WAIS is a  
good protocol but there are others. Including name servers and directories which  
will be needed for long-lived but movable documents.]

Now suppose one day a server returns a doc-id INCLUDING the protocol, host, etc.  
For example, your WAIS FTP engine (like the ARCHIE WAIS) returns what are basically
pointers to files. Just now, because of the constraints of the model, it has to  
return a part of a file within the database. Suppose we change that, so that
in your case it just returns a doc-id which specifies anonymous ftp access, like:

	file://otherhost.com/pub/doc/mydoc.txt

The client has a general retrieval engine which can accept doc-ids in many domains  
-- not just WAIS. That allows it to go out over a different protocol to retrieve  
the object.

This is the way WWW and Gopher work.  They are open systems -- you can link into
any other system within reason.  That's why the fuss about universal document  
identifiers.  Maybe the WAIS people would to incorporate them -- that is, just
make sure that the normal WAIS server return things which are -- like the one
above -- special cases of the more general syntax.

I haven't had much comment from the WAIS side about the UDIs, but I'd like to have  
some. (file://info.cern.ch/pub/www/doc/udi1.ps was background for the IETF  
discussions.) We plan a small working group hacking out the details before an RFC  
is submitted.


> I like the idea of generalized interfaces, customized servers.

You bet!


- Tim BL


From jonathan@quake.think.com  Thu Mar 26 18:53:00 1992
Return-Path: <jonathan@quake.think.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23811; Thu, 26 Mar 92 18:53:00 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA06767; Thu, 26 Mar 92 18:48:28 +0100
Received: from philo.quake.think.com. by quake.think.com (4.1/SMI-4.0)
	id AA00347; Thu, 26 Mar 92 09:48:02 PST
Received: by philo.quake.think.com. (4.1/SMI-4.1)
	id AA00262; Thu, 26 Mar 92 09:47:34 PST
Date: Thu, 26 Mar 92 09:47:34 PST
Message-Id: <9203261747.AA00262@philo.quake.think.com.>
From: Jonny Goldman <jonathan@think.com>
Sender: jonathan@quake.think.com
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch, wais-talk@think.com
In-Reply-To: Tim Berners-Lee's message of Thu, 26 Mar 92 15:25:12 GMT+0100 <9203261425.AA23337@ nxoc01.cern.ch >
Subject: Openning the WAIS document-id syntax

First, I'd like to point out the WAIS-FTP doesn't mean a client or server
understands FTP protocol.  It's simply a customized server that functions
like FTP (but is read-only).  It's mainly an experiment in modifying
servers and providing services under WAIS.

   Date: Thu, 26 Mar 92 15:25:12 GMT+0100
   From: timbl@nxoc01.cern.ch (Tim Berners-Lee)

   [...]

   The data model of WAIS (documents in databases) could be deconstrained
   to allow documents themselves to be or contain lists of documents, and
   for lists of documents to point to things other than documents in the
   same database.

I take it you're suggesting a new TYPE for a document: Derived types?  In a
sense the catalog is one of these.

   This is the way the second part can work.  Normally, a search returns a
   list of doc-ids, each one (basically) like

	   /usr/local/lib/wais/mydatabase/fred/myfile.txt

   which is in fact a filename.

Let me also point out that this is just the method used in the sample
server.  The CM server does not return DocID's that are derived from
filenames.

In fact, DocID's are "any"s, and that means they can have anything in them,
so long as the server understands how to return a specified amount of data
to a client when presented a DocID and a range.

   There's a load of other stuff in there which we can ignore for now.
   What a WAIS search needs to be able to do, when you are pointing to
   files, is to return a pointer to a file in FTP say. We do that in two
   steps.

I don't agree.  I think the server should do the retrieval.  The client
should not have to know anything about the REAL location of the document.
More on that below.

   First, we recognise that that id is local to the conext of a wais server
   on host myhost and port myport. When the server returns that string, the
   client uses knowledge of the context in which it was quoted to exapnd
   that to

	   wais://myhost.dom.net:myport/usr/local/lib/wais/mydatabase/fred/myfile.txt

   This is a refernece you can quote to anyone as it makes sense anywhere.
   No context.  I called it a UDI but we'll have to change the name.
   Document Access Token maybe.  It's like Brewster's proposal but
   extendable to other protocols.  [Yes, WAIS is a good protocol but there
   are others. Including name servers and directories which will be needed
   for long-lived but movable documents.]

This is a good idea, but I feel rather strongly that we should be very
careful in overloading the protocol.  Specifying a syntax for DocID's is
one way of overloading the protocol.  Standardizing types is another.

   Now suppose one day a server returns a doc-id INCLUDING the protocol,
   host, etc.  For example, your WAIS FTP engine (like the ARCHIE WAIS)
   returns what are basically pointers to files. Just now, because of the
   constraints of the model, it has to return a part of a file within the
   database. Suppose we change that, so that in your case it just returns a
   doc-id which specifies anonymous ftp access, like:

WAIS-FTP doesn't return pointers to remote files.  It returns local DocIDs
for use in retrieving a file local to the server.  Archie WAIS (and
ftpable-readmes) returns these pointers.  That's a different story.

Now for a small discussion of WAIS DocID's. So far WAIS DocID's have only a
few fields:

typedef struct DocID{
   any* originalServer;
   any* originalDatabase;
   any* originalLocalID;
   any* distributorServer;
   any* distributorDatabase;
   any* distributorLocalID;
   long copyrightDisposition;
} DocID;

The part you refer to is just the LocalID part.  If you look at some of the
DocID's returned by the serial server, you'll see the other fields are
filled in (though the Server fields don't contain much useful information -
it's that part we were trying to standardize with the doc-id proposal).

	   file://otherhost.com/pub/doc/mydoc.txt

   The client has a general retrieval engine which can accept doc-ids in
   many domains -- not just WAIS. That allows it to go out over a different
   protocol to retrieve the object.

There are two ways to handle this, of course.  Either the client or the
server could do the retrieval.  I believe the server should handle the
protocol part (if the document is stored on some FTP server somewhere, the
WAIS server can just fetch the file, and return it to the client).  This
reduces client complexity.  I have no objection to specifying the
protocol/server in the DocID (perhaps with another field), but we must
standardize the meanings.

   This is the way WWW and Gopher work.  They are open systems -- you can
   link into any other system within reason.  That's why the fuss about
   universal document identifiers.  Maybe the WAIS people would to
   incorporate them -- that is, just make sure that the normal WAIS server
   return things which are -- like the one above -- special cases of the
   more general syntax.

   I haven't had much comment from the WAIS side about the UDIs, but I'd
   like to have some. (file://info.cern.ch/pub/www/doc/udi1.ps was
   background for the IETF discussions.) We plan a small working group
   hacking out the details before an RFC is submitted.

Come up with an RFC, and we'll try to abide by it.  I'd like to caution you
against overloaded strings.  We've got enough of them already.

For a start, I'd suggest we use the originalServer as the identifier for
the HOST, and the originalDatabase can inform us of the protocol.

- Jonny G

From timbl  Fri Mar 27 09:58:11 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24800; Fri, 27 Mar 92 09:58:11 GMT+0100
Date: Fri, 27 Mar 92 09:58:11 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203270858.AA24800@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: more WWW/WAIS gateway hacks
Cc: www-talk@nxoc01.cern.ch

From: Edward Vielmetti <emv@msen.com>
Date: Fri, 27 Mar 92 00:07:40 -0500

(I'm going to have to get the WWW gateway up and running myself.)

	Sound like a good idea, Ed!  Especially no I've released it
	"properly" :-)

Here's a thought to make WWW/WAIS gateways for netnews even more
useful than they already are.

Some WAIS db's are really db's full of news articles.  comp.archives
is one, there's collections of current comp.sys.* and sci.* groups,
etc etc.

The WWW approach to news articles is really cool cause it builds links
based on embedded message ID's, links on the newsgroups: line, stuff
like that.

If you could somehow note (maybe on a per-gateway basis?  it might
not be possible to discern on the fly, so you'd perhaps configure
it ahead of time) that the texts coming back from a WAIS server were
really news articles instead of arbitrary globs of texts, and theny
you added the set of news-parsing stuff, you'd have a big win on your
hands.

(eg. try
	<a href=wais://wais.oit.unc.edu:210/comp-sys?jpeg> jpeg in comp.sys </a>
and explain why you can't chain back to things from there.)

will get the code and see what I can do to add this.

--Ed

	Two ideas here. One is to add a "MailNews" RFC850/822 message type
	which switches on client message parsing.  The other is to have a
	converter in the gateway which offes the message as TEXT or as HTML.
	For those clients which have HTML, they pick up the hypertext
	version. The first seems easier. Can we use the same type for mail
	and news messages?

	Another idea. Suppose you run a server on the NNTP machine, so it
	has direct access to the news, and when news comes in you cross-link
	the references, so that you can follow links to replies to messages
	references BY a message as well as the messages it references.

	Maybe this could be done on the fly when the message is read.

	-Tim


pls pass on to the whole www crew....

ps.  you interested in starting a "comp.infosystems.web" group?
     should get a lot of attention.  my WAIS newgroup vote has
     150+ yes votes in the first two days !

	Sure, if you think it'll fly. I guess we have to gateway the mail
	for a while. Maybe comp.infosystems.www --- there is the "web and Cweb"
	toolset from Knuth (?) which we don't want to get confused with.


From timbl  Fri Mar 27 11:45:43 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25109; Fri, 27 Mar 92 11:45:43 GMT+0100
Date: Fri, 27 Mar 92 11:45:43 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203271045.AA25109@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Linda Murphy <murphy@dairp.upenn.edu>
Subject: WWW NeXT client, telnet feature; Web traversal
Cc: www-talk@nxoc01.cern.ch

> Date: Thu, 26 Mar 92 18:06:51 GMT-0500
> From: Linda Murphy <murphy@dairp.upenn.edu>

> My environment: a NeXT.
> ...I am running pre-release b of version 0.13 of the WWW application.
> I get ... Invalid access prefix for 'telnet://info.cern.ch'
> Can be one of news: but not 'telnet:'.


The NeXT client was frozen last summer, so it has no innovations which occured  
since then. I have it relatively high on my (rather large) agenda to bring it  
up-to-date from a prototype to  include the re-engineerd common library, and  
rerelease it.  (I was under pressure here not to put too much work into it because  
NeXTs were not official CERN workstations for a while: everyone wanted X. Now X is  
coming from other people, the pressure should ease.)

Another problem you will find is that the NeXT client can't cope with the very long  
identifiers returned by the latest WAIS servers such as the directory of servers.  
It just crashes becuase I put in an arbitrary hard limit (bad! :-().

Apart from telnet: it also can't handle gopher:.

I'm really sorry for that lack of functionality.  I use the app all the time myself  
so it bugs me too. I'll do it when I have time, but better server functionality I  
think should come first.  Someone in Hawaii whose mail address I don't seem to have  
(are you out there?) thought they might find six person-months to put into the NeXT  
app which would be great,

> Further down in the bug list, you mention serialisation and web
> traversal.  What do you mean by this term?
> 

> --lam

I mean a feature to turn a web into a serial document, like to print it on paper,  
by traversing the web. This is really needed -- the world is looking for ways of  
turning text into hypertext, but the moment you do it, you want to turn it back  
again for people who want paper! A traversal, and concatenation followed by a sed  
file to turn it into TeX macros should cover it.

Also one imagines tools which traverse the web recursively in a breadth-first way  
looking for things -- interesting data and indexes for example. I image terminating  
the search as a function of number of links traversed modified by the  
"interestingness" of documents found on the way (judged by the words the contain  
matched against a query).  This is a step toward a "knowbot"-like tool for resource  
discovery. Now we have a real web to play with, we can start making such machines  
in earnest.

	Tim



From timbl  Fri Mar 27 12:37:47 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25222; Fri, 27 Mar 92 12:37:47 GMT+0100
Date: Fri, 27 Mar 92 12:37:47 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9203271137.AA25222@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: pflynn@curia.ucc.ie (Peter Flynn)
Subject: Re: CURIA - WWW server for Irish manuscripts coming soon
Cc: www-talk@nxoc01.cern.ch

> Date: Thu, 26 Mar 92 21:38:55 GMT
> From: pflynn@curia.ucc.ie (Peter Flynn)

> OK, I still have to get the daemon running, but I should have that next
> week. You can then add us to the list of stuff available in W3. Details are:

<DT><a name=??? href=http:curia.ucc.ie//usr/local/lib/WWW/CURIA_menu.html>The
CURIA Project
<DD>Browseable Irish manuscripts from the Royal Irish Academy and University
College Cork.

	(BTW You can omit name==??? -- you don't need a name unless you
	want to refer TO the anchor.)

	I think you mean http://curia.ucc.ie/usr/local/lib/WWW/CURIA_menu.html
	the souble slash introduced the host.

We are still waiting reverse IP registration, so currently I guess we are
only accessible as 143.239.1.8

	Ok, http://143.239.1.8/usr/local/lib/WWW/CURIA_menu.html
	will have to do for now. Let me know when it's up. A few tips.

	Please run the server on port 80 as new software will default
	to this official IANA port number. In the mean time quote it
	as http://143.239.1.8:80/usr/local/lib/WWW/CURIA_menu.html
	to be safe.

	In the configuration file, you can put a map line
	  map / /usr/local/lib/WWW/CURIA_menu.html
	so that someone accessing http://143.239.1.8:80/ will
	get something useful about the site. You have to make
	all the refernces in that document absolute, as it will
	appear in two places in the web.

At the moment there's just one or two pages of test stuff, but this is
defined in a status report which I will keep up to date as part of the
documentation. We have nearly finished scanning vol 1 of the _Annals of
the Four Masters_ and the _Chronicon Scotorum_ so we'll be editing them into
shape in the next month or so. As I won't be at JENC, I want to try hard
to get a useable chapter or two up and browseable by then.

	Sounds great!  Admitedly the Irish might be understandable by
	a limite audience, but it will be available to gaelic
	academia worldwide.  (Are you putting up parallel translations?)

I fudged the five lowercase accent-aigu vowels into HTML.c as you suggested.

	Great -- can you send me the list and I'll incorporate it
	into all the sources.  We should put in all the European set
	of characters in fact.

It works fine for the sun-cmd X shell window, but when I replaced them with
the five char codes for the IBM PC, and then access it over telne from
my PC logged into my VAX, something somewhere en route is mapping the
8-bit chars into 7-bit, so an acute-a (decimal 160) ends up as a space
and an acute-e as a double-quote (whoops, sorry, acute-a comes out as
an @-sign). This is not WWW code, but either the sun terminfo/termcap
being intrusive or something in the comms side. It's going to be a major
headache to get it sorted...all help welcome.

	If someone en route is killing the 8th bit, then you are stuck.
	The best thing then seems to be to run WWW on the PC directly.
	In fact some of the PC graphic characters are in non-graphic
	psoitions of the table (0X, 1X, 8X, 9X hex), so telnet is
	likely to have trouble anyway.
	There's a port done for SUN/NFS: what type of TCP/IP for
	the PC do you use?

Have a nice weekend!
///Peter

	You too.
	- Tim


From emv@heifetz.msen.com  Fri Mar 27 15:34:58 1992
Return-Path: <emv@heifetz.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25727; Fri, 27 Mar 92 15:34:58 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA02049; Fri, 27 Mar 92 15:30:29 +0100
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lUHtT-000HqgC@heifetz.msen.com>; Fri, 27 Mar 92 09:26 EST
Message-Id: <m0lUHtT-000HqgC@heifetz.msen.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: pflynn@curia.ucc.ie (Peter Flynn), www-talk@nxoc01.cern.ch
Subject: Re: CURIA - WWW server for Irish manuscripts coming soon 
In-Reply-To: Your message of Fri, 27 Mar 92 12:37:47 +0100.
             <9203271137.AA25222@ nxoc01.cern.ch > 
Date: Fri, 27 Mar 92 09:26:55 -0500
From: Edward Vielmetti <emv@msen.com>

w/r/t encoding of non-Latin characters, I'd recommend at least looking
at the work of the "Text Encoding Initiative" (the TEI) - they're
a scholarly bunch who have standards for how to do SGML encoding
of scholarly texts esp. including representation of glyphs from languages
other than English.

as to a reference, hm.  so far as I know none of the discussions
are WAISed yet, the best bet is the listserv at UICVM.UIC.EDU.

<title> tei - text encoding initiative </title>

<p>
michael sperberg-mcqueen at uic
some !@#$ listserv somewhere, let's see
<a href=wais://wais.cic.net/lists?tei> look in lists </a>
<p>

--Ed

From emv@heifetz.msen.com  Mon Mar 30 16:37:34 1992
Return-Path: <emv@heifetz.msen.com>
Received: from cernvax.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00108; Mon, 30 Mar 92 16:37:34 GMT+0100
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA27949; Mon, 30 Mar 92 17:32:52 +0200
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA07840; Mon, 30 Mar 92 17:32:40 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lVOIS-000Hp1C@heifetz.msen.com>; Mon, 30 Mar 92 10:29 EST
Message-Id: <m0lVOIS-000Hp1C@heifetz.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: bad doc-id via WAIS/WWW gateway
Date: Mon, 30 Mar 92 10:29:20 -0500
From: Edward Vielmetti <emv@msen.com>

For some WWW searches on WAIS databases, I get an error response.  
My hunch is that there are statically sized buffers hiding somewhere
in the system and that absurdly long WAIS document-id's are overflowing
them.

--Ed



Index comp-sys contains the following 1 item relevant to ''.
<dl>
Code: SF, Bad DocID in request
</DL>
<h2>No text was returned!</h2>



From emv@heifetz.msen.com  Tue Mar 31 07:02:32 1992
Return-Path: <emv@heifetz.msen.com>
Received: from cernvax.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00954; Tue, 31 Mar 92 07:02:32 GMT+0100
Received: by cernvax.cern.ch (5.57/Ultrix2.0-B)
	id AA24304; Tue, 31 Mar 92 07:57:52 +0200
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA20113; Tue, 31 Mar 92 06:43:10 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lVadT-000HtvC@heifetz.msen.com>; Mon, 30 Mar 92 23:39 EST
Message-Id: <m0lVadT-000HtvC@heifetz.msen.com>
To: www-talk@nxoc01.cern.ch
Cc: cddev@sterling.com
Subject: Changing NNTP servers on the fly.
Date: Mon, 30 Mar 92 23:39:50 -0500
From: Edward Vielmetti <emv@msen.com>

I have a CD-ROM (Netnews/CD from Sterling Software) that has a big
pile of news in it -- and I'd like to support reasonable access to
it via WWW.  However; the current support for NNTP reading in WWW
assumes that there's a single NNTP server through which all
"news:" access will go, so it's not straightforward to support
a second system which might have an alternative access to a news spool.

I'd suggest extending the syntax to read as follows
	news:comp.sys.foo		comp.sys.foo on default system
	news://nntp.archive.msen.com/comp.sys.foo       nntp.archive.msen.com
	news://nntp.archive.msen.com:1990/comp.sys.foo  (on port 1990)
with similar extensions for referencing individual articles.

--Ed

From timbl  Tue Mar 31 09:17:36 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01065; Tue, 31 Mar 92 09:17:36 GMT+0200
Date: Tue, 31 Mar 92 09:17:36 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9203310717.AA01065@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: Changing NNTP servers on the fly.
Cc: www-talk@nxoc01.cern.ch, cddev@sterling.com, lear@oni.sgi.com (Eliot Lear)


> I have a CD-ROM (Netnews/CD from Sterling Software) that has a big
> pile of news in it -- and I'd like to support reasonable access to
> it via WWW.  However; the current support for NNTP reading in WWW
> assumes that there's a single NNTP server through which all
> "news:" access will go, so it's not straightforward to support
> a second system which might have an alternative access to a news spool.
> 

> I'd suggest extending the syntax to read as follows
> 	news:comp.sys.foo		comp.sys.foo on default system
> 	news://nntp.archive.msen.com/comp.sys.foo       nntp.archive.msen.com
> 	news://nntp.archive.msen.com:1990/comp.sys.foo  (on port 1990)
> with similar extensions for referencing individual articles.
>
> - Ed

The syntax would certianly fit in with the UDI format -- however, are the semantics
well defined?  In general, the whole point of news is that it is held locally,
avoiding millions of WAN accesses.

If you put in a node name, then you are changing the way the protocol works  
altogether.  This might be conveient, but its not really "news". You're saying
that we can use NNTP as a file retrieval protocol. Obviously, once you have given  
out a reference like that above you have to make nntp.archive.msen.com available  
for everyone in the world.

Maybe this is a way to solve the news archive retrieval problem. It isn't  done
that way at the moment of course: Its a big headache right now. Messages are tared  
and compressed and put on some machine under the date of the message -- you have to  
know which newsgroup the message was sent to, and then look the archive hostname up  
in a list which doesn't (correct me?) exist. (Another use for the X-500 directory?)

It doesn't fit very well into the news model, all the same. For example, when you  
find a reference to another newsgroup/article on your CD rom, There's no way of  
knowing whether you should look it up on the CD rom or on a "live" news server.
We really need some NNTP extensions to insist that the message-id can carry some  
hints as to where it might be archived -- unfortunately I missed the NNTP session  
at the IETF but I know that Eliot Lear (ietf nntp wg chair) for example is thinking  
about such problems, and indeed from talking to him I got the impression that the  
NNTP group's discussions were overflowing into the retrieval and resource discovery  
areas.

It's not _trivial_ to put it in the code for (One will have to keep a cache of  
network connections to hosts) so I won't do it now.  I'd point out you could set up  
an HTTP server to serve the news data, although it would have (currently) to  
convert the news format into HTML which it (currently) doesn't (yet) do (yet).

Tim

--Ed


From lear@yeager.corp.sgi.com  Tue Mar 31 18:48:05 1992
Return-Path: <lear@yeager.corp.sgi.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02572; Tue, 31 Mar 92 18:48:05 GMT+0100
Received: by dxmint.cern.ch (cernvax) (5.57/3.14)
	id AA08030; Tue, 31 Mar 92 19:43:27 +0200
Received: from relay.sgi.com by sgi.sgi.com via SMTP (911016.SGI/910110.SGI)
	for www-talk@nxoc01.cern.ch id AA05925; Tue, 31 Mar 92 09:42:46 -0800
Received: from yeager.corp.sgi.com by relay.sgi.com via SMTP (911016.SGI/911001.SGI)
	for @sgi.sgi.com:timbl@nxoc01.cern.ch id AA10133; Tue, 31 Mar 92 09:42:44 -0800
Received: by yeager.corp.sgi.com (911016.SGI/911001.SGI)
	for @sgi.com:cddev@sterling.com id AA14310; Tue, 31 Mar 92 09:42:43 -0800
Date: Tue, 31 Mar 92 9:42:42 PST
From: Eliot Lear <lear@yeager.corp.sgi.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: Edward Vielmetti <emv@msen.com>, www-talk@nxoc01.cern.ch,
        cddev@sterling.com
Subject: Re: Changing NNTP servers on the fly.
In-Reply-To: Your message of Tue, 31 Mar 92 09:17:36 GMT+0200
Message-Id: <CMM.0.90.2.702063762.lear@yeager.corp.sgi.com>


Hello all,

It is true that the nntp working group has been pushing against all
sorts of retrieval issues.  How any of the following would be
implemented is completely an open question, right now.  I should say
that much of what follows was the result of informal brainstorming,
and a lot of discussion at various USENIXes.  I think everyone agrees
that the NNTP people do not yet have enough information to make a
decision, and there is a growing concern about scope of whatever
project we would choose to take on, as one could quickly envision a
very broad all-encompassing project that would serve everyone's needs
but never be implemented.  As we begin to discuss best ways to present
news to the user, we immediately come up against five questions.
Briefly described, they are the following:

[1]	How shall the user select and receive new information?
	Are we talking SQL or Z.39 or what?

[2]	Should the mechanism be a pull-update/lockstep mechanism, as
	it is now, or does the server need to have enough smarts about
	things like priorities such that the mechanism should be
	async/interrupt driven?

[3]	Should we be writing the protocol with some sort of RPC
	mechanism in mind, such that the application doesn't even know
	if the service is local?

[4]	How do we handle archives?  Should a saved article be treated
	just as any other article, or do we need stronger archive
	search mechanisms in NNTP?  OR, should archive support be
	placed in the netnews model, itself (e.g., sendme style
	retrieval)?
	OR, should netnews reading become a distributed model, as
	access to the Internet approaches ubiquity?  Here is where
	we begin to delve into resource and information location
	issues.

[5]	Should whatever mechanism we design be limited to netnews, or
	should we also leave enough rope for someone to use it for
	mail?

So what we have right now is a growing list of questions, and not very
many answers - YET.

I must clarify one point Tim made.  News is currently stored and read
locally mostly for historical reasons.  The plain fact of the matter
is that netnews has been and continues to be more popular than the
Internet, simply because it costs less.  Thus in past people have not
considered reading over the Internet as ``the mechanism'' because it
could not be used as such by a large portion of the participants.
There is also an issue of how to find new and interesting articles
under a distributed model.  That's an area I haven't given much
thought at all to.

The statement that the current NNTP is nothing more than a file
transfer protocol is largely correct.  It's a specialized version that
takes advantage of the netnews architecture.  In fact, it would have
been quite possible to implement NNTP *in* FTP as an extension.

Eliot Lear
[lear@sgi.com]




From wei@sting.berkeley.edu  Mon Apr  6 06:07:39 1992
Return-Path: <wei@sting.berkeley.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03043; Mon, 6 Apr 92 06:07:39 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24917; Mon, 6 Apr 92 06:02:33 +0200
Received: by sting.Berkeley.EDU (5.65/XCF-1.34)
	id AA00155; Sun, 5 Apr 92 21:02:27 -0700
Date: Sun, 5 Apr 92 21:02:27 -0700
From: wei@sting.berkeley.edu (Pei Y. Wei)
Message-Id: <9204060402.AA00155@sting.Berkeley.EDU>
To: www-talk@nxoc01.cern.ch
Subject: HTML printing

Hi,

Does there exists something like a HTML to postscript/troff/* converter?
I'm looking for something better than ``www -n foo.html > lpr''.

Thanks.

-Pei

From emv@heifetz.msen.com  Mon Apr  6 06:20:26 1992
Return-Path: <emv@heifetz.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03055; Mon, 6 Apr 92 06:20:26 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26318; Mon, 6 Apr 92 06:15:21 +0200
Received: by heifetz.msen.com (/\==/\ Smail3.1.22.1 #22.11)
	id <m0lXl49-000HcJC@heifetz.msen.com>; Mon, 6 Apr 92 00:12 EDT
Message-Id: <m0lXl49-000HcJC@heifetz.msen.com>
To: wei@sting.berkeley.edu (Pei Y. Wei)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: HTML printing 
In-Reply-To: Your message of Sun, 05 Apr 92 21:02:27 -0700.
             <9204060402.AA00155@sting.Berkeley.EDU> 
Date: Mon, 06 Apr 92 00:12:19 -0400
From: Edward Vielmetti <emv@msen.com>

Pei,

You should look on the various SGML archives for tools.  If you
search
	www 'wais://wais.msen.com:210/web?sgml'
you should be led off in the right direction.

--Ed

From RASHTY@hujivms.bitnet  Mon Apr 13 17:28:35 1992
Return-Path: <RASHTY@hujivms.bitnet>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20004; Mon, 13 Apr 92 17:28:35 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA08959; Mon, 13 Apr 92 17:28:22 +0200
Message-Id: <9204131528.AA08959@dxmint.cern.ch>
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R1)
   with BSMTP id 8169; Mon, 13 Apr 92 17:28:06 SET
Received: from HUJIVMS (RASHTY) by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 1105; Mon, 13 Apr 92 17:28:05 SET
Received: by HUJIVMS (HUyMail-V6j); Mon, 13 Apr 92 18:28:03 +0300
Date:     Mon,  13 Apr 92 18:28 +0300
From: Dudu Rashty +972-2-584848 <RASHTY@hujivms.bitnet>
To: www-talk@nxoc01.cern.ch
Subject:  few bugs in www

Hi,

when i have tried to create a telnet session than

1) it used the rlogin instead of the telnet
2) the way the rlogin is used is wrong.. it sends the command
   RLOGINtelnet /username= ...  WITHOUT THE HOSTNAME


C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++C
HTACCESS.C   as it is now
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++C

	BOOL rlogin = strcmp(access, "rlogin");
	.
	.
	.

	if (!rlogin) {			/* telnet */
	    if (user) printf("When you are connected, log in as %s\n", user);
	    sprintf(command, "TELNET %s%s %s",
		port ? "/PORT=" : "",
		port ? port : "",
		hostname);
	} else {
	    sprintf(command, "RLOGIN%s%s%s%s %s", access,
		user ? "/USERNAME=" : "",
		user ? user : "",
		port ? "/PORT=" : "",
		port ? port : "",
		hostname);
	}
	if (TRACE) fprintf(stderr, "HTaccess: Command is: %s\n", command);
	system(command);
	return HT_NO_DATA;		/* Ok - it was done but no data */

C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++C
correct code is :
C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++C
HTACCESS.C

	BOOL rlogin = strcmp(access, "rlogin");
	.
	.
	.

	if (rlogin) {			/* telnet */
	    if (user) printf("When you are connected, log in as %s\n", user);
	    sprintf(command, "TELNET %s%s %s",
		port ? "/PORT=" : "",
		port ? port : "",
		hostname);
	} else {
	    sprintf(command, "RLOGIN%s%s%s%s %s",
		user ? "/USERNAME=" : "",
		user ? user : "",
		port ? "/PORT=" : "",
		port ? port : "",
		hostname);
	}
	if (TRACE) fprintf(stderr, "HTaccess: Command is: %s\n", command);
	system(command);
	return HT_NO_DATA;		/* Ok - it was done but no data */

C++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++C


                                              thanks
   	                                       __o     o__
	                                     _ \<,_   _.>/ _
	                                    (_)/ (_) (_) \(_)

                                             d    u   d    u
                                             Hebrew University
                                             Computation Center
                                             Jerusalem, Israel


From timbl  Tue Apr 14 12:00:05 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21572; Tue, 14 Apr 92 12:00:05 GMT+0200
Date: Tue, 14 Apr 92 12:00:05 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9204141000.AA21572@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: wei@sting.berkeley.edu (Pei Y. Wei)
Subject:  HTML printing: Conversion HTML->LaTeX->dvi->Postscript
Cc: www-talk@nxoc01.cern.ch

> Does there exists something like a HTML to postscript/troff/* converter?
> I'm looking for something better than ``www -n foo.html > lpr''.

Here's a simple html to latex converter using "sed". It's not complete, but it  
produces reasonable results on the W3 documentation, so I can now (at last) make a  
W3 book.  (A minor problem is that sed ignores any characters at the end of a file  
which are not followed by a final newline, and the NeXT editor sometimes generates  
HTML without the final newline.)

You have to prepend the document style you want to the output of sed. My makefile  
looks like

	echo " \\\\batchmode \\\\documentstyle{book}" > the_www_project.tex
	sed -f html2latex.sed $(THE_HTML) >> the_www_project.tex
	latex  the_www_project.tex


For a large book, I concatenate several html files, passing some of them through  
another sed file which removes the <TITLE> elements and demotes the <H1> to <H2>  
etc.  The file below italicises anchors, but in general it might be best to remove  
them altogether. The smartest thing would be to generate the TeX to make a little  
superscript reference to the page number to which a link refers.  Any TeX experts  
out there?

I'll put the "W3 Book" in postscript up for anonymous FTP shortly.


 Tim BL
__________________________________________ html2latex follows
1i\
\\begin{document}
$a\
\\end{document}
/<XMP>/,/<.XMP>/b lit
/<.XMP>/b lit
/<xmp>/,/<.xmp>/b lit
/<.xmp>/b lit
/s?&amp.?\\&?g
s?&gt.?>?g
s?&lt.?<?g
s?\\?\\backslash ?g
s?{?\\{?g
s?}?\\}?g
s?%?\\%?g
s?\$?\\$?g
s?&?\\&?g
s?#?\\#?g
s?_?\\_?g
s?~?\\~?g
s?\^?\\^?g
s?<TITLE>?\\author{Generated from the Hypertext}\\title{?g
s?</TITLE>?}\\maketitle ?g
s?<ADDRESS>??g
s?</ADDRESS>??g
s?<P>?\\par?g
s?<p>?\\par?g
s?<Hn>?\\part{?g
s?</Hn>?}?g
s?<H1>?\\chapter{?g
s?</H[0-9]>?}?g
s?<H2>?\\section{?g
s?<H3>?\\subsection{?g
s?<H4>?\\subsubsection{?g
s?<H5>?\\paragraph{?g
s?<H6>?\\subparagraph{?g
s?<UL>?\\begin{itemize}?g
s?</UL>?\\end{itemize}?g
s?<LI>?\\item ?g
s?<ul>?\\begin{itemize}?g
s?</ul>?\\end{itemize}?g
s?<li>?\\item ?g
s?<DL>?\\begin{description}?g
s?</DL>?\\end{description}?g
s?<DT>?\\item[?g
s?<DD>?]?g
s?<dl>?\\begin{description}?g
s?</dl>?\\end{description}?g
s?<dt>?\\item[?g
s?<dd>?]?g
s?<NEXTID[^>]*>??g
s?<A[^>]*>?\\it  ?g
s?</A>?\\/\\rm  ?g
: lit
s?<XMP>?\\begin{verbatim}?g
s?</XMP>?\\end{verbatim}?
s?<xmp>?\\begin{verbatim}?g
s?</xmp>?\\end{verbatim}?

From timbl  Thu Apr 16 08:59:03 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA26309; Thu, 16 Apr 92 08:59:03 GMT+0200
Date: Thu, 16 Apr 92 08:59:03 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9204160659.AA26309@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: wathu@lanka.ccit.arizona.edu (Wije Wathugala)
Subject: Extracting the source of HTML documents, menus etc.
Cc: www-talk@nxoc01.cern.ch

> Date: Wed, 15 Apr 92 16:16:31 MST
> From: wathu@lanka.ccit.arizona.edu (Wije Wathugala)

> Hi Tim,
> Thank you very much for your mail and all the work you are doing
> with WWW.

> I have one more questions. 

>
> (1)I would like to down load some menus from WWW server in HTML so  
> that I can
> edit them and use locally.  I knwo how to get text file with the
> command but do not know how to get HTML file.  I tried to start WWW
> by www -source but still I could not get the HTML file.  Is there a  
> command
> to get them. 


The trick is to browse to the document (menu etc) you want normally  
with www. Then type "help" to get the www address of the document.  
Copy it down.

Then, separately, give the command

	www -source -n -p documentaddress > file

to extract the source into a file.  You have to do this because if  
you start www in -source mode, you can't follow any links. We paln to  
add a command to extract the source of an article when you're  
browsing normally.

> (2) Can I post this type of questions to www-interest list ?

You should send them to www-talk@info.cern.ch, not to -interest.  
Interest is used for announcements to a larger number of people.

> Thank you
>
> Wije

	You're welcome!
	Tim

PS: I'm away next week (back 27th April) but others on the list may  
be prepared to answer more questions.



From timbl  Wed May 20 12:21:37 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07372; Wed, 20 May 92 12:21:37 GMT+0200
Date: Wed, 20 May 92 12:21:37 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9205201021.AA07372@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Peter Huang <peter@hpkslx.mayfield.hp.com>
Subject: Re: www on hp3/800 at HP
Cc: www-talk@nxoc01.cern.ch


>	I saw your posting for new release of WWW and I pulled the
>	source over.  I'm quite thrill about the work you have
>	done with WWW.  I was able to compile and run the "www" on
>	hp3/800 (hpux 8.0) machine (attached is the Makefile).

	Thanks ... help me understand what the difference is between
	hp700 and hp800 -- are they binary compatible? What does the
	term "snake" cover?

>	The 300 version will coredump if the /etc/services entry
>	for www is missing.

	You mean www will or, httpd?  Or inetd? www shouldn't use the
	/etc/services file. Whats a 300?

>   	The Daemon portion also compiled and run,
>	(need to add non-protoize function declaration in HTDaemon.c and
>	HTRetrieve.c.)  I'll try to contrib when I got time.

	Shucks --I thought we'd done all that in the 0.4 release!
	What are the functions which needs de-ansiing?  We compiled in
	on a sun ok, thought that was basic enough cc.

>	I have read the copyright page and know the restriction.


	We are considering forming a consortium to allow lots of contribution
	and well-defined sharing of code, and a role for commercial
	participation (buying, selling, sponsoring!)

> 	Let me know if I can help in any other ways.

	There is a list of "how to support the web" on the project page.
	I guess a server at HP might be comercially tricky unless for
	marketting info?  Any tools, neat server scripts all gratefully accepted!
	And pass the word around...
	
>	kudos for a software nicely done.

	Thanks -- on behalf of all the people involved!

	Tim BL

>	============================================================
>	Peter Huang 		HP Response Center Lab
>	Phone: (415)691-3417  	Email: peter@hpkslx.mayfield.HP.COM
>	100 Mayfield Avenue, MS 37MA, Moutain View, CA 94043
>	============================================================


From timbl  Wed May 20 13:38:20 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07560; Wed, 20 May 92 13:38:20 GMT+0200
Date: Wed, 20 May 92 13:38:20 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9205201138.AA07560@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Rama Porrat <rama@noa.huji.ac.il>
Subject: Line mdeo browser Q & A
Cc: www-talk@nxoc01.cern.ch

Rama Porrat <rama@noa.huji.ac.il> writes,

> I am trying to write a help online manual using www. I think www can be very
> useful and the stuff I deal with really needs such a system.
> BUT there are things which must be corrected in order that www will be
> usable, and I am writing in the hope that you can correct the www
> or tell me if those things can be corrected soon.

> The most annoying thing is the appearance of a "listing" file
> on screen when displayed by www.  The fact that pages
> are displayed "backward", that is, you repeat portions of the
> file alsready displayed when you come to the last page of a file,
> is unacceptable. It makes a mess out of the display.
> The way a listing file is displayed should adhere to what's in the
> file, without any "going back". This is essential.

We haven't noticed this!  By "listing" file, do you mean a plain text
file, or part of a marked-up file which uses the <listing> tag?
What you describe seems very strange.  Please give me a reference to the file
if it on a server, or else mail it to me. Thanks.

> The way the word [end] is displayed at the end of a screen is not nice.
> It is too close to the last line and in the "middle" of the line.
> The www writer should have the option not to display this [end]
> at all, or otherwise put it in a lower and to the side of the
> screen.

This is question of taste. It is easy to recompile the browser (just GridText.c)  
with the option to define the macro END_MARK as "".  You can do that locally. The  
[end] mark was put in to stop people trying to scroll past the end of the file,  
having to press RETURN every time just to see whether there was any more left. It  
would be simpler not to have it!

Note that the X11 browsers do not have an [end] mark. On VM/XA  and MVS systems
it is <End>.  You could make a void (or Hebrew) version if you needed to.
All these things are in the file GridText.c in the browser implementation.
You could make a local variant.  If others on this list agree, then we could  
incorporate certain options in the master source.

> The h1 header displays numbers which are confusing for the reader.
> For example, in my listing file, the addition of <h1> displays the numbers (on
> sequential pages)  no numbers on first page
> (50/64) on next page (64/64) on last page.
> This is quite confusing.

These numbers should not be connected with the <h1> header.  They are the line  
number of the bottom line on the screen, and the line number of the last line in  
the file. They were asked for by users, to give some indication of how far through  
the document one is.  The numbers are not displayed on the first page as that
is displayed before the whole file has been read, for speed.

>  You even get numbers like (69/64).

If you could scroll down so that blank space after the document were
displayed, the bottom line would be greater than the last line.  But I can't get it  
to happen. Could you give me the exact sequence you are using, please, along with  
document addresses?  And tell me the version number you have (type help to get it).

> Please erase those numbers, or display something clear, like:
> Page 1 out of 3          etc.

The file is not divided strictly into pages, so to displaying page numbers
would be confusing. For example, when one returns to a document one has left by a  
link, that link is displayed, if possible, a third of the way down the page. This  
will not necessarily allign with a "page".

> The <title> is inconsistent - at times it appears on screen, 

> at other times it doesn't.

	Yes. This is a feature of the pipeline optimisation of
	the code. When the document is started, its title is not
	known and neihter is its length. The first characters are
	displayed on the screen as soon as they come in. This
	gives a faster response time

> There should be a possibility to enter the www with a pre-known
> pointer.  For example, saying     www tex
> should be able to give you the top screen pertaining to tex, without
> going through a number of previous screens.

	There is.
	You have to give the network address of the document, which is
	not so simple. It would have to be something like

		www http://info/tex

	as "www tex" will cause www to read a file "tex" in the local directory.

	Note you can define alises for users
	
		alias texhelp www http://info/help/tex/html
		texhelp

	for example

>It is also very important to give the possibility of including
>comments in html sources.

	Yes. The <comment> junk </comment> tag is respected by
	recent browsers, but only recent ones: Not the NeXT browser.

I hope this at least explains the raesons for a few things. I have put the  
intermittency of the title on our list of bugs to be fixed. We may put in options
to control some of the other things. If anyone else on this list has views on these  
things, they should say. It is only from comments from real users what break away  
from our own view of what if "nice" in a browser: Thanks for your feedback.

	Tim BL



From timbl  Thu May 21 10:21:30 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10391; Thu, 21 May 92 10:21:30 GMT+0200
Date: Thu, 21 May 92 10:21:30 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9205210821.AA10391@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: frenkiel@cdfap2.in2p3.fr (Pierre Frenkiel)
Subject: Re: www line mode browser
Cc: www-talk@nxoc01.cern.ch


> Date: Thu, 21 May 92 10:04:16 +0200
> From: frenkiel@cdfap2.in2p3.fr (Pierre Frenkiel)

>  I'm using an X terminal, with a mterm window of 60 lines.
> it's rather frustrating to see that the browser only uses 24 lines.
> I thought that the use of the terminfo corresponding to the TERM variable 

> was a standard unix feature.
> Pierre Frenkiel - tel:(331)/44.27.15.27 - e-mail:frenkiel@cdfap2.in2p3.fr


1.  Unfortunately it is only standard unix, and www runs also on vms, vm, pc,...
    However, if you contribut the code to return the width and height of
    the terminal for unix, I'll put it in to a unix-specific section
    and many will be grateful.

2.  Try
		alias www /usr/local/bin/www -p60

3. I guess a shell script could do that too -- that's what we do on VM/CMS

	Tim BL

From bloemer@helios.tnt.uni-hannover.dbp.de  Thu May 21 12:21:57 1992
Return-Path: <bloemer@helios.tnt.uni-hannover.dbp.de>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10668; Thu, 21 May 92 12:21:57 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10114; Thu, 21 May 92 12:20:28 +0200
Date: 21 May 92 10:18
From: "(Arnold Bloemer)" <bloemer@helios.tnt.uni-hannover.dbp.de>
To: www-interest@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Message-Id: <RFC-822*C=de;ADMD=dbp;PRMD=uni-hannover;OU=tnt;OU=helios;S=AA06131;G=9205211018>
Subject: Program Links in WWW

RFC-822-HEADERS:
Return-Path: <@CDC2.RRZN.UNI-HANNOVER.DE:bloemer@helios.tnt.uni-hannover.de>
Cc: bloemer

==================
I would like to know, whether anybody has extended WWW such, that it is possible
to start arbitrary programs by hitting a button in a WWW browser.

Hyberbole has this feature and it could also make WWW much more mighty.

Included is a short discussion with Pei Y. Wei on this issue. 

By the way, many thanks to Tim Berners-Lee in general, to Pei Y. Wei for his 
wonderful violaWWW browser and to all people involved in the WWW project.

Arnold

________________________________________________________________________________

Dipl.-Ing. Arnold Bloemer	   Universitaet Hannover
				   Institut fuer Theoretische Nachrichtentechnik
				   und Informationsverarbeitung
bloemer@tnt.uni-hannover.dbp.de    Appelstrasse 9A
fax:    +49-511-762-5333           D-3000 Hannover 1
phone:  +49-511-762-5320           Germany
________________________________________________________________________________


From bloemer Tue May 12 18:13:06 1992
To: timbl@info.cern.ch, wei@xcf.berkeley.edu
Subject: World Wide Web and Viola
Cc: bloemer

...
1. Is it possible to define pseudo hyperlinks which start a subprocess?
That would be really phantastic because it allows for nice tutorials with
trial buttons. On xcf.berkely.edu I saw:


About XMap ... 

<P>
Click here for a demo.
<S>/*script*/
	if (accessible("/usr/users/ftp") != "") {
		print("doing /usr/users/ftp/ftp_public/misc/ht/projects/xmap/ultrix.ws.2.1 /usr/users/ftp/ftp_public/misc/ht/projects/xmap/sf_oak &amp \n");
/*		system("/usr/users/ftp/ftp_public/misc/ht/projects/xmap/ultrix.ws.2.1 /usr/users/ftp/ftp_public/misc/ht/projects/xmap/sf_oak &amp ");*/
	} else if (accessible("/map" != "")) {
		/* in case this is running in xcfdemo */
		print("doing /xmap/ultrix.ws.2.1 /xmap/sf_oak &amp \n");
/*		system("/xmap/ultrix.ws.2.1 /xmap/sf_oak &amp ");*/
	} else {
		/* can't guess where xmap executables might be */
		bell(); /* later, use dialogbox */
	}
</S>

Unfortunately it doesn't work, in Viola no button was shown.

...


From wei@sting.Berkeley.edu Wed May 13 16:38:52 1992
Subject: Re:  World Wide Web and Viola
To: bloemer@helios.tnt.uni-hannover.de, timbl@nxoc01.cern.ch,
        wei@sting.Berkeley.edu

> 1. Is it possible to define pseudo hyperlinks which start a subprocess?
> That would be really phantastic because it allows for nice tutorials with
> trial buttons. On xcf.berkely.edu I saw:

> 	About XMap ... 
...
> 	<P>
> 	Click here for a demo.
> 	<S>/*script*/
> Unfortunately it doesn't work, in Viola no button was shown.

Whoops, I guess I really have to clean up the HTML files on our site :-)
Most of this stuff was for internal demonstrations, and the scripting 
stuff was an unfinished experiment. It doesn't work for you because you must 
have the demonstration Xmap program locally. But, yes, the intent of the 
<S> tag is to embed viola scripts in HTML, so that you can ``program links''
to do lots of complicated and neat things... In this case, the script 
tries to start up another process.

...

From timbl  Thu May 21 14:21:41 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10960; Thu, 21 May 92 14:21:41 GMT+0200
Date: Thu, 21 May 92 14:21:41 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9205211221.AA10960@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: "(Arnold Bloemer)" <bloemer@helios.tnt.uni-hannover.dbp.de>
Subject: Program Links in WWW
Cc: www-talk@nxoc01.cern.ch



> I would like to know, whether anybody has extended WWW such, that it is possible
> to start arbitrary programs by hitting a button in a WWW browser.
>
> Hyberbole has this feature and it could also make WWW much more mighty.
>
> Included is a short discussion with Pei Y. Wei on this issue. >
> By the way, many thanks to Tim Berners-Lee in general, to Pei Y. Wei for his 

> wonderful violaWWW browser and to all people involved in the WWW project.
>
> Arnold

Very  good question. The problem is that of programming language. You need  
something really powerful, but at the same time ubiquitous. Remember a facet of the  
web is universal readership. There is no universal interptreted programming  
language. But there are some close tries. (lisp, sh).  You also need something  
which can run in a very safe mode, to prevent virus attacks.

Ideally, the language should include object-oriented inheritance, a basically  
functional nature, and a clean syntax. It should be interpretable and compilable.
At least one public domain. A pre-compiled standard binary form would be cool too.  
It isn't here yet.

In reality, what we would be able to offer you real soon now with document format  
negotiation is the ability to return a document in some language for execution,  
with the option of being able to provide it in several languages, the language  
being a "data format" which can be negotiated between client and server at  
run-time.  For, for example, one could provide it in viola script and/or in /bin/sh  
which would cover most ofthe unix world.

	Tim BL



From raisch@cthulhu.control.com  Thu May 21 18:53:00 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11993; Thu, 21 May 92 18:53:00 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06060; Thu, 21 May 92 18:51:25 +0200
Received: by control.com (4.1/Spike-2.0)
	id AA06599; Thu, 21 May 92 12:50:20 EDT
From: raisch@cthulhu.control.com (Robert Raisch)
Message-Id: <9205211650.AA06599@control.com>
Subject: Links and Type
To: www-talk@nxoc01.cern.ch
Date: Thu, 21 May 92 12:50:19 EDT
X-Mailer: ELM [version 2.3 PL11]

First of all, hearty congrats to the WWW people.  It's a great tool, and
since it is based on SGML, it has the broadest scope of any solution I have
yet seen.

To others, see the current issue of Byte magazine regarding "Info-Glut" and
SGML.  Interesting.

----------------------

I have a few recommendations regarding new link types in WWW.  This is based
on thinking about hyper-applications for almost 15 years, (ever since I 
first had the pleasure of hearing Ted Nelson speak in 1977.)

First though, there are a few ideas which I feel should be mentioned to 'set
the stage' for my list.

	Transparent Documents  --

		a transparent document is one which a user creates locally,
		and that is a new representation of an existant document.
		Transparent documents are used to create new local links on
		a document which I do not have permission to modify.

		Transparent documents can then be made available to others,
		(published) just as a "regular" document is, thus facilitating
		the creation of new works from old.

	User Documents --

		a user document is where I keep my "bookmarks", links to
		local documents, links to messages from others, links to
		my "attention" links, (see below).  User documents are where
		we, as navigators of the docuverse, are defined as individuals.

		They are also where we can keep links to other user documents
		which have been permitted to view/modify my own local documents.

		Another function of the User document is to collect users into
		an abstract group. (Thus, based on my membership in user 
		document 'Research Group', I am permitted access to materials
		'owned' by that group. Of course, messages sent to an abstract
		group then become available to all members of that group.)

		(Please note that a User Document is nothing more or less than
		 a collection of links, (as all documents are).)

------------------

Now, on to my list of link types....

There are 4 'minimal' link types which, I believe, a useful h-app *must* 
support.

	1.	Replacement
			-- when activated, replaces the current document
			   with a new document.

	2.	Annotation
			-- when activated, overlays a new document on the
			   current document, partially obscuring the original.

	3.	Inclusion
			-- when the document is created, elements from other
			   documents are collection to be included in the
			   representation of the current document.  (Quotes)

	4.	Expansion
			-- when activated, new information is added to the 
			   current document, expanding the original scope.
			   (Think of outline processors, and the collapse
			    of detail.)  This is also a reflection of
			   Nelson's concept of 'stretch text'.  (Stretch text
			   is where a sentence is constructed in such a 
			   way that when it is collapsed it states it's thesis 
			   in simple terms, and when expanded adds detail to
			   further express itself.

There are 3 further types which I believe are necessary to complete the
function paradigm.


	6.	Execution

			-- when activated, some arbitrary function is performed.
			   The point that was mentioned about the lack of an
			   ubiquitious scripting language is well made.  Lisp
			   is too arcane for most.  Shell languages are too
			   platform specific.  What is needed is a simple
			   to understand, freely available scripting platform.
			   Although I hesitate to mention it, REXX might be
			   a reasonable choice due to it's broad availability.

	5.	Attention   (a specialisation of the Execution type)

			-- when the current document is modified (a link is
			   added, or removed, or the document is merely read)
			   a message is sent to the 'owner' of the attention
			   link.  This message creates a new link in the 'user
			   document' of the individual who placed the attention.

			   In this way, I could place a link onto a document I 
			   had interest in, and when it was changed or accessed 			   in some manner, I would be informed.

	7.	Collection  (a non-local specialisation of the Execution type)

			-- when activated, a collection link leaves the current
			   document, and 'travels' the docuverse, in search of
			   other documents which satisfy it's internal criteria.
			   This is the concept of a 'knowbot'.

			   Collection links can be activated based on day and
			   time, much like the WAIS questions in the MAC 
			   WAIS interface, WAIS-Station.  They could also be
			   activated based on external events, such as the 
			   activation of an attention link.

			   Collection links would be written in the ubiquitious
			   scripting language, and would only be allowed to 
			   operate on documents which were EXPLICITLY permitted.


----------------------------


One of the missing pieces here is the ability of creating new h-texts, and 
adding new links to old h-texts.

Hypertext, and like systems, are of limited use if they do not support 
collaboration.  I feel that this is a VERY important point.


----------------------------

So.....

	Scenerio:

		I start my session with my h-app, and open my user
		document.

		I notice that 17 of my attention links have been activated 
		in the last day.

		I select the most interesting and activate the link which
		it created in my personal user document.

		I am now reading an article which I previously linked, and
		see that an annotation which I made some time ago has been
		added to, by a colleague.

		The comments are pertinant to my current work, so I create
		a new local 'transparent' document to mirror the original 
		work.

		On this new document, I make a few new annotations and decide
		to made this new work available to the research group of which
		I am leader.  I place a link to it in the user document which
		represents my working group.

		I also send a new document link to the colleague who made the
		original comments, so that he can see how I have interpreted 
		his ideas, and included them into my own research.

		I move ever onwards...

---------------------

Ok, I hope that that fuels a little discussion, and I would *love* to hear 
from others regarding these ideas.  

(Yes, some of what I have talked about here exists, in various forms, on my 
own personal system, but I would be *very* interested in hearing from 
developers who might be interested in making something real and useful from 
it.  I, sadly, have too little time to make these ideas real.  My ultimate
goal would be to make the realisation of these ideas available in the public
domain.)

Regards, /rr

"knowledge is the *only* weapon"
-- 

From emv@nigel.msen.com  Fri May 22 06:12:06 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12915; Fri, 22 May 92 06:12:06 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10097; Fri, 22 May 92 06:10:38 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0loQxU-000A6nC@nigel.msen.com>; Fri, 22 May 92 00:10 WET DST
Message-Id: <m0loQxU-000A6nC@nigel.msen.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: "(Arnold Bloemer)" <bloemer@helios.tnt.uni-hannover.dbp.de>,
        www-talk@nxoc01.cern.ch
Subject: Re: Program Links in WWW 
In-Reply-To: Your message of Thu, 21 May 92 14:21:41.
             <9205211221.AA10960@ nxoc01.cern.ch > 
Date: Fri, 22 May 92 00:10:08 EDT
From: Edward Vielmetti <emv@msen.com>

the "atomicmail" work from bellcore / nat borenstein on a programming
language to embed in active mail messages sounds like what you want.
they have a patent on it :(.  ask nsb for details.  --Ed

From timbl  Mon May 25 16:40:01 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18996; Mon, 25 May 92 16:40:01 GMT+0200
Date: Mon, 25 May 92 16:40:01 GMT+0200
From: timbl (Tim Berners-Lee)
Message-Id: <9205251440.AA18996@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: pflynn@curia.ucc.ie (Peter Flynn)
Subject: Re: search engines & views
Cc: www-talk@nxoc01.cern.ch

>        All you do is map the parameters of the virtual search engine
>        onto a document name -- like
>
>        /INDEX/full-text/tryhard/depth=5/boolean
>
> Does this mean (at a primitive level) you could code a grep command
> as a document name?
>
	Yes -- sure.  Its a question of writing down the
	algorithm. In perl, I'm sure its a cinch ... you could
	also do it with sh and sed :-( but basically for example
	you need to take say

	/grep/mydir/i?joe+bloggs

	and turn that into

	grep -l -i "(joe)|(bloggs)" | awk -f ls2html.awk

where ls2html.awk looks something like:

	BEGIN {  print "Select one of:\n<MENU>" }
	{ printf "<LI><A HREF=./%s>   %s</A>\n", $1, $1 }
	END { print "</MENU>" }

The awk generates the HTML for a menu.  I guess you could use awk in fact to  
generate the grep command too.  But these are just ideas.  or are you using VMS?  
Yes, you could probably do it with DCL and SEARCH.

Of course if you can handle C, then hack the sample httpd.

> ///Peter

	Tim

From kim@usceast.cs.scarolina.edu  Mon May 25 18:05:56 1992
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19313; Mon, 25 May 92 18:05:56 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03674; Mon, 25 May 92 18:04:35 +0200
Received: from Relay.Prime.COM by mcsun.EU.net with SMTP
	id AA28869 (5.65b/CWI-2.163); Mon, 25 May 1992 18:04:29 +0200
Received: from usceast by Relay.Prime.COM; 25 May 92 12:04:48 EST
Return-Path: <kim@usceast.cs.scarolina.edu>
Received: by usceast.cs.scarolina.edu (cs.grandpoobah.043092)
From: Su-Hee Kim <kim@usceast.cs.scarolina.edu>
Message-Id: <9205251600.AA14397@usceast.cs.scarolina.edu>
Subject: Installation of viola
To: www-talk@nxoc01.cern.ch
Date: Mon, 25 May 92 12:00:50 EDT
Cc: kim@mcsun.eu.net (Su-Hee Kim)
X-Mailer: ELM [version 2.3 PL11]

	To whom it may  concern	

	I am trying to install your viola www package on my account,
not public.  When I make the Makefile, it gives me a message which says 
" don't know to make -lXmu''. The file libXmu.a is under the /usr/lib.
In the Makefile, there are many variables such as CONFIGSRC =
$(TOP)/config,  LIBSRC = $(TOP)/lib which are not available under my 
account.  Am I missing some?  I got ViolaWWW_920515.tar.Z from your
place.  I want to make this package run as soon as possible.        
	Thank You very much.




From wei@xcf.berkeley.edu  Tue May 26 02:47:31 1992
Return-Path: <wei@xcf.berkeley.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19834; Tue, 26 May 92 02:47:31 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16395; Tue, 26 May 92 02:46:12 +0200
Received: by xcf.Berkeley.EDU (5.65/XCF-1.34)
	id AA21056; Mon, 25 May 92 17:46:02 -0700
Date: Mon, 25 May 92 17:46:02 -0700
From: wei@xcf.berkeley.edu (Pei Y. Wei)
Message-Id: <9205260046.AA21056@xcf.Berkeley.EDU>
To: kim@usceast.cs.scarolina.edu, www-talk@nxoc01.cern.ch
Subject: Re:  Installation of viola
Cc: kim@mcsun.eu.net

You should first run xmkmf to generate a Makefile that is specific to 
your system. 

If the resulting Makefile still gives you trouble, then manually change
the Makfile accordingly...

Ie: in my particular Makefile, you see
		...
        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
		...

> "don't know to make -lXmu".  The file libXmu.a is under the /usr/lib.

So, change the LIBSRC line to something like:

           LIBSRC = /usr/lib

> I want to make this package run as soon as possible. I sent a
> mail regarding this problem to Dan. But I found that he is not there.

Cool. Have no idea who Dan is thou...

Mail me if you still have trouble setting it up.

-Pei

From timbl@www2.cern.ch  Tue May 26 16:01:05 1992
Return-Path: <timbl@www2.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21392; Tue, 26 May 92 16:01:05 GMT+0200
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04242; Tue, 26 May 92 15:59:45 +0200
Received: by  www2.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00465; Tue, 26 May 92 15:55:11 GMT+0100
Date: Tue, 26 May 92 15:55:11 GMT+0100
From: timbl@www2.cern.ch
Message-Id: <9205261455.AA00465@ www2.cern.ch >
Received: by NeXT Mailer (1.63)
To: John O'Neall <JON@frcpn11.in2p3.fr>
Subject: Making a simple file server for unix
Cc: www-talk@nxoc01.cern.ch

> Date:         Tue, 26 May 92 09:16:33 EST
> From: John O'Neall <JON@frcpn11.in2p3.fr>

John,

Thanks for your mails asking about how to make a simple hypertext  
list of files. 


Let me take your model of the three layers. I sugest that the 1st  
layer

>helppage (1st-layer):  various info and pointers to local
>         info that won't change much as well as to WWW proper.
>         Among other things, it'll point to a [...]

you write by hand.  You can read the HTML documentation in    
http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html
or you can just copy another node which looks like what you want.   
(Get its address and then read it with www -source address). Or both.

You might want to put pointers to the general subject index, and the  
index of HEP sites.  Let me know when you set up a server so that I  
can put in on the list!

For the second layer,

> 2nd-layer list:  this is the thing that will point to ALL the
>    local flat files.  Then I need an automatic (cron'd) procedure
>    to regenerate the list every time I add more flat data
>     files (or periodically).


This is easy: you generate it with a little shell script. How about  
the one appended to this message?  It generates a hypertext menu of  
files in a set of directories (passed as arguments). You can massage  
it to put in your own title, heading, etc. If you can generate some  
human-readable description of each file, so much the better.  You  
could run this as a cron job into an Overveiw.html file which you  
then publish with httpd, or run it from a server daemon script so  
that the list is generated fresh for every read, and always  
up-to-date.

The third layer is your set of files.  If you publish these with a  
server script, you can add to each one a title (if you can generate  
it) and maybe a link back to the list of other documents befre you  
just send the plain text file.

You could read some of the tips on the web about ettiquette, etc.

>By the way, if such a list already exists in W3 somewhere, I'll be
>happy to point to it too.  And then there's no reason why our server
>shouldn't be accessible to the rest of W3.

It would be a great addition to the web!  Let me know when it's up  
and I'll put pointers to it from some overview documents. (evn at the  
experimental stage, I'll mark the links "experimental" if you like).

>Tim, any chance of getting the hypertext editor for something other
>than Next one day?  I realize that was the simplest thing to develop
>it on, but I suspect it's not the commonest workstation in HEP.

It's on the "hit-list" and we're lookig for volunteers. Maybe the Mac  
browser will be the first to be also an editor. Or maybe one of hte X  
browsers.  I agree the NeXT is not the most common platform! (Though  
it is neat ;-)

>Excuse me for rushing, but I'm supposed to present this project to  
the
>HEPIX-F meeting in Paris on Tuesday and this weekend will be a long  
one
> (at least, in France).

Good luck! Mail cailliau@(I'm off to the US -- so I'm rushing too!)

Mail me or www-talk@info.cern.ch if you have any problems... 


If you have smart ideas, circulate them to this list too.

	Tim

__________________

#! /bin/sh
# Generate hypertext menu from directory list
echo "<TITLE>Information under: $*</TITLE>"
echo "<H1>$*</H1>"
# If there is a README file include that as plain text
if [ -f $1/README ]; then
    echo "<XMP>"
    cat $1/README
    echo "</XMP>"
fi
# Now generate a list of links to files
echo "<DIR>"
for dir in $*
do (
    cd $dir
    for file in *.html *.txt
    do 

	echo "<LI><A HREF=./$dir/$file>Title of $file</A>" 

    done
    )
done
echo "</DIR>"


From jfg@dxcern.cern.ch  Wed Jun  3 10:13:46 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06062; Wed, 3 Jun 92 10:13:46 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13620; Wed, 3 Jun 92 10:11:44 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA01209; Wed, 3 Jun 92 10:11:30 +0200
Date: Wed, 3 Jun 92 10:11:30 +0200
Message-Id: <9206030811.AA01209@dxcern.cern.ch>
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Sender: jfg@dxcern.cern.ch
To: Craig A. Summerhill <craig@cni.org>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Just a question
References: <9205272153.AA19773@a.cni.org>

>>>>> On Wed, 27 May 92, Craig A. Summerhill <craig@cni.org> was worried:

Craig> What happened to the hacker's dictionary that used to be on WWW?
Craig> I can't seem to find it anymore.  It was a good resource... :*)

  The hacker's dictionary that once was on the default home page was a
demonstration of Hyper-G, a hypertext system developed by Frank Kappe
and others at the University of Graz, Austria. Hyper-G is now fully
operational and includes much more information than just the hacker's
jargon. We have a pointer to it on the list of W3 servers. There is
also a direct pointer to the hacker's jargon from the list of academic
information, under `Computing'. You will find that the presentation
has changed. For reference, the UDIs to Hyper-G and the Hacker's
Jargon are http://iicm.tu-graz.ac.at:80/ROOT and
http://iicm.tu-graz.ac.at:80/Cjargon

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"In general, it is safe and legal to kill your children and their children"
-POSIX Prg Gt, by Donald Lewine, O'Reilly & Associates, 1991, p.110
(On process termination)


From jfg@dxcern.cern.ch  Wed Jun  3 10:13:12 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06058; Wed, 3 Jun 92 10:13:12 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13602; Wed, 3 Jun 92 10:11:16 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA01201; Wed, 3 Jun 92 10:11:11 +0200
Date: Wed, 3 Jun 92 10:11:11 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206030811.AA01201@dxcern.cern.ch>
To: www@nxoc01.cern.ch, www-talk@nxoc01.cern.ch, www-interest@nxoc01.cern.ch
Subject: Mailing list problems

  An error of configuration has prevented recent messages from being
broadcast to the list. Also, many new addresses that we collected were
wrong. My apologies to those who tried to post and received loads of
bounces. If you come to Geneva, I'll owe you a drink :-) Everything
should work fine now, and I'll re-post the messages that I know of.

  I'd like to take the opportunity of this administrative message to
ask for your cooperation: if you know a valid address for one of the
people mentioned below, please mail it to me. They have been removed
for now...

kova!floss
Elizabeth Porteneuve CNET CRPE Net Mgr -- JENC92 <porteneu@frcrpe61.bitnet>
Ermanno Polli - INFN Frascati - AIHEP-92 <polli@lnf.infn.it>
Marc de Lyon -- JENC92 <Marc.deLyon@ica.Rulimberg.nl>
John McMillan - Univ. Leeds - AIHEP-92 <phybjem@sun.leeds.ac.uk>
Gottfried Mayer-Kress <gmk@pegasos.ucsc.edu>

  Your devoted list manager,

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"The future will be better tommorrow."  -- Dan Quayle


From jkp@lusmu.cs.hut.fi  Wed Jun  3 19:10:23 1992
Return-Path: <jkp@lusmu.cs.hut.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09993; Wed, 3 Jun 92 19:10:23 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19336; Wed, 3 Jun 92 19:08:25 +0200
Received: from lusmu.cs.hut.fi by mcsun.EU.net with SMTP
	id AA06080 (5.65b/CWI-2.165); Wed, 3 Jun 1992 17:58:45 +0200
Received: by lusmu.cs.hut.fi id AA18097
  (5.65c8/HUTCS-C-91-07 for www-talk@nxoc01.cern.ch); Wed, 3 Jun 1992 18:57:19 +0300
Date: Wed, 3 Jun 1992 18:57:19 +0300
Message-Id: <199206031557.AA18097@lusmu.cs.hut.fi>
From: Jyrki Kuoppala <jkp@cs.hut.fi>
Sender: jkp@lusmu.cs.hut.fi
To: www-talk@nxoc01.cern.ch
Subject: Virtual newsgroups and creating the memory of Usenet via www and wais 
Organization: Helsinki University of Technology, Finland.

Here's an article I sent a while ago to various Usenet newsgroups:

>With the enormous numbers of groups now existing, tracking
>through all of them to find interesting and relevant topics
>is becoming very hard, and it seems clear that the namespace
>is becoming hopelessly muddled by democracy in action, so
>a software solution might be the only way out. 

An idea just popped up in my head.

Currently we have a news gateway to www (a www client can be used as a
newsreader), which helps to organized groups better than the flat
namespace of the newsgroups most other newsreaders seem to have.  Ie. you
create www nodes which have topically similar newsgroups listed
together in a node and hypetext links to those newsgroups.  Each user
can make personal nodes having the groups or use ones someone else has
published on the net.

Now, as www works very well with dynamic node creation (which is the
way the nntp and wais gateways work), to have a "virtual newsgroup"
you would just instead of having a link to a "real" newsgroup in a www
node have a link to a FIND node with suitable keywords, and then wais
would be used to search the articles mathing the find criteria and
would create a virtual node for the matches, like the nntp gateway
currently creates a virtual node with the current contents of a real
Usenet group.

As the www news client / gateway already has the capability to follow
links to earlier dicussions (References: field), following the tree
from the virtual newsgroups would be easy.  For more usability, the
www / news gateway (or the news system) should also create forward
references, ie. to backtrack the References field when new articles
come in and thus keep track of articles which are comments to a
certain article.

To apply the same principles to other newsreaders, nntp should be
extended to have the "newsgroup" instead be a "search criteria", which
would be interpreted by the wais (or some other search engine) server
and transparent to nntpd (except if it's the old-fashioned newsgroup
name).  People would have the search criteria - keywords from the
text, poster names, whatever - in their .newsrc files alongside with
the newsgroup names.

I'm not sure how to keep track of what articles the user has already
read, as there are no article numbers for the virtual groups.  Keeping
track of message IDs takes a lot of space.  But even as a browsing
tool it would be nice.

Hmm, come to think of it to combine a wais server indexing the news
database with the www / nntp gateway seems like the obvious thing to
do, so somebody must have done it already?

Also, are there any anonymous nntp servers which function as archives
for some or all of the groups, ie have long-term storage available by
nntp?  CD-ROM online or something.  With the www news gateway and some
minor modifications for some purposes saving an interesting article to
local disk would be unnecssary, instead just the message ID would be
saved (or added to a node on an organized www document so one could
find it later) and the article could later be found on a generic nntp
archive.  To save bandwidth and avoid single points of failure the
nntp archive could be a distributed database with servers on various
parts of the world and cooperation and caching between them - the
servers could compute a hash from the message ID and archive a certain
percentage of the article.  With some coordination the burden of disk
space could be shared so there needn't be one gigantic nntp archive.

//Jyrki

From davis@willow.tc.cornell.edu  Wed Jun  3 21:56:06 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12314; Wed, 3 Jun 92 21:56:06 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02089; Wed, 3 Jun 92 21:54:17 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA29791; Wed, 3 Jun 92 15:56:01 EDT
Date: Wed, 3 Jun 92 15:56:01 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206031956.AA29791@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: HTML and bitmaps

I would like to include non-text data (e.g. bitmaps, sound)
in my hyperdocuments.

One way to do this would be:

1) extend HTML to allow for such data, e.g.  a tag like
<BITMAP height=100 width=100 encoding=FAXG4>

(I think the WWW protocols would require that the data be uuencoded,
since I don't think they will allow 8bit data)

2) extend Viola (my WWW browser of choice) to recognize
this tag and do the right thing with it, i.e. uudecode it then
start a display program (or place the bitmap into the
document)

A related generalization would be if the browsing program were able to
choose among a set of alternative display programs based on the "type"
of the document linked to.  In this case, I could have an anchor
that pointed to a bitmap file in addition to (or instead of) placing
bitmaps within HTML files.

This sort of thing is possible in both WAIS and MetaMail.  In document
has a type known to the WAIS server, the client inspects this type and
selects a display program according to the values in the Xwais.filters
X resource; In MetaMail each piece of mail is labeled with an explicit
type; MetaMail consults the mailcap file to determine how to display
each type.

I see that anchors in WWW can have a TYPE attibute, but I can't tell
whether this is the type of the link or of the thing linked to.  If
the former, then I see no easy way to do it in WWW, short of adding
the facility to Viola to decide the document type by inspecting it
(e.g. looking for magic header bits which at least some data formats
support.)

I would be grateful for your comments on this matter.

best wishes

From davis@willow.tc.cornell.edu  Wed Jun  3 21:57:49 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12337; Wed, 3 Jun 92 21:57:49 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02217; Wed, 3 Jun 92 21:55:59 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA29814; Wed, 3 Jun 92 15:57:46 EDT
Date: Wed, 3 Jun 92 15:57:46 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206031957.AA29814@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: WWW vs DynaText

The current issue of Byte has an article on electronic books
written by two folks from the Electronic Book Technologies
company of Providence, RI, USA.  These folks sell a system
called DynaText which delivers electronic books including hypertext
using SGML.  

Can anyone compare this system with WWW?

From timbl  Wed Jun  3 22:45:52 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13287; Wed, 3 Jun 92 22:45:52 MET DST
Date: Wed, 3 Jun 92 22:45:52 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206032045.AA13287@ nxoc01.cern.ch >
To: davis@willow.tc.cornell.edu, www-talk@nxoc01.cern.ch
Subject: Re: WWW vs DynaText
Cc: timbl

When we looked at dynatext, about a year ago, it was a system which
built (like compiled) a bunch of already written SGML into a "book"
which ould be scanned on-line. The book was kept in some dynatxtext-special
form, with indexes etc. It did not parse SGML on the fly as W3 does.

There is no client-server protcol to dynatext, so you ahve to have the
"book" mounted by NFS say where you want to read it.

A strange thing was that if you made some incremental
change to the underlying SGML then you had to remake the
whole book. The licencing was by the number of books
you made, so every time you reran "make book" or whatever it
was called, you had you rlicense edcremented by one.

I think there is a bit of a review about in on the web... try
www   http://info.cern.ch/hypertext/Products/DynaText/Overview.html
which Ifound by a link from
  http://info.cern.ch/hypertext/Products/Overview.html

Dynatext may have improved since we tried it. The mail
addreses of peopl einvolved are linked to those documents.

Hope this helps.

Tim BL
 PS: It was more like 2 years ago.

From jfg@dxcern.cern.ch  Fri Jun  5 19:55:55 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06212; Fri, 5 Jun 92 19:55:55 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12751; Fri, 5 Jun 92 19:53:57 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA03322; Fri, 5 Jun 92 19:53:52 +0200
Date: Fri, 5 Jun 92 19:53:52 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206051753.AA03322@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: HTML and bitmaps
References: <9206031956.AA29791@willow.tc.cornell.edu>

  One more comment on this: 

> (I think the WWW protocols would require that the data be uuencoded,
> since I don't think they will allow 8bit data)

  WWW can inherently use several protocols to fetch data. Some of them
may be limited to 7-bit characters, but the WWW architecture itself is
designed with full 8-bit bytes. In particular, the HTTP protocol that
we have defined supports 8-bit data. However, HTML, our language for
describing hypertext, is based on SGML which is essentially a 7-bit
construct (actually, it can only handle a predefined set of characters).

  Your impression may come from the fact that in the current
implementation, as HTTP can only return HTML documents, the
distinction between them is not clear. The new phase of HTTP that we
are currently designing will be able to handle documents of arbitrary
types. These documents are then processed by the client program
depending on its own capabilities, with the possible help of external
converters or applications, much like the Xwais.filters stuff.

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
Engineers  think that theory  approximates reality.   |   Mathematicians never
Physicists think that reality approximates theory.    |   make the connection.

From connolly@pixel.convex.com  Sat Jun  6 07:56:12 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07371; Sat, 6 Jun 92 07:56:12 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16481; Sat, 6 Jun 92 07:54:08 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA24856; Sat, 6 Jun 92 00:53:24 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23369; Sat, 6 Jun 92 00:53:21 -0500
Message-Id: <9206060553.AA23369@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary=-
Subject: MIME as a hypertext architecture
Date: Sat, 06 Jun 92 00:53:20 CDT
From: Dan Connolly <connolly@pixel.convex.com>

NOTE: This message uses existing and proposed MIME structuring
conventions. Some parts of it may look strange on pre-MIME viewers.

---

The WWW project needs an architecture for interchange of structured
multimedia hypertext documents. The original architecture, HTML,
introduced some structuring conventions and a way of specifying
hypertext links.

The HTML format is under stress from several issues:
	* We need an SGML DTD so that we can parse HTML using
	something besides the public implementation of WWW, and so that
	we can verify documents converted from other authoring
	systems such as GNU info, Andew's EZ, or FrameMaker.

	* We need to be able to distribute documents and document
	elements in other formats, including raw 8 bit data streams.
	The SGML NOTATION feature falls short of providing and
	adequate mechanism.

	* The UDI syntax doesn't match the SGML attribute syntax.
	There are problems with quoting out-of-band characters, and
	the length of complex UDI's may exceed SGML limits and/or
	line-length limits of transport mechanisms. Also, the
	terse syntax of UDI's conflicts with the goal that they
	be human-readable.

This is a proposed architecture for global hypertext, addressing
the issues raised by the WWW project, but using the MIME architecture.

We define a new subtype of the MIME multipart content type called
x-HTDOC. The syntax is the same as multipart/mixed, but the semantics
are that of a WWW client: the first part is displayed, and the rest
represent links to other documents or other elements of this document.

Then we define a new subtype of the MIME text content type called
x-HTML. This is an SGML markup language using the default SGML declaration
(i.e. the reference concrete syntax, default processing limits, etc.)
and the HTML DTD (included below).

---

<!-- This DTD was produced by DeveGram on Tue Jun  2 18:58:16 1992 -->
<!-- and hand-edited by connolly@convex.com -->

<!--     Parameter Entities       -->

<!--      Terminal symbols        -->

<!ENTITY % words "#PCDATA" >

<!--    Non-ELEMENT symbols       -->

<!ENTITY % inline	"%words | A" >
<!ENTITY % text         "%inline | P" >
<!ENTITY % heading "H1|H2|H3|H4|H5|H6" >

<!ENTITY lt "<">
<!ENTITY gt ">">
<!ENTITY amp "&">

<!ENTITY lt. "<">
<!ENTITY gt. ">">
<!ENTITY amp. "&">

<!--     Document structure       -->

<!ELEMENT html	O O  (TITLE, NEXTID?, ISINDEX?, section+, ADDRESS?)>

<!ELEMENT TITLE	- -  (%inline)+>
<!ELEMENT ADDRESS - - (%text)+>

<!ELEMENT NEXTID - O EMPTY >
<!ATTLIST NEXTID N NUMBER #IMPLIED>

<!ELEMENT ISINDEX - O EMPTY >


<!ELEMENT section O O ((%heading)?,
			(
			%text |
			section |
			MENU |
			UL |
			OL |
			DIR |
			DL)+)>

<!ELEMENT (H1|H2|H3|H4|H5|H6)	- -  (%inline) >

<!ELEMENT P	- O  EMPTY -- paragraph SEPARATOR -->


<!ELEMENT A	- -  (%inline)+>
<!ATTLIST A
	NAME CDATA #IMPLIED
	PART ENTITY #IMPLIED >

<!ELEMENT MENU	- -  (LI+)>

<!ELEMENT UL	- -  (LI+)>

<!ELEMENT OL	- -  (LI+)>

<!ELEMENT DIR	- -  (LI+)>

<!ELEMENT LI	- O  (%text)+>

<!ELEMENT DL	- -  ((DT, DD)+)>

<!ELEMENT DT	- O  (%inline)+>

<!ELEMENT DD	- O  (%text)+>

---

An HTML document would use external entities to reference other parts
of the multipart message. The system identifier matches the
Content-Id field of the intended part. The content-type of the indicated
part could be image, audio, or video for multimedia inclusions; text for
quotes etc., or message/external-body for references to other documents.

MIME defines access-types for local-file and anon-ftp. We could define
x-HTTP, x-NEWS, x-WAIS, and the other UDI access types.

Within HTML documents, SGML IDREFs and IDs are used to reference and define
elements of a document. (I think HYTIME defines a way to reference elements
without explicit IDs.)


The next part of this message is a default.html from the WWW
distribution adapted to use the conventions here.

It should interoperate with existing MIME systems,
though they will not be able to do anyting intelligent with HTML.

---
Content-Type: multipart/x-HTDOC; boundary=cut-here

--cut-here
Content-Type: text/x-HTML

<!DOCTYPE HTML SYSTEM 
[
<!ENTITY part1 SDATA "QuickGuide.html">
<!ENTITY part2 SDATA "http://info.cern.ch/hypertext/WWW/TheProject.html">
<!ENTITY part3 SDATA "http://crnvmc.cern.ch./WHO">
<!ENTITY part4 SDATA "http://crnvmc.cern.ch./FIND/yellow?">
<!ENTITY part5 SDATA "http://crnvmc.cern.ch./FIND/jaune?">
<!ENTITY part6 SDATA "http://crnvmc.cern.ch./FIND">
<!ENTITY part7 SDATA "http://crnvmc.cern.ch/NEWS/?">
<!ENTITY part8 SDATA "http://crnvmc.cern.ch./NEWS/cern">
<!ENTITY part9 SDATA "http://crnvmc.cern.ch./NEWS/vmnews">
<!ENTITY part10 SDATA "http://crnvmc.cern.ch/NEWS/student">
<!ENTITY part11 SDATA "http://info.cern.ch/hypertext/DataSources/NewsFromVM/Overview.html">
<!ENTITY part12 SDATA "http://info.cern.ch/hypertext/DataSources/News/Overview.html">
<!ENTITY part13 SDATA "http://info.cern.ch/hypertext/DataSources/bySubject/Overview.html">
<!ENTITY part14 SDATA "http://info.cern.ch./hypertext/DataSources/Overview.html">
<!ENTITY part15 SDATA "http://slacvm.slac.stanford.edu./FIND/spires">
<!ENTITY part16 SDATA "http://crnvmc.cern.ch/FIND/DESY?">
<!ENTITY part17 SDATA "http://info.cern.ch:8001/archive.orst.edu:9000/archie-orst.edu">
<!ENTITY part18 SDATA "http://iicm.tu-graz.ac.at./jargon">
<!ENTITY part19 SDATA "http://info.cern.ch./hypertext/Products/WAIS/Sources/Overview.html">
<!ENTITY part20 SDATA "http://info.cern.ch/rpc/doc/User/UserGuide.html">
<!ENTITY part21 SDATA "http://otax.tky.hut.fi/tky/default.html">
<!ENTITY part22 SDATA "gopher://gopher.micro.umn.edu:70/11/Other%20Gopher%20and%20Information%20Servers">
<!ENTITY part23 SDATA "http://info.cern.ch./hypertext/WWW/LineMode/Defaults/default.html">
]>
<TITLE>CERN Information</TITLE>
<NEXTID N=10>
<SECTION><H1>CERN Information - Select by number</H1>
<DL>
<DT><A PART="part1">Help</A>
<DD>On this program, or the
<A PART="part2">World-Wide Web project</A>.
<DT><A PART="part3" NAME=2>Phone book</A>
<DD>People, phone numbers, accounts and email addresses.
See also the analytical
<A PART="part4" NAME=yellow>Yellow Pages</A>, or
the same index in French :
<A PART="part5" NAME=jaune>Pages Jaunes</A>.
<DT><A PART="part6" NAME=1>"XFIND" index</A>
<DD>Index of computer centre documentation, newsletters, news,
help files, etc...
<DT><A PART="part7" NAME=groups>News</A>
<DD>A complete list of all public CERN news groups, such as
<A PART="part8" NAME=3>news from the CERN User's
Office</A>,<A PART="part9" NAME=4>
CERN computer center news</A>,<A PART="part10">
student news</A>. See also <A PART="part11" NAME=5>private
groups</A> and <A PART="part12" NAME=inews>Internet
news</A>.
</dl>
</section>
<section>
<SECTION><H2>From other sites</h2>
See online data by
<A PART="part13" NAME=subject>subject</A>,
pointers to
<A PART="part14">other forms of online data</a>, and the following specific databases:
<DL>
<DT><A PART="part15" NAME=spires>SLAC SPIRES</A>
<DD>The High Energy Physics preprint index at Stanford Linear Accelerator, California.
(This is the same information avialable via the QSPIRES facility on BITNET.
Include the word "FIND" as the first keyword, eg: K FIND AUTHOR FRED.).
<DT><A PART="part16" NAME=desy>DESY documents</a>
<DD>Documents and help files from the DESY lab in Hamburg.
<DT><A PART="part17" NAME=archie>
Archie</a>
<DD>An index of almost everything available by "anonymous FTP".
<DT><A PART="part18" NAME=7>Hacker Jargon</a>
<DD>An index to a cross-referenced set of hacker terms. A demonstration
of the WWW gateway to the Graz Technical University Hyper-G database.
<DT><A PART="part19" NAME=9>W.A.I.S.</a>
<DD>All kinds of information available from "Wide Area Information Servers".
<DT><A PART="part20" NAME=6>CERN RPC</A>
<DD>The user guide for the RPC system developed in CERN CN division
(not Sun/RPC). This is an example of documentation (partially) converted
into hypertext.
<DT><A PART="part21" NAME=hut>Helsinki</a>
<DD>Helsinki Technical University information service (Mostly Finnish).
<DT><A PART="part22" NAME=gopher>Gophers</a>
<DD>Campus-wide information systems using "Gopher" software. (Requires www version 1.1 or higher)
</DL>
(This page may be an out of date copy. See the
<A PART="part23" NAME=latest>latest version</a>.)

--cut-here
Content-id: QuickGuide.html
Content-type: message/external-body
	;access-type=x-relative
	;name="QuickGuide.html"

Content-Type: message


--cut-here
Content-id: http://info.cern.ch/hypertext/WWW/TheProject.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;name=/hypertext/WWW/TheProject.html

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./WHO
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/WHO

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./FIND/yellow?
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/FIND/yellow?

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./FIND/jaune?
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/FIND/jaune?

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./FIND
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/FIND

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch/NEWS/?
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch
	;name=/NEWS/?

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./NEWS/cern
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/NEWS/cern

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch./NEWS/vmnews
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch.
	;name=/NEWS/vmnews

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch/NEWS/student
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch
	;name=/NEWS/student

Content-Type: message


--cut-here
Content-id: http://info.cern.ch/hypertext/DataSources/NewsFromVM/Overview.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;name=/hypertext/DataSources/NewsFromVM/Overview.html

Content-Type: message


--cut-here
Content-id: http://info.cern.ch/hypertext/DataSources/News/Overview.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;name=/hypertext/DataSources/News/Overview.html

Content-Type: message


--cut-here
Content-id: http://info.cern.ch/hypertext/DataSources/bySubject/Overview.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;name=/hypertext/DataSources/bySubject/Overview.html

Content-Type: message


--cut-here
Content-id: http://info.cern.ch./hypertext/DataSources/Overview.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch.
	;name=/hypertext/DataSources/Overview.html

Content-Type: message


--cut-here
Content-id: http://slacvm.slac.stanford.edu./FIND/spires
Content-type: message/external-body
	;access-type=x-HTTP
	;site=slacvm.slac.stanford.edu.
	;name=/FIND/spires

Content-Type: message


--cut-here
Content-id: http://crnvmc.cern.ch/FIND/DESY?
Content-type: message/external-body
	;access-type=x-HTTP
	;site=crnvmc.cern.ch
	;name=/FIND/DESY?

Content-Type: message


--cut-here
Content-id: http://info.cern.ch:8001/archive.orst.edu:9000/archie-orst.edu
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;port=8001
	;name=/archive.orst.edu:9000/archie-orst.edu

Content-Type: message


--cut-here
Content-id: http://iicm.tu-graz.ac.at./jargon
Content-type: message/external-body
	;access-type=x-HTTP
	;site=iicm.tu-graz.ac.at.
	;name=/jargon

Content-Type: message


--cut-here
Content-id: http://info.cern.ch./hypertext/Products/WAIS/Sources/Overview.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch.
	;name=/hypertext/Products/WAIS/Sources/Overview.html

Content-Type: message


--cut-here
Content-id: http://info.cern.ch/rpc/doc/User/UserGuide.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch
	;name=/rpc/doc/User/UserGuide.html

Content-Type: message


--cut-here
Content-id: http://otax.tky.hut.fi/tky/default.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=otax.tky.hut.fi
	;name=/tky/default.html

Content-Type: message


--cut-here
Content-id: gopher://gopher.micro.umn.edu:70/11/Other%20Gopher%20and%20Information%20Servers
Content-type: message/external-body
	;access-type=x-gopher
	;site=gopher.micro.umn.edu
	;port=70
	;type=11
	;selector="Other Gopher and Information Servers"

Content-Type: message


--cut-here
Content-id: http://info.cern.ch./hypertext/WWW/LineMode/Defaults/default.html
Content-type: message/external-body
	;access-type=x-HTTP
	;site=info.cern.ch.
	;name=/hypertext/WWW/LineMode/Defaults/default.html

Content-Type: message
--cut-here--

---

Here's the perl script I used to convert default.html into
the above message. It's full of gross hacks, but it worked
this evening.

---

#!/usr/local/bin/perl

print "Content-Type: multipart/x-HTDOC; boundary=cut-here\n\n";
print "--cut-here\n";
print "Content-Type: text/x-HTML\n\n";
print "<!DOCTYPE HTML SYSTEM \n[\n";

$o = 0;
$/ = ">";

while(<>){
    s/(<A[^>]*>)/&fix_anchor($1)/ige;
    s/<NEXTID\s*(\d*)\s*>/<NEXTID N=$1>/g;
    if(/<H(\d)/){
	local($n) = $1;
	if($n>$o) { $rep = "<SECTION>"; }
	else { $rep = "</SECTION><SECTION>"; }
        s/(<H\d)/$rep$1/g;
	$o = $n;
    }
    $doc .= $_;
}

@entities = @anchors;
while(@entities){
    local($id) = shift(@entities);
    local($_) = shift(@entities);
    local($name) = shift(@entities);
    local($type) = shift(@entities);

    print "<!ENTITY part$id SDATA \"$_\">\n";
}

print "]>\n", $doc;

while(@anchors){
    local($id) = shift(@anchors);
    local($_) = shift(@anchors);
    local($name) = shift(@anchors);
    local($type) = shift(@anchors);
    local($access_type);

    print "\n\n--cut-here\n";
    print "Content-id: $_\n";
    print "Content-type: message/external-body\n";

    $access_type = $1 if s/^(\w+)://;
    if(s/#([^#]+)$//){
	print "\t;x-element-id=\"$1\"\n";
    }

    if($access_type =~ /file/i){
	print "\t;access-type=LOCAL-FILE\n";
	print "\t;name=$_\n";
    }elsif($access_type =~ /http/i){
	print "\t;access-type=x-HTTP\n";
	if(s-//([^:/]+)--){
	    print "\t;site=$1\n";
	    print "\t;port=$1\n" if s/^:(\d+)//;
	}
	&unescape;
	print "\t;name=$_\n";
    }elsif($access_type =~ /news/i){
	print "\t;access-type=x-news\n";
	&unescape;
	if(/@/){
	    print "\t;message-id=$_\n";
	}else{
	    print "\t;group=$_\n";
	}
    }elsif($access_type =~ /telnet/i){
	print "\t;access-type=x-telnet\n";
	&unescape;
	print "\t;user=$1\n" if s/^(.*)@//;
	print "\t;port=$1\n" if s/:(.*)$//;
	print "\t;site=$_\n";
    }elsif($access_type =~ /gopher/i){
	print "\t;access-type=x-gopher\n";
	if(s-^//([^:/]+)--){
	    print "\t;site=$1\n";
	    print "\t;port=$1\n" if s/:(\d+)//;
	}
	print "\t;type=$1\n" if s-^/(\d+)/--;
	&unescape;
	print "\t;selector=\"$_\"\n";
    }elsif($access_type =~ /wais/i){
	print "\t;access-type=x-wais\n";
	if(s-//([^:/]+)--){
	    print "\t;site=$1\n";
	    print "\t;port=$1\n" if s/:(\d+)//;
	}
	if(m-^/-){
	    print "\t;type=$1\n" if s-^/(\w+)--;
	    print "\t;size=$1\n" if s-^/(\d+)--;
	    &unescape;
	    print "\t;path=\"$_\"\n";
	}else{
	    &unescape;
	    print "\t;words=\"$1\"\n" if /\?(.*)/;
	}
    }elsif($access_type eq ""){
	print "\t;access-type=x-relative\n";
	&unescape;
	print "\t;name=\"$_\"\n";
    }else{
	warn "unknown access type: $access_type in $_";
    }

    print "\nContent-Type: message\n";
}

print "--cut-here--\n";

sub unescape{
    s/%(\w\w)/sprintf("%c",hex($1))/ge;
}

sub fix_anchor{
    local($_) = @_;
    local($name, $href, $type);
    $href = $1 if /HREF\s*=\s*(\S+)/i;
    return $_ unless $href;
    $href =~ s/>$//;

    $name = $1 if /NAME\s*=\s*(\S+)/i;
    $type = $1 if /TYPE\s*=\s*(\S+)/i;

    $content_id{$href} = $content_id++ unless $content_id{$href};
    push(@anchors, $content_id, $href, $name, $type);
    local($ret) = "<A PART=\"part$content_id\"";
    $ret .= " NAME=$name" if $name;
    $ret .= ">";
    return $ret;
}

-----

From connolly@pixel.convex.com  Sun Jun  7 06:37:07 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09218; Sun, 7 Jun 92 06:37:07 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07900; Sun, 7 Jun 92 06:35:09 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA11346; Sat, 6 Jun 92 23:34:53 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA08877; Sat, 6 Jun 92 23:34:50 -0500
Message-Id: <9206070434.AA08877@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: <ISINDEX> and anchor types
Date: Sat, 06 Jun 92 23:34:49 CDT
From: Dan Connolly <connolly@pixel.convex.com>

Just a note: I prefer gopher's model of interaction when it
comes to index nodes. Rather than having a special <ISINDEX>
tag and a "find" command, have a different anchor type. The
user first chooses the "search this index" anchor; then, to
follow an index anchor link, the client prompts for the
query details and makes the query.

Seems cleaner, simpler, and more flexible.

Dan

From connolly@pixel.convex.com  Sun Jun  7 07:15:06 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09233; Sun, 7 Jun 92 07:15:06 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10393; Sun, 7 Jun 92 07:13:11 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12453; Sun, 7 Jun 92 00:12:57 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA17832; Sun, 7 Jun 92 00:12:55 -0500
Message-Id: <9206070512.AA17832@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML is not SMGL
Date: Sun, 07 Jun 92 00:12:55 CDT
From: Dan Connolly <connolly@pixel.convex.com>

My grandiose scheme to convert HTML to MIME and SGML
works fine.

Now I'm going back to the idea of writing a DTD for
the existing HTML format. I can't seem to do it.
HTML has so little rigid structure that I'm running
into mixed content problems (I have to allow #PCDATA
almost anywhere, hence mixed content, which screws
up everything).

How much extant HTML is really out there? And how
much of it is generated on the fly by gateways
and servers?

This MIME/SGML stuff sure seems like the way to go.

Now if I make it possible to create such documents
with FrameMaker and a perl script, I bet it will
catch on. I suspect I'll get some resistance against
abandoning UDI's, but I don't think they work.

Dan

From connolly@pixel.convex.com  Sun Jun  7 08:20:25 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09268; Sun, 7 Jun 92 08:20:25 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14076; Sun, 7 Jun 92 08:18:31 +0200
Received: from convex-inet.convex.com by mcsun.EU.net with SMTP
	id AA06010 (5.65b/CWI-2.167); Sun, 7 Jun 1992 08:18:19 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA14512; Sun, 7 Jun 92 01:15:38 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA15478; Sun, 7 Jun 92 01:15:36 -0500
Message-Id: <9206070615.AA15478@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: overkill on portability macros
Date: Sun, 07 Jun 92 01:15:34 CDT
From: Dan Connolly <connolly@pixel.convex.com>

Are these abuses of the preprocessor really necessary?

----
PRIVATE char from_hex ARGS1(char, c)
{
}
----
Ok, I've seen PRIVATE before (though I don't know what it's
for. Some sort of MS DOS near/far thing?)

But ANSI C and PCC share syntax for _defining_ functions.
The preprocessor dancing is necessary for _declaring_ functions
like so:

int foo __ARGS__((int x, int y, int z));

but in the .c files, you can just do the usual

int foo(x,y,z)
int x;
int y;
int z;

and ANSI an PCC compilers alike will be happy, with one
exception: varargs. Functions with

int foo(int x, ...);

style declarations need corresponding

int foo(int x, ...)
{
}

style definitions.

Dan

From jfg@dxcern.cern.ch  Mon Jun  8 00:43:17 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10106; Mon, 8 Jun 92 00:43:17 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26188; Mon, 8 Jun 92 00:41:24 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA24685; Mon, 8 Jun 92 00:41:18 +0200
Date: Mon, 8 Jun 92 00:41:18 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206072241.AA24685@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: revised MIME architecture
References: <9206062231.AA23867@pixel.convex.com>

	Dan,

  OOPS... You sent this one to www-interest instead of www-talk...
I'm getting ready for some flamage from clueless list members :-)

  Regarding your proposal, the idea is exciting, although I find it
annoying that small documents, like most HTML pages are, will suddenly
take 4 times as much storage and bandwidth due to verbosity. When
multimedia comes into play, of course, this is a non-issue. I do agree
that the current UDI syntax is too terse, though.

  I'd like to develop on this, but I lack MIME background and, believe
it or not, I couldn't find the MIME RFC in the archive indexes ; could
you tell me (and the list) its number? Also, pointers to existing MIME
readers would be welcome.

  More later...

	Jean-Francois

From jfg@dxcern.cern.ch  Mon Jun  8 01:03:03 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10129; Mon, 8 Jun 92 01:03:03 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA27827; Mon, 8 Jun 92 01:01:09 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA26164; Mon, 8 Jun 92 01:01:02 +0200
Date: Mon, 8 Jun 92 01:01:02 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206072301.AA26164@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: HTML is not SMGL
References: <9206070512.AA17832@pixel.convex.com>

Dan asked:
> How much extant HTML is really out there? And how much of it is
> generated on the fly by gateways and servers?

  Our hypertext documentation is certainly the largest quantity of
HTML you can find in the world. Besides, we know all the people who
have produced their own, so making the Big Change would be relatively
simple for them (esp. given your impressive perl script). Gateways can
be changed easily too. But all the browsers must be updated before,
and that will take more time !!!  (There are thousands of copies
installed...)

> I suspect I'll get some resistance against abandoning UDI's, but I
> don't think they work.

  Well, you still use them internally, don't you ? ;^)

	Jean-Francois

From emv@nigel.msen.com  Mon Jun  8 02:29:05 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10171; Mon, 8 Jun 92 02:29:05 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03499; Mon, 8 Jun 92 02:27:12 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0luXZf-0009YoC@nigel.msen.com>; Sun, 7 Jun 92 20:26 WET DST
Message-Id: <m0luXZf-0009YoC@nigel.msen.com>
To: jfg@dxcern.cern.ch (Jean Francois Groff)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: HTML is not SMGL 
In-Reply-To: Your message of Mon, 08 Jun 92 01:01:02.
             <9206072301.AA26164@dxcern.cern.ch> 
Date: Sun, 07 Jun 92 20:26:48 EDT
From: Edward Vielmetti <emv@msen.com>

The UDI vs. MIME argument is a non-arguement.  MIME is sufficiently
flexible that if you construct an appropriate Content-type and define
its semantics appropriately it will accept UDI's and work accordingly.
"Simple matter of programming" :).

Explicit "attribute=value" tags are more flexible than the W3 approach
to turn the entire document ID into a big long string.  I guess it 
depends on whether you believe you are dealing with a big database
or a big file system.  Both approaches have their place.  Again as
a simplified case you have "udi=//host:port/path" as a MIME identifier
and all is well.

I expect that MIME will be available in many e-mail products over the next
3-5 years.  Since the only application that has anywhere near universal
appeal on the net is e-mail, it strikes me as only appropriate that 
hypertext systems try to get as much leverage from mail as they possibly
can.

--Ed

From connolly@pixel.convex.com  Mon Jun  8 05:32:01 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10306; Mon, 8 Jun 92 05:32:01 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28567; Mon, 8 Jun 92 05:30:05 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12532; Sun, 7 Jun 92 22:29:47 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA28300; Sun, 7 Jun 92 22:29:45 -0500
Message-Id: <9206080329.AA28300@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: jfg@dxcern.cern.ch (Jean Francois Groff), www-talk@nxoc01.cern.ch
Subject: Re: HTML is not SMGL 
In-Reply-To: Your message of "Sun, 07 Jun 92 20:26:48 EDT."
             <m0luXZf-0009YoC@nigel.msen.com> 
Date: Sun, 07 Jun 92 22:29:44 CDT
From: Dan Connolly <connolly@pixel.convex.com>


>The UDI vs. MIME argument is a non-arguement.  MIME is sufficiently
>flexible that if you construct an appropriate Content-type and define
>its semantics appropriately it will accept UDI's and work accordingly.
>"Simple matter of programming" :).
>
>Explicit "attribute=value" tags are more flexible than the W3 approach
>to turn the entire document ID into a big long string.  I guess it 
>depends on whether you believe you are dealing with a big database
>or a big file system.  Both approaches have their place.  Again as
>a simplified case you have "udi=//host:port/path" as a MIME identifier
>and all is well.
>
The problems is that the syntax of a UDI doesn't fit into the syntax
of a MIME parameter (or an SGML attribute value...) because a UDI
might be arbitrarily long, and it cannot contain any whitespace (so
it can't be split across lines).

So these 200+ character UDI's for WAIS documents can't be
mailed around safely (even SGML has limits on the length of an
attribute value).

Heck, my WWW client (perhaps it's not the latest version, but still...)
can't even retrieve wais documents due to these problems.

Dan

From connolly@pixel.convex.com  Mon Jun  8 05:39:39 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10313; Mon, 8 Jun 92 05:39:39 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00160; Mon, 8 Jun 92 05:37:46 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12756; Sun, 7 Jun 92 22:37:31 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA28980; Sun, 7 Jun 92 22:37:29 -0500
Message-Id: <9206080337.AA28980@pixel.convex.com>
To: jfg@dxcern.cern.ch (Jean Francois Groff)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: revised MIME architecture 
In-Reply-To: Your message of "Mon, 08 Jun 92 00:41:18 +0200."
             <9206072241.AA24685@dxcern.cern.ch> 
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary=cut-here
Date: Sun, 07 Jun 92 22:37:29 CDT
From: Dan Connolly <connolly@pixel.convex.com>


--cut-here

>	Dan,
>
>  OOPS... You sent this one to www-interest instead of www-talk...
>I'm getting ready for some flamage from clueless list members :-)
>
Did I? I sent several messages, and I though I was careful to
send them all to www-talk. Oh well... Sorry!

>  Regarding your proposal, the idea is exciting, although I find it
>annoying that small documents, like most HTML pages are, will suddenly
>take 4 times as much storage and bandwidth due to verbosity.
>
They won't necessarily take 4 times as much storage: the verbose part
_could_ be generated on the fly. by the server.

On the other hand, it _is_ simpler to store things in the format that
they'll be used. This brings up the issue of authoring documents in
this format. I'm developing some ideas on interactive composition
of MIME messages (using EMACS, FrameMaker, or perhaps a Tk application)
but for now, it's somewhat tedious.

>  I'd like to develop on this, but I lack MIME background and, believe
>it or not, I couldn't find the MIME RFC in the archive indexes ; could
>you tell me (and the list) its number? Also, pointers to existing MIME
>readers would be welcome.
>
I've gotten several "nifty... so what is MIME?" responses. So I'll
tell you what I told them...

--cut-here

>Where can I get more information about MIME?
>
>			Thanks.

The author of the rfc is Nathaniel Borenstein <nsb@thumper.bellcore.com>.
Most of the publicly available material is on thumper.bellcore.com in
pub/nsb.

--cut-here
Content-Description: RFC-XXXX (MIME)
Content-Type: multipart/alternative; boundary=alt

--alt
Content-Type: message/external-body;
	access-type=ANON-FTP;
	site=thumper.bellcore.com;
	dir=pub/nsb;
	name="BodyFormats.txt"

Content-Type: text/plain

--alt
Content-Type: message/external-body;
	access-type=ANON-FTP;
	site=thumper.bellcore.com;
	dir=pub/nsb;
	name="BodyFormats.ps"

Content-Type: application/postscript

--alt--

--cut-here--


From connolly@pixel.convex.com  Mon Jun  8 05:52:19 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10330; Mon, 8 Jun 92 05:52:19 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00534; Mon, 8 Jun 92 05:50:21 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA13067; Sun, 7 Jun 92 22:49:54 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA00415; Sun, 7 Jun 92 22:49:51 -0500
Message-Id: <9206080349.AA00415@pixel.convex.com>
Subject: MIME for global hypertext
To: www-talk@nxoc01.cern.ch, wais-talk@think.com
Organization: Engineering, CONVEX Computer Corp., Richardson, Tx., USA
Date: Sun, 07 Jun 92 22:49:51 CDT
From: Dan Connolly <connolly@pixel.convex.com>


[This was posted to several newsgroups, but someone from wais-talk
suggest I forward it there also.]


The WAIS, gopher, and world-wide-web projects are all client/server
information retrieval systems. All three deliver plain text information
quite well, and they each have evolving mechanisms for delivering
other forms of information.

The MIME RFC defines a system for processing multi-part, multimedia
messages on the internet. I would like to see these systems, along
with USENET news and internet mail, interoperate with MIME as the substrate.

The clients for these systems go something like this:
0	user invokes client (and chooses a starting point)
1	client displays user's request
2	user reads page, chooses a reference to more info
3	user informs client of choice
		 (e.g. "show me item #1," or "search for googoo")
4	go to step 1

These systems often consist of a hierarchy of menus with text files at
the leaf nodes. The system allows the user to interactively navigate
the menus and browse leaf nodes. But 1) the format of the menus is
particular to the system (USENET newsgroups/articles, unix
directories/files, WAIS source/database/document). And 2) once a user
is at a leaf node, the system can no longer interactively follow
references.

The novel aspect of hypertext is that the distinction between the
menu pages and the text pages disappears. In the world-wide-web,
text documents have machine-readable links inside them, and all
menus are represented as hypertext documents.

The WWW format works well, but it would benefit from use of MIME's
features.

For a common hypertext document format, I propose we define a
subtype of the MIME multipart message: X-HYPERTEXT. The first
part of a multipart/X-HYPERTEXT message is the content of
the document, and the remaining parts are multimedia attachments
and links to other documents.

The content part contains references (by Content-ID) to the
attachments and links. The client software allows the user
to interactively choose references to display/follow.

The remaining parts may be attached image/audio/video using
MIME's various types and transfer encodings (text attachments
would work too) or they may be references to information
accessible elsewhere using MIME's message/external-body type.
The parameters to the external-body content-type provide the
same information as WWW's Universal Document Indentifier.
(MIME only defines ANON-FTP, FTP, TFTP, LOCAL-FILE and AFS.
The remaining access-types (WAIS, gopher, etc) would be
experimental (X-WAIS, X-GOPHER) until standardized.)

The emerging standard for structured, platform-independent text
is SGML. The WWW project defines an SGML document type with
traditional elements (title, heading, paragraph, list) and
new hypertext elements (anchor). Soon it will have multimedia
elements (image, audio).

The current design places external document references (to files,
WWW servers, WAIS documents, gophers, etc.) inside the SGML as
attributes. There are lexical incompatibilities, and the design
is under strain. I suggest that we implement references as
as SGML entities that identify message/external-body parts
by content-id.

Representing document content in SGML allows the same information
to be accessed using different user interface paradigms (e.g. dumb
terminals vs. curses style vs. x windows point-and-click).

Short of full SGML parsing, we could adopt the MIME text/richtext
format, with the addition of a <REF ID="xxx">...</REF> tag.
In fact, any representation that allows the user to interactively indicate
one of the attached body parts by content-id will do. For example,
plain text with one-line descriptions would do. The Andrew ez
data stream would also work, but only Andrew sites could parse it.

This brings up the issue of format negociation. No one format is
optimal for all information. Clients are likely to be able to process
information in several formats, and servers are likely to be able
to provide different representations.

The various formats can be enclosed in a MIME multipart/alternative
message. And rather than including the data for all formats in
the message, the data could be in message/external-body parts. The
client chooses the type of data it likes and retrieves the corresponding
external-body. This (modified) example from the MIME rfc may help explain:

MIME-Version: 1.0
Content-Type: multipart/alternative; boundary=42

--42
Content-Type: message/external-body;
	name="BodyFormats.ps";
	site="thumper.bellcore.com";
	access-type=ANON-FTP;
	directory="pub";
	mode="image";

Content-type: application/postscript

--42
Content-Type: message/external-body;
	name="/u/nsb/writing/rfcs/RFC-XXXX.ez";
	site="thumper.bellcore.com";
	access-type=AFS;

Content-type: application/x-ez

--42
Content-Type: message/external-body;
	name="BodyFormats.txt";
	site="thumper.bellcore.com";
	access-type=ANON-FTP;
	directory="pub";

Content-type: text/plain

--42--

The client can choose between postscript, ez, and plain text, and
retrieve the corresponding message body.


The question then becomes: how do these systems interoperate?
By making information available as multipart/X-HYPERTEXT MIME
messages.

The WWW client interfaced to the other systems by defining
"addressing schemes" and implementing the various protocols
and translating the data into HTML. Gopher has a similar
typing scheme -- one character is reserved to indicate
the access type and the data type. WAIS clients have yet
another method of resolving types, though they only support
one protocol. The NewsGrazer application has its own
encapsulation mechanism. This is becoming a mess.

In the short term, global hypertext viewers will have to support
the access-type and content-type of each system with which it
interoperates (so we have X-WAIS, X-HTTP, X-GOPHER, X-NNTP, as well as
X-WAIS-SRC, X-HTML, X-GOPHER-1 thru X-GOPHER-9).

Some of the access types will become standard, and some will die out.
But all the data types should be encapsulated in MIME messages. Any
data that has machine-readable pointers to other data should be made
into a multipart/X-HYPERTEXT message. For example, a WAIS question
should have attachments for each of the result documents (the content
part can stay application/x-wais-question, or it could be converted to
a text type, or both), at least in the case where those documents are
available by some standard access method.  [I wrote a perl script that
will change an HTML document into a MIME message with attachments.]

Leaf documents, i.e. documents with no external links, can stay in
single part types. e.g. Plain text files become MIME messages by simply
adding a blank line at the beginning (to separate the headers (none)
from the body).

Under this model, a mail message can point to a news article
which references a WAIS document which contains several drawings
and pointers to several more available by FTP, and a user could
just point-and-click between them. The only need for
protocols like gopher and HTTP is to encapsulate data that's not
already MIME compliant.

This is clearly a pipe dream, but it's the kind of thing we can work
towards today.

Dan


From connolly@pixel.convex.com  Mon Jun  8 07:20:13 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10475; Mon, 8 Jun 92 07:20:13 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07520; Mon, 8 Jun 92 07:18:19 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA16259; Mon, 8 Jun 92 00:17:52 -0500
Received: by pixel.convex.com (5.64/1.28)
	id AA20948; Mon, 8 Jun 92 00:17:48 -0500
Date: Mon, 8 Jun 92 00:17:48 -0500
From: connolly@pixel.convex.com (Dan Connolly)
Message-Id: <9206080517.AA20948@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Cc: enag@ifi.uio.no
Subject: Re: using NOTATIONs inline
Newsgroups: comp.text.sgml
In-Reply-To: <23177A@erik.naggum.no>
References: <1992Jun5.205639.21823@news.eng.convex.com>
Organization: Engineering, CONVEX Computer Corp., Richardson, Tx., USA
Cc: 

In article <23177A@erik.naggum.no> you write:
>Dan Connolly <connolly@convex.com> writes:
>|
>|   The WWW group is attempting to define a multimedia interchange
>|   format called HTML.  . . .
>
>Why not use HyTime?
>
Eric:
Partyly because of ignorance (we've heard of HyTime, but we don't
know the details). I'd expect a HYTIME engine to be quite a bit
of work to implement. And partly because, as I understand it, HYTIME
doesn't go as far as to perscribe a DTD. The WWW project needs
one particluar language, not a whole architecture.

I'd certainly like to know more about HYTIME's techniques for addressing
documents, esp. elements of documents.

Now for the WWW gang:
>:
>|   That is, is it possible to put an arbitrary 8 bit binary stream
>|   _inside_ an SGML document? My guess is: no. But if we use
>|   CDATA, can we include anything that doesn't contain the closing
>|   tag in full?
>
>If you by "the closing tag in full" mean the entire end-tag, complete
>with etago, generic identifier, and tagc, as in "</image>", this is not
>the way SGML does it.  CDATA and SDATA are terminated by a etago
>"delimiter-in-context", which is an etago (end-tag open, "</") delimiter
>followed by a name start character, or a grpo (group open, "(")
>delimiter if concurrent document types are allowed.  In the reference
>concrete syntax, this means that the regular expression "</[(a-z]"
>matches the end of CDATA and SDATA elements.
>
>You can also use marked sections, with a CDATA status keyword, in which
>case the CDATA is terminated by the mse delimiter (marked section end,
>"]]>").
>
>:
>|   Someone made the point that an SGML document is only allowed to
>|   include SGML characters as specified by the SGML declaration, and if
>|   we're going to use the default SGML declaration, we have to stick to
>|   the characters blessed by it.
>
>Blessed and blessed.  The SGML declaration is supposed to reflect the
>reality of the document, not enforce arbitrary limits on them.  So you
>write an SGML declaration which fits the document.
>
>|   That's not my understanding. I thought that inside CDATA (or SDATA,
>|   I think) you could put _anything_ but the closing tag in full.
>
>As said above, the etago delimiter-in-context terminates the data,
>regardless of whether it's a legal end-tag in that context.
>
>You should be aware that the SGML parser will parse the contents of the
>"binary" content, and ignore record start, and treat record ends
>different from other characters.  In addition, it's an error for an SGML
>entity to contain characters with any of the numbers listed in the
>SHUNCHAR part of the SYNTAX declaration.  This is _not_ what you want
>with binary data.
>
>|   What's the scoop? Do we have to use external entities for raw data?
>
>Yes.  An external entity that is not an SGML text entity requires a
>notation identifier, so you only need to list the entities in the DTD,
>with notation, and refer to them by name in the document instance.
>
>If this is not satisfactory, you should declare the objects to be CDATA,
>and use a binary to text-only transformation scheme.  There are several
>such schemes.  Among them, base64 is the preferred encoding in my view,
>since it's available as part of the new Multipurpose Internet Mail
>Extensions (MIME) RFC-to-be.  (The latest draft is available for
>anonymous FTP as ftp.ifi.uio.no:/pub/SGML/MIME.6.ps and MIME.6.txt for
>two weeks from today.  Section 5.2 which concerns the base64 encoding is
>also available as ftp.ifi.uio.no:/pub/SGML/base64.txt.)  Transformation
>back to the binary form from the text-only form may be done on the fly
>by the application before sending the data to the notation interpreter.
>
My idea is to use MIME encodings, but put these attachments _outside_
the SGML text, in an attached (or external) body part.

>In addition to being much easier to deal with in SGML, this also makes
>SGML documents containing such content robust with respect to file
>transfer, etc.
>
>Hope this helps,
></Erik>

Thanks. Mostly it confirms my suspicions, but it should also provide
a somewhat authoritative answer (no references to ISO 8879 here :-)
to the WWW project.

>--
>Erik Naggum       |  +47-295-0313     |  ISO 8879 SGML     |  Memento,
>Naggum Software   |   "fuzzface"      |  ISO 10744 HyTime  |  terrigena.
>Boks 1570, Vika   | <erik@naggum.no>  |  JTC 1/SC 18/WG 8  |  Memento,
>0118 OSLO, NORWAY | <enag@ifi.uio.no> |  SGML UG SIGhyper  |  vita brevis.



From davis@willow.tc.cornell.edu  Mon Jun  8 15:28:24 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11057; Mon, 8 Jun 92 15:28:24 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20617; Mon, 8 Jun 92 15:26:33 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA17632; Mon, 8 Jun 92 09:28:20 EDT
Date: Mon, 8 Jun 92 09:28:20 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206081328.AA17632@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: HTML terseness/verbosity

Re the recent comments on terseness of UDIs and the
extra verbosity in Dan Connolly's proposal to
use Mime for WWW documents:

My understanding is that nobody should have to type
"naked" SGML (or HTML or Mime-language) anyway.
We should have programs like WYSIWYG editors
manipulating the markup for us.  (Now of course
at present we do have to type HTML, at least I do
here, but hopefully this will not persist).  If
that's right, then the more explicit and simple
the document structure is, the easier to parse
and manipulate by programs, the better we are.

One thing I like about Dan's proposal - it makes
it possible to collect a hyperdocument into a single
file (by embedding the docs within one mime file)
which will make transporting easier

From jfg@dxcern.cern.ch  Mon Jun  8 17:34:55 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11440; Mon, 8 Jun 92 17:34:55 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01254; Mon, 8 Jun 92 17:32:28 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA21936; Mon, 8 Jun 92 17:32:23 +0200
Date: Mon, 8 Jun 92 17:32:23 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206081532.AA21936@dxcern.cern.ch>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: overkill on portability macros
References: <9206070615.AA15478@pixel.convex.com>

> But ANSI C and PCC share syntax for _defining_ functions.
> The preprocessor dancing is necessary for _declaring_ functions
> like so:
>
> int foo __ARGS__((int x, int y, int z));
>
> but in the .c files, you can just do the usual
>
> int foo(x,y,z)
> int x;
> int y;
> int z;

  True, but in the latter case you don't get any type checking of the
parameters in functions that happen NOT to be declared before their
definition. I agree that the syntax with extra commas is ugly, though,
but there was no better way.

	JF

From mitra%pandora@fernwood.mpk.ca.us  Mon Jun  8 22:23:03 1992
Return-Path: <mitra%pandora@fernwood.mpk.ca.us>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12313; Mon, 8 Jun 92 22:23:03 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24770; Mon, 8 Jun 92 22:21:08 +0200
Received: by fernwood.mpk.ca.us; id AA13324; Mon, 8 Jun 92 13:16:50 -0700
From: mitra@pandora.sf.ca.us ()
X-Mailer: SCO System V Mail (version 3.2)
To: connolly@pixel.convex.com, wais-talk@think.com, www-talk@nxoc01.cern.ch
Subject: MIME for global hypertext
Date: Mon, 8 Jun 92 13:11:15 PDT
Message-Id:  <9206081311.aa26440@pandora.sf.ca.us>

Dan,

Thanks for that proposal. I must admit to not having read the MIME RFC,
being mostly concerned with text rather than multimedia, so I wasnt
aware of the hypertext implications of it.

My question is on a fairly minor point of your document, you mention that 
a MIME document typically consists of a content and then the pointers, 
with the hypertext links being references to the pointers.  In Wais, it 
is quite possible to return part of a document (by byte position), and 
if the pointers are part of the document itself then they may not be 
returned at the time the user chooses to try and follow a link? 

My concerns are around doing these things for users on low-speed (2400 baud)
modems. For them, protocols need to be easy to handle at slow speed, and 
need to be meaningfull BEFORE the whole document has been received. As the
Internet extends out to more and more users beyond the high-speed links
currently assumed the need for protocol designers to consider those users
becomes more important. 

- Mitra
------------------------------------------------------------------
Mitra - technical director, Pandora Systems
mitra@pandora.sf.ca.us


From connolly@pixel.convex.com  Mon Jun  8 22:52:36 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12426; Mon, 8 Jun 92 22:52:36 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA27128; Mon, 8 Jun 92 22:50:38 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA03927; Mon, 8 Jun 92 15:50:19 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA15921; Mon, 8 Jun 92 15:50:17 -0500
Message-Id: <9206082050.AA15921@pixel.convex.com>
To: mitra@pandora.sf.ca.us ()
Cc: wais-talk@think.com, www-talk@nxoc01.cern.ch
Subject: Re: MIME for global hypertext 
In-Reply-To: Your message of "Mon, 08 Jun 92 13:11:15 PDT."
             <9206081311.aa26440@pandora.sf.ca.us> 
Date: Mon, 08 Jun 92 15:50:17 CDT
From: Dan Connolly <connolly@pixel.convex.com>



>My question is on a fairly minor point of your document, you mention that 
>a MIME document typically consists of a content and then the pointers, 
>with the hypertext links being references to the pointers.

Well, this is not typical, but it's the model I'm proposing for
hypertext. Typically MIME message bodies are either single part
text/image/audio, or multipart. The standard multipart types
are mixed, meaning "show these one after the other," parallel,
meaning "show these at the same time," or alternative, meaning
"these all represnt the same info. Take your pick."

The "content and then list of pointers [or attachments]" model
is my own proposed format for hypertext.

>  In Wais, it 
>is quite possible to return part of a document (by byte position), and 
>if the pointers are part of the document itself then they may not be 
>returned at the time the user chooses to try and follow a link? 
>
I would suggest that the WAIS server interpret the byte positions
as offsets into the content part of the hypertext. So the structure
remains in tact. Byte offsets into a MIME multipart message
don't mean much. Transport systems may mess with the headers and
trailing whitespace on body lines. Line offsets may be meaningful
inside text body parts, as long as none of the lines have to be
split due to line length constraints.

Keep in mind that this multipart structure is only necessary for
hypertext (i.e. contains links) and hypermedia (i.e. contains
multimedia attachments) documents.

Traditional documents can be simple single part bodies. For example,
A plain text file starting with a new-line will be interpreted as
a body part with no headers, which defaults to the type
"text/plain; charset=US-ASCII" ,i.e. plain old text.

>My concerns are around doing these things for users on low-speed (2400 baud)
>modems....

From connolly@pixel.convex.com  Wed Jun 10 01:11:39 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15414; Wed, 10 Jun 92 01:11:39 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25378; Wed, 10 Jun 92 01:11:32 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA29288; Tue, 9 Jun 92 18:10:43 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20418; Tue, 9 Jun 92 18:10:31 -0500
Message-Id: <9206092310.AA20418@pixel.convex.com>
To: mitra@pandora.sf.ca.us ()
Cc: emv@msen.com, wais-talk@quake.think.com, www-talk@nxoc01.cern.ch,
        gopher-news@boombox.micro.umn.edu
Subject: Re: WAIS APIs 
In-Reply-To: Your message of "Tue, 09 Jun 92 10:08:51 PDT."
             <9206091008.aa08978@pandora.sf.ca.us> 
Date: Tue, 09 Jun 92 18:10:29 CDT
From: Dan Connolly <connolly@pixel.convex.com>


There are several issues that WAIS and MIME both face. For some
issues, the systems have different requirements, so different
solutions make sense. But for the issue of typing document
content, I feel stronly that WAIS should adopt MIME semantics.

WAIS defines a :type field in the :document structure. Right
now, it's a string with loosely defined semantics. It's a
simple matter to obsolete the :type field with a :content-type
field with MIME semantics as follows:

	obsolete	MIME compliant
	:type "TEXT"	:content-type "text"
	:type "GIF"	:content-type "image/gif"
	:type "TIFF"	:content-type "image/x-tiff"
	:type "PS"	:content-type "application/postscript"
	:type "WSRC"	:content-type "application/x-wais-source"
	:type "MIME"	:content-type "message"

I believe data served up by existing WAIS servers fits the MIME
content typing system as is. A WAIS client already implements the
semantics of the text, image, audio, video, and application types:
Either you present it, hand it off to something that can,
or punt to a file.

There are other semantics defined by MIME that would be nice
in WAIS clients. But these require that you handle pretty much
the whole MIME syntax. It's not clear that WAIS should adopt
the MIME solutions in these cases.

[I would like to see the world-wide web adopt MIME solutions
for these issues, though.]

In <9206081956.AA03908@cmns.think.com.Think.COM>, Mr. Spero suggests
that WAIS might be expanded to offer data in a number of types. The MIME
solution to this problem is the "multipart/alternative" body type.

Someone else suggested that the WAIS server might return only
a pointer to the data, and the client could retrieve the actual
content. MIME defines a "message/external-body" type for this.

And I suggested that the server might return a complex document
with text, graphics, and pointers to other data. (World Wide
Web servers return text with pointers, and they're trying to
deal with graphics). I suggested a new "multipart/hypertext"
type to handle this.

Resolving these issues is going to take a lot more thought.
Let's keep interoperability in mind while we do it.

Dan

From morris@quake.think.com  Wed Jun 10 07:55:32 1992
Return-Path: <morris@quake.think.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15757; Wed, 10 Jun 92 07:55:32 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28784; Wed, 10 Jun 92 07:55:34 +0200
Received: by quake.think.com (4.1/SMI-4.0)
	id AA01284; Tue, 9 Jun 92 22:56:59 PDT
Date: Tue, 9 Jun 92 22:56:59 PDT
Message-Id: <9206100556.AA01284@quake.think.com>
From: Harry Morris <morris@think.com>
Sender: morris@quake.think.com
To: connolly@pixel.convex.com
Cc: mitra@pandora.sf.ca.us, emv@msen.com, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, gopher-news@boombox.micro.umn.edu
In-Reply-To: Dan Connolly's message of Tue, 09 Jun 92 18:10:29 CDT <9206092310.AA20418@pixel.convex.com>
Subject: WAIS APIs 


   Date: Tue, 09 Jun 92 18:10:29 CDT
   From: Dan Connolly <connolly@pixel.convex.com>

	   obsolete	MIME compliant
	   :type "TEXT"	:content-type "text"
	   :type "GIF"	:content-type "image/gif"
	   :type "TIFF"	:content-type "image/x-tiff"
	   :type "PS"	:content-type "application/postscript"
	   :type "WSRC"	:content-type "application/x-wais-source"
	   :type "MIME"	:content-type "message"

excuse the novice question, but doesn't x-tiff and x-wais-source imply that
a particular program (running on an X Windows display) is to be called?

how do you support other platforms?


From burchard@horizon.math.utah.edu  Wed Jun 10 08:09:00 1992
Return-Path: <burchard@horizon.math.utah.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15796; Wed, 10 Jun 92 08:09:00 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05143; Wed, 10 Jun 92 08:09:02 +0200
Received: from horizon.math.utah.edu by math.utah.edu (4.1/SMI-4.1-utah-csc-server)
	id AA09200; Wed, 10 Jun 92 00:08:51 MDT
Received: by horizon.math.utah.edu (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01628; Wed, 10 Jun 92 00:09:54 MDT
Date: Wed, 10 Jun 92 00:09:54 MDT
From: burchard@horizon.math.utah.edu (Paul Burchard)
Message-Id: <9206100609.AA01628@horizon.math.utah.edu>
Received: by NeXT Mailer (1.63)
To: Harry Morris <morris@think.com>
Subject: Re: WAIS APIs 
Cc: connolly@pixel.convex.com, mitra@pandora.sf.ca.us, emv@msen.com,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch,
        gopher-news@boombox.micro.umn.edu

> excuse the novice question, but doesn't x-tiff and x-wais-source 

> imply that a particular program (running on an X Windows display) 

> is to be called?

If I'm not mistaken the "x-" refers to "experimental".  I.e,. these  
are not an officially registered MIME types.  (There is no X Windows  
program called x-tiff, by the way.)

Since these naming schemes serve the same purpose there is no reason  
not to have them interoperate; this could be fitted nicely into an  
OOP API.

PB



From timbl@zippy.lcs.mit.edu  Thu Jun 11 18:21:47 1992
Return-Path: <timbl@zippy.lcs.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20470; Thu, 11 Jun 92 18:21:47 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16880; Thu, 11 Jun 92 18:21:50 +0200
Received: by zippy.lcs.mit.edu 
	id AA03819; Thu, 11 Jun 92 12:22:56 -0400
Date: Thu, 11 Jun 92 12:22:56 -0400
From: timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Message-Id: <9206111622.AA03819@zippy.lcs.mit.edu>
To: connolly@pixel.convex.com, enag@ifi.uio.no, www-talk@nxoc01.cern.ch
Subject: MIME, SGML, UDIs, HTML and W3
Cc: timbl@zippy.lcs.mit.edu


I have printed off the recent discussion on the new
HTTP, HTML and MIMe and UDIs and done what I can
to disentangle it all in my mind.  I will reply
in one message, becase many of the points are linked.
I know this should be hypertext, with references but
(a) I am away from home and (b) we don't yet have a
universal mail/news archive server running to link to.

	HTTP and HTML

First of all, Jean-Francois <jfg@dxcern.cern.ch>
points out very properly that the enhaced HTTP
protocol and the enhanced HTML spec are quite
separate things, and should be specified separatedly.
I agree wholeheartdly about all this, and
I aplogize for muddling the levels up till now.

(As a small aside, I would point out that wheras a
HTERR file is not very useful, a HTFWD file IS.
It is like a hypertex soft link. But I am happy to
leave that as a separate type of file. It should
certainly get a different extension so that it gets a
different icon)

        HTTP: SGML vs ASN/1

Let's look at the HTTP protocol first. Carl <barker@cernnext.cern.ch>
is mapping out  the requirements for this, and assuming that SGML
would be a reasonable representation for it in practice.
And so it is.  When the requirements are clear,
it would certainly be interesting to look at mapping them
onto a z39.50 - style ASN/1 implementation. This would
be useful for two reasons. First, the comparison would
point out to us things in z39.50 which we might not have thought of
which would b useful for HTTP. Second, the comparison might give
a nice short or at least well-defined things which the WAIS
guys might like to take into account in the next version
of their protocol.  (I demod W3 to Brewster who hadn't
seen it before live, and was very keen that WAIS and W3
should merge, changing the WAIS protocol if necessary.

There is no reason why we shouldn't try both protocols.
If they map well onto each other, its just a question
of having two separate prasers at the low level, building
the same internal structures.

When we're talking about an SGML representation,
and describe a file to come later down the link,
I don't think we have to use the NOTATION= attribute with a notation
type, because we won't in fact be talking about
the notation of an SGML element.
The format in this case is not something which the SGML
parse is aware of.

I must admit I was disappointed to learn that SGML
didn't allow for any way of including 8 bit data. Thanks Eric
<enag@ifi.uio.np> for your explanations.


	MIME and SGML

Dan <connolly@pixel.convex.com> rightly points out
the relevance of the coming MIME standards. There
are several things which we must separate here, though:

   1. The MIME classification of data formats
   2. The MIME format for multi-part messages
   3. The MIME format for rich text.
   4. The MIME formal for external document addresses (MIME UDIs)

1. MIME classification of data formats

	We must do the same disentangling job which JF did
	on HTML to MIME.

	First of all, the MIME job of classifying data formats
	is a useful job which is ideally done by just one
	bunch of people. Ther has been some suggestion that
	the MIME classifications are not well enough defined,
	but they seem to be the best effort yet and one can only
	assume they will eveolve in the right direction. So I'd
	back the use of these for W3.


2. The MIME format for multi-part messages

	This is necessary for sending a multi-part
	document over a mail link.  We have to ask ourselves
	whether it is reasonable to use over a binary link.
	Personally, my initial impression is that the MIME
	stuff, using as it does terminators such as
	--xxx-- separated by blank lines, looks more horrible
	to work with in this respect than SGML! Still we have
	the problem of restrictions on the content:
	Must not contain delimiters, limited 7 bit character set,
	line orientation, in fact all the things which email
	carries as a restriction.  This is really taking on board
	a legacy of all the mail which has evolved over the years.
	Do we need that for our new ultra-fast hypertext access
	protocol?

	[Compare the MIME format with the rather cleaner NeXT
	Mail format which is as far as I understand simply
	a uuencoded compressed tar file of all the bits, where
	uuencoding is designed as an optimal way of getting over
	mail transport restrictions, compress does what it says
	and tar is a multipart wrapper designed for that only. Not
	standard outside unix, perhaps, but cleaner in that the
	mail formatting is done at the last minute and doesn't
	affect the other operations]

	If course, with HTTP2, multipart/alternative shouldn't
	be needed.

  Multipart for hypetext?

	Now, Dan not only suggests the use of this for
	multipart messages, but also suggests that a hypetext
	document shoudl necessarily contain many parts,
	one on SGML and one for each link as a MIME external document.
	This means that an SGML hypertext document can never stand
	on its own! An SGML parser will always need to have
	a MIME parser sitting just outside.  I don't like
	this: I feel we have to separate these two things.

	Suppose that an SGML document does want to
	be sent in a MIME message and does want to
	refer to other parts of that MIME message. In that case,
	it seems reasonable to have a format for that.
	However, when an SGML document is seen by itself, and
	refers to a news message for example, then there is
	no resaon for it not to be able to contain a
	complete reference within itself.

	When SGML documents include other files, then
	the SYSTEM value is typically a file name.
	It is a reeference to something outside. The
	precedent is set that SGML documents are allowed
	to refer to things outside.

	I think part of you objection, Dan is based on 
	a dislike of the UDI syntax -- which I'll come to later.
  
3. The MIME format for rich text.

	Here, I am not so impressed.  Basically, the MIME
	people are at the same level that we were before we started
	this cleanup, that they have SGML-LIKE stuff which isn't SGML.
	As its not difficult to make it SGML, they should do that.
	Comparing MIME's rich text and HTML, I see that
	we lack the characetr formatting attributes BOLD and ITALIC
	but on the other hand I feel that our treatment of
	logical heading levels and other structures is much more powerful
	and has turned out to provide more flexible formatting	
	on different platforms than explicit semi-references
	to font sizes.  This is born out by all the systems which
	use named styles in preference to explicit formatting,
	LaTeX or other macros instead of TeX, etc etc.

	So technically, HTML has some things to give MIME's rich
	text. Are the MIME people still open to additions?
	If not, I would suggest we add BOLD and ITALIC (or
	two emphasis styles for characters), and keep HTML
	separete from MIME's rich text, proposing it as a
	MIME text standard.
	(HP0 and HP1 were in the HTML spec but as unimplemented)
  
4. The MIME format for external document addresses (MIME UDIs)

	As Ed <emv@msen.com> says, this is a bit of a non-issue,
	as MIME addersses and currnet style UDIs map onto
	each other. However, we have to agree on a "concrete
	syntax" (or two... :-) in the end.

	It's like the difference between an x400 style mail address
	generated from an internet address, and that internet address.
	Which do you prefer

		timbl@zippy.lcs.mit.edu

	where the sections of the domain name are defined
	to have no semantics at all, or

		S=timbl; HO=zippy; OU=lcs; O=MIT; SECTOR=edu

	(this is not real x400 - don't use it!) or

		user=timbl
		host=zippy
		group=lcs
		organization=mit
		sector=education

	You say, Dan, that you "don't think [UDIs] work".
	Do you mean people don't use them in all correspondance?
	Well, what DO they use? They use ange-ftp addresses	
	for FTP (like info.cern.ch:/pub/www/doc/*.ps),
	which are even more terse than UDIs! They use news
	message-ids which are UDIs.

	Let me say that I personally don't much care about the
	arbitrary punctuation. There are a few things, though,
	which are important:

	-  The thing should be printable 7-bit ASCII.

	   Unlike arbitrary document formats,
	   UDIs must be sendable in the mail

	- White space should not be significant. I would
	  accept the presence of some arbitrary white space
	  as a delimiter, but one cannot distinguish between
	  different forms and quantities of white space.
	  This is because things get wrapped and unwrapped.

	  Dan, you object to UDIs because they don't
	  contain white space. But that is purely so that
	  to CAN wrap them onto several lines and still
	  recuperate them.  You can put white space
	  in but it shouldn't mean anything. (This is not possible
	  in W3 as is but it is in the UDI document)

	  I don't see why you say they
	  can't be put as an SGML attribute. They are just
	  text strings. They will be quoted of course
	  (Yes, I know the old NeXT browser doesn't quote them)
	  Is that not allowed? What are the problem characters?
	  If there SGML problem characters in the UDI spec, they
	  probably are ruled out of SGML for a reason.

	  (I recently saw in a galley proof of an article in which
	  our mail adress had been hypernated! UDIs must be
          squeezable into 2 inch columns.)

        There is a sematic difference between a tagged
	list and a punctuation-divided set, and that is that
	the former has defined semantics but the latter doesn't and
	can therefore be extended more easily.  I suggest that tagging
	could be used for the four bits of an address
	that must be separable by all sides, which are
	limited in number (4). Within those bits, the string should
	be transparent as the protocol does not require
	every party to understand the innards. 

	The bits are
			MIME		Used by

	name space:	ACCESS		Used by client

	server details:	HOST, PORT	used by client, protocol-dependent
	
	local doc id:	PATH		used by server only

	anchor id: 	(none)		used by presntation application only

	It seems useful to maintain the ability to work out which
	bits are seen by whom.

	I only used punctation to separate these parts in the W3 UDI
	because people like internet addresses and mail addresses
	and filenames and telephone numbers and message-ids and
	room numbers and zip codes which don't have tags and
	do make do with punctuation.  If the groundswell of
	opionion on this list is that tags are better, then
	let's use tags!

	Whatever we sue, it should be as quotable in an SGML
	attribute as in a MIME external reference as in a
	scribbled note or a link-pasteboard or whatever.
	(The U is for Universal, NOT Unique!)

PHILOSOPHY

	In the W3 world, the model is of a dynamic world of
	documents which generally have some "home" or
	(or several), which can be found using sufficient
	intelligence and the help of ones friends given the UDI.

	A mail message has no home, and so in principle the parts
	of it have no home. When a hypertext multipart message
	(really consisting of multiple hypertext documents)
	has links between its parts they refer to each other
	within a completely isolated conetext.

	There are now two possibilites when the message is in fact
	archived and made readable. One is we say that the parts
	are then addressed as parts ofthe message, wherever it
	may be. The other is to say that the parts of the message
	are very likely things which had some original home.
	In that case, the message is just giving the reciever
	a copy to save him the (perhaps insurmountable) trouble
	of retrieving it.  In this case the parts should be
	identified with thier original UDIs so that the
	receiver is not confsed with multiple documents which
	are in fact the same thing. 
	

I think that's all the comments I have on what I've read so far..

	Tim
________________________________________________________________
Tim Berners-Lee
World-Wide Web initiative
CERN, 1211 Geneva 23, Switzerland        timbl@info.cern.ch
Visiting MIT: NE43-513, (617)234 6016    timbl@zippy.lcs.mit.edu














From wathu@lanka.ccit.arizona.edu  Thu Jun 11 19:58:10 1992
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20867; Thu, 11 Jun 92 19:58:10 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21933; Thu, 11 Jun 92 19:58:18 +0200
Return-Path: wathu@lanka.ccit.arizona.edu
Received: from Lanka.CCIT.Arizona.EDU by Arizona.edu (PMDF #12663) id
 <01GL32SFED9CAL44H9@Arizona.edu>; Thu, 11 Jun 1992 10:36 MST
Received: by lanka.ccit.arizona.edu; Thu, 11 Jun 92 10:37:01 MST
Date: Thu, 11 Jun 92 10:37:01 MST
From: wathu@lanka.ccit.arizona.edu (Wije Wathugala)
Subject: SGML Converters
To: www-talk@nxoc01.cern.ch
Cc: wathu@arizona.edu
Message-Id: <9206111737.AA05287@lanka.ccit.arizona.edu>
X-Envelope-To: www-talk@info.cern.ch

SGML Converters
===============

We are in the process of setting up a WorldWideWeb (WWW) server for computer
center documentation.  Our current documents are in many different 
word processor formats, such as Ventura, WordPerfect (DOS), MS-Word (Mac)
TeX, LaTeX, PostScript, RTF and etc.  We would like to convert them to SGML 
so that we can link them to WWW.

We would like recommendations for good products (commercial or free).
If any of you have tried this type of conversions, please comment on 
your experiences.

Thank you

Wije Wathugala
wathu@arizona.edu

Note: This was also posted to comp.text.sgml


From timbl  Thu Jun 11 20:19:28 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20943; Thu, 11 Jun 92 20:19:28 MET DST
Date: Thu, 11 Jun 92 20:19:28 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206111819.AA20943@ nxoc01.cern.ch >
To: www-talk@nxoc01.cern.ch
Subject: Paper on use of W3, anyone? NSC-92 Pisa

From nir-request@kona.cc.mcgill.ca Mon Jun  8 14:03:43 1992
Return-Path: <nir-request@kona.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10963; Mon, 8 Jun 92 14:03:39 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14481; Mon, 8 Jun 92 14:01:45 +0200
Received: by kona.cc.mcgill.ca (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA00594  on Mon, 8 Jun 92 07:42:58 -0400
Received: from relay.cdnnet.ca by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA00590  (mail destined for /usr/lib/sendmail -odq -oi -fnir-request nir-out) on Mon, 8 Jun 92 07:42:50 -0400
From: Jill.Foster@newcastle.ac.uk
Received: by relay.CDNnet.CA (4.1/1.14)
	id AA11925; Mon, 8 Jun 92 04:42:40 PDT
Date:  7 Jun 92 17:24 +0100
To: nir@cc.mcgill.ca
Reply-To: Jill.Foster@newcastle.ac.uk
Message-Id: <emu-ov07.1992.0607.172441.cl54(a)uk.ac.ncl.mts>
Subject: PISA conference: paper deadline extended
Status: RO

 This is being posted to several lists.
 
 The deadline for papers for the Network Services Conference has been
 extended to June 21st.  I'm particularly keen to see papers on
 information services and perhaps someone could do a "consumer report"
 on some of the applications such as WWW, WAIS, Gopher archie etc.  -
 with particular emphasis on the information management tools (for the
 information providers).
 
 I'm also interested in papers for the user support sections, and would
 like to see case studies presented in building "electronic
 communities".
 
 I'll forward any papers sent to me - or you can forward them to the
 conf.  secretariat as indicated below.
 
 Thanks,
 
 Jill Foster
--------------------------- cut here --------------------------------
 
              First Call for Participation / Call for Papers
                                  NSC'92
                  The Network Services Conference 1992
                     Pisa, Italy, November 3-5, 1992
 
 
                Network Services Conference 1992
 
                            Overview
 
 
 The world of  academic and research networking has evolved  to the point
 where  the  protocol  wars  have  become  largely  irrelevant.  This  is
 demonstrated  by the  recent appearance  of high-level  networking tools
 which  are worldwide  in scope  and which  run simultaneously  over many
 different lower layers.
 
 NSC 92  will focus on  issues in  providing services to  customers, with
 special attention  paid to the  recent and exciting developments  in new
 global high-level tools such as  World-Wide Web, Prospero, Archie, Alex,
 Gopher, and WAIS. We will address the  impact of the new global tools on
 service development and  support, the  changing function  of traditional
 tools and services  (such as archives), upcoming  specific services such
 as new  databases, and the future  role of the library.  User support at
 the campus level, and the role  of support in accessing global services,
 will be addressed.
 
 The conference will be of greatest interest to network service providers
 and sophisticated users  who are changing their focus  from providing or
 obtaining  bandwidth  to  offering,  supporting, and  using  varied  and
 powerful services.  Talks and  other conference activities  will address
 the  needs   of  the  research,  academic,   educational,  governmental,
 industrial, and commercial network communities.
 
 NSC 92  is being  organized by EARN  in conjunction  with EUnet/EurOpen,
 NORDUnet, RARE, and RIPE.
 
     Conference Venue
 
 Pisa is situated in Tuscany on the Arno river. The Italian poet Gabriele
 D'ANNUNZIO named  Pisa's Piazza della  Torre: "The Square  of Miracles",
 and yet the definition could be extended with equal justice to the whole
 city. Pisa is not  only an art center with few rivals;  it is steeped in
 culture  and  science  and  offers  an  up-to-date  infrastructure.  The
 conference will  be held  at the  Palazzo dei  Congressi, near  the city
 center and at walking distance to the Hotels.
 
     Program and Registration Information
 
 The conference program with information on how to register will be
 distributed with the second announcement around 1 August 1992.
 
     Papers
 
 Papers for presentation at the conference are solicited in the following
 areas:
 
 -  Dealing with the Information Explosion
    . New Global Information Access Tools
    . Utilizing Established Information Access and Distribution Tools
 
 -  Managing Global Network Information Services
    . Coordination/Duplication, Security, Privacy, Authentication
    . Closed Group Applications
 
 -  The Electronic Library
    . Local Databases, Remote Databases, OPACS, CD/ROMS
    . Inter-Library Cooperation
 
 -  User / Customer Support
    . Help Desks, Documentation, Reaching the Customers
 
 -  Assessing Customer Needs
 
 -  Special Interest Communities
 
 -  Group Communication Technologies & Services - "Groupware"
 
 -  Networking for Schools
 
 -  Delivering Messaging to the Desktop
    . Practical Experiences, Products, Security, Interface issues
 
 -  Beyond ASCII
    . Character sets, Multimedia
    . Creating, Encoding, Receiving
 
 -  Economic Aspects of Networking
    . Bandwidth, E-mail Access, Efficiency, Control
 
 -  Recent European Networking Developments
 
 Please submit  title and abstract,  by mail, fax or  PREFERRABLY e-mail,
 not later than 31 May 1992 to:
 
   Hans Deckers (DECK@FRORS12.BITNET)
   EARN Office
   c/o CIRCE
   BP 167
   F91403 Orsay France
   Tel: +33 1 6982 3973
   Fax: +33 1 6928 5273
 
     Posters and Demonstrations
 
  A poster  wall will  be available  to participants  for the  display of
  their posters and  projects. A terminal room with  connectivity to EARN
  and the Internet will be available to delegates.
 
  A  room will  be available  for  workstations and  PCs to  be used  for
  demonstrations. An Ethernet connected to the Internet will be available
  in the room. Connectivity to the Internet  will be via a 64Kbps line to
  CNUCE. The minimum bandwidth between  CNUCE and CERN is 512Kbps. People
  interested in  setting up  demonstrations may  send their  questions to
  NSCINFO@FRORS12.BITNET
 
     Further Information and General Inquiry
 
  Further  information will  be available  through an  ad hoc  conference
  mailing list.  If you want to  make sure you receive  the invitation as
  well  as the  preliminary program  please ask  for subscription  to the
  conference mailing  list ( NSC92@FRORS12.BITNET )  sending mail, e-mail
  or fax specifying your e-mail address to:
 
   Nadine Grange  (GRANGE@FRORS12.BITNET)
   EARN Office
   c/o CIRCE
   BP 167
   F91403 Orsay France
   Tel: +33 1 6982 3973
   Fax: +33 1 6928 5273
 
  General inquiries can be made at NSCINFO@FRORS12.
 
 
     Program and Organizing Committee
 
     Program Committee
 
    Dennis  Jennings, Ireland  (Chair);  Rob  Blokzijl, the  Netherlands;
    Daniele  Bovio,  France;  Paul  Bryant, United  Kingdom;  Avi  Cohen,
    Israel;  Laszlo  Csaba,  Hungary;  Hans  Deckers,  France;  Jean-Loic
    Delhaye, France; Jill Foster, United Kingdom; Frode Greisen, Denmark;
    Glenn Kowack,  the Netherlands; Stelios Orphanoudakis,  Greece; David
    Sitman, Israel; Stefano Trumpy, Italy
 
     Organizing Committee
 
    Frode  Greisen,  Denmark  (Chair  );  Hans  Deckers,  France;  Dennis
    Jennings,  Ireland; Glenn  Kowack,  the  Netherlands; Marco  Sommani,
    Italy
 
 
     Corporate Sponsors (Preliminary list )
 
    IBM


From connolly@pixel.convex.com  Fri Jun 12 03:31:28 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21811; Fri, 12 Jun 92 03:31:28 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14764; Fri, 12 Jun 92 03:31:33 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12883; Thu, 11 Jun 92 20:31:12 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA29502; Thu, 11 Jun 92 20:31:09 -0500
Message-Id: <9206120131.AA29502@pixel.convex.com>
To: timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Cc: enag@ifi.uio.no, www-talk@nxoc01.cern.ch
Subject: Re: MIME, SGML, UDIs, HTML and W3 
In-Reply-To: Your message of "Thu, 11 Jun 92 12:22:56 EDT."
             <9206111622.AA03819@zippy.lcs.mit.edu> 
Date: Thu, 11 Jun 92 20:31:08 CDT
From: Dan Connolly <connolly@pixel.convex.com>


Now my comments on your comments:

>There is no reason why we shouldn't try both protocols.
>If they map well onto each other, its just a question
>of having two separate prasers at the low level, building
>the same internal structures.
>
On the other hand, I'd like to keep a telnet based protocol
around -- maybe gopher is good enough.

>When we're talking about an SGML representation,
>and describe a file to come later down the link,
>I don't think we have to use the NOTATION= attribute with a notation
>type, because we won't in fact be talking about
>the notation of an SGML element.
>The format in this case is not something which the SGML
>parse is aware of.
>
I don't believe this is true. From the horse's mount (Erik Naggum, that is):
----
|   What's the scoop? Do we have to use external entities for raw data?

Yes.  An external entity that is not an SGML text entity requires a
notation identifier, so you only need to list the entities in the DTD,
with notation, and refer to them by name in the document instance.

----

>1. MIME classification of data formats
>
>	 So I'd
>	back the use of these for W3.
>
Yeah!!

>
>2. The MIME format for multi-part messages
>
>	This is necessary for sending a multi-part
>	document over a mail link.  We have to ask ourselves
>	whether it is reasonable to use over a binary link.
>	Personally, my initial impression is that the MIME
>	stuff, using as it does terminators such as
>	--xxx-- separated by blank lines, looks more horrible
>	to work with in this respect than SGML!

The algorithm to separate a MIME multipart message into its
parts is simply: search the data stream for CRLF--boundary--CRLF.
It can be done by a finite state machine. Even the simplest
SGML documents require a pushdown automaton to parse.

> Still we have
>	the problem of restrictions on the content:
>	Must not contain delimiters, limited 7 bit character set,
>	line orientation, in fact all the things which email
>	carries as a restriction.  This is really taking on board
>	a legacy of all the mail which has evolved over the years.
>	Do we need that for our new ultra-fast hypertext access
>	protocol?
>

No, we don't. MIME _allows_ transfer of data over 7 bit ASCII
channels, but it hardly requres it. The Content-transfer-encoding
can be:
	7 bit (default): line oriented 7 bit data
	8 bit : line oriented 8 bit data
	binary : raw 8 bit data, no CRLF's required
	base64: uuencode standardized
	quoted-pritable: text with escape sequences

The MIME standard explicitly supports expansion to 8 bit transport
mechanisms.

>	[Compare the MIME format with the rather cleaner NeXT
>	Mail format which is as far as I understand simply
>	a uuencoded compressed tar file of all the bits, where
>	uuencoding is designed as an optimal way of getting over
>	mail transport restrictions, compress does what it says
>	and tar is a multipart wrapper designed for that only. Not
>	standard outside unix, perhaps, but cleaner in that the
>	mail formatting is done at the last minute and doesn't
>	affect the other operations]
>
It was a requirement of MIME that the structure of the document
be accessible without decoding or uncompressing data, especially
since MIME messages are recursive and complex messages might
otherwise go through more than one encoding.

Compression was not addressed by the MIME standard, and uuencode
doesn't make it though some gateways.

>	If course, with HTTP2, multipart/alternative shouldn't
>	be needed.
>
What does HTTP2 define that obviates the multipart/alternative
type?


>  Multipart for hypetext?
>
>	Now, Dan not only suggests the use of this for
>	multipart messages, but also suggests that a hypetext
>	document shoudl necessarily contain many parts,
>	one on SGML and one for each link as a MIME external document.
>	This means that an SGML hypertext document can never stand
>	on its own!

That's exatly the point. Anything besides text should be handled
as an external entity to be resolved by the parsing system. I just
suggested that a portable way to resolve SGML external entities
is to refer to MIME attachments.

> An SGML parser will always need to have
>	a MIME parser sitting just outside.  I don't like
>	this: I feel we have to separate these two things.
>
Well, it has to have something sitting outside. The SGML parsers
I've seen resolve system entities using the file system. I proposed
we use a MIME message like a mini file system, with links to
other file systems.

>	Suppose that an SGML document does want to
>	be sent in a MIME message and does want to
>	refer to other parts of that MIME message. In that case,
>	it seems reasonable to have a format for that.
>	However, when an SGML document is seen by itself, and
>	refers to a news message for example, then there is
>	no resaon for it not to be able to contain a
>	complete reference within itself.
>
OK, I can see that we should be able to resolve the lexical
issues and put the whole UDI/MIME access specification inside
the SGML document.

But what about multimedia web nodes?

SGML describes text and references to other texts just fine.
But if we want a format that can include more than just
text, I don't think we should try to fit it _inside_ SGML.

I think SGML should be used to convey text and document
structure. But I still like the idea of wrapping it in
a MIME message for multimedia interoperability.


>3. The MIME format for rich text.
>
>	Here, I am not so impressed.
Nor am I.


>4. The MIME format for external document addresses (MIME UDIs)
>
>	As Ed <emv@msen.com> says, this is a bit of a non-issue,
>	as MIME addersses and currnet style UDIs map onto
>	each other. However, we have to agree on a "concrete
>	syntax" (or two... :-) in the end.
>
Exactly. And why not the MIME concrete syntax?

>	Let me say that I personally don't much care about the
>	arbitrary punctuation. There are a few things, though,
>	which are important:
>
>	-  The thing should be printable 7-bit ASCII.
>
MIME: check.

>	   Unlike arbitrary document formats,
>	   UDIs must be sendable in the mail
>
MIME: check.

>	- White space should not be significant. I would
>	  accept the presence of some arbitrary white space
>	  as a delimiter, but one cannot distinguish between
>	  different forms and quantities of white space.
>	  This is because things get wrapped and unwrapped.
>
MIME: check.

>	  Dan, you object to UDIs because they don't
>	  contain white space. But that is purely so that
>	  to CAN wrap them onto several lines and still
>	  recuperate them.  You can put white space
>	  in but it shouldn't mean anything. (This is not possible
>	  in W3 as is but it is in the UDI document)
>
I must not have read the UDI document closely. I certainly
got the impression that a UDI should look like one word
when "written on the back of an envelope."

>	  I don't see why you say they
>	  can't be put as an SGML attribute. They are just
>	  text strings.

The WAIS UDIs are huge. An SGML declaration defines a maximum
for the length of an attribute value. The default value is ...
oh. ahem. it's 960. I think the MIME 72 character line length
is a little more restrictive than that :-)

> They will be quoted of course
>	  (Yes, I know the old NeXT browser doesn't quote them)
>	  Is that not allowed? What are the problem characters?
>	  If there SGML problem characters in the UDI spec, they
>	  probably are ruled out of SGML for a reason.
>
Good question. These are the things we should research before
we go _any_ further implementing this stuff.

>	Whatever we sue, it should be as quotable in an SGML
>	attribute as in a MIME external reference as in a
>	scribbled note or a link-pasteboard or whatever.
>	(The U is for Universal, NOT Unique!)
>
Here's an idea for a quoting strategy for the four parts: Either
	a) it'a a quoted string delimited by "" with \" allowed
	in the middle, or
	b) it's a base-64 representation of an arbitrary
	binary stream.
Just an idea.

I'm late for an appointment. Gotta go.

Dan

From davis@willow.tc.cornell.edu  Fri Jun 12 13:51:03 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA22825; Fri, 12 Jun 92 13:51:03 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06860; Fri, 12 Jun 92 13:51:11 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA27811; Fri, 12 Jun 92 07:52:59 EDT
Date: Fri, 12 Jun 92 07:52:59 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206121152.AA27811@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: file: access does not use RCP?

It would be a good idea if WWW tried to use RCP for
file access in addition to using anonymous FTP.

(I think it does not use RCP because I made a link to a file
on another computer and WWW was not able to access it.  But
I was able to RCP the file.  I set up a link to a different
file to which I verified anonymous FTP access, and that worked
fine.)

I would guess that RCP copying would be faster than FTP, so
maybe it should be tried first.

Best wishes... Viola and WWW are excellent.


From timbl  Fri Jun 12 18:11:08 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23957; Fri, 12 Jun 92 18:11:08 MET DST
Date: Fri, 12 Jun 92 18:11:08 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206121611.AA23957@ nxoc01.cern.ch >
To: davis@willow.tc.cornell.edu, www-talk@nxoc01.cern.ch
Subject: Re: file: access does not use RCP?

Good idea -- I guess RCP would be faster, though I don't
know the protocol. The client code would have to keep a
list of hosts for which it had succeded with one or other method,
to save time always trying rcp first on distant sites.

Something for the agenda...
Where is the rcp protocol defined?

Tim BL

From peterson@choctaw.csc.ti.com  Fri Jun 19 20:30:42 1992
Return-Path: <peterson@choctaw.csc.ti.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16044; Fri, 19 Jun 92 20:30:42 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05105; Fri, 19 Jun 92 20:30:59 +0200
Received: from tilde.csc.ti.com ([128.247.160.56]) by ti.com with SMTP 
	(5.59/LAI-3.2) id AA26952; Fri, 19 Jun 92 13:30:22 CDT
Received: from choctaw.csc.ti.com (choctaw) by tilde.csc.ti.com id AA29287; Fri, 19 Jun 1992 13:29:16 -0500
Received: by choctaw.csc.ti.com (4.1/SMI-4.1)
	id AA23472; Fri, 19 Jun 92 13:29:15 CDT
From: peterson@choctaw.csc.ti.com (Bob Peterson)
Message-Id: <9206191829.AA23472@choctaw.csc.ti.com>
Subject: Re: MIME, SGML, UDIs, HTML and W3
To: timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Date: Fri, 19 Jun 92 13:29:14 CDT
Cc: connolly@pixel.convex.com, enag@ifi.uio.no, www-talk@nxoc01.cern.ch,
        timbl@zippy.lcs.mit.edu
In-Reply-To: <9206111622.AA03819@zippy.lcs.mit.edu>; from "Tim Berners-Lee" at Jun 11, 92 12:22 pm
Reply-To: peterson@choctaw.csc.ti.com
Mime-Version: 1.0
X-Mailer: ELM [version 2.3 PL11]

You said:
> 
> 	...
> PHILOSOPHY
> 
> 	In the W3 world, the model is of a dynamic world of
> 	documents which generally have some "home" or
> 	(or several), which can be found using sufficient
> 	intelligence and the help of ones friends given the UDI.

  My group has thought about the identity issue in the context of
object identifiers in a distributed object-oriented database.

> 	A mail message has no home, and so in principle the parts
> 	of it have no home. When a hypertext multipart message
> 	(really consisting of multiple hypertext documents)
> 	has links between its parts they refer to each other
> 	within a completely isolated conetext.

  In the OODB we think of an address (UDI or object identifier) as
relative to some enclosing context.  Different parts of an address make
sense only in the correct context.  For example, the mail system
accesses several address contexts to resolve a mail address such as
peterson@csc.ti.com: .com, ti.com, csc.ti.com, and the email address
namespace.  Each context understands its part and returns a reference
to the next, usually more specific, context.  The program(s) attempting
to resolve the address understand the result of an address lookup, and
use each result appropriately.

  I claim a UDI makes sense only in a particular context.  If a UDI
makes explicit all contexts except the most global, then a UDI easily
refers to a different part of the same multipart message.

> 	There are now two possibilites when the message is in fact
> 	archived and made readable. One is we say that the parts
> 	are then addressed as parts of the message, wherever it
> 	may be.

  This might enable operating on a message when the "home" is the
process' address space, i.e., before the message is placed into a file
system or other addressing context.  In effect the context is the
machine and the process' address space, but these can be, and generally
are, defaulted or assumed rather than explicitly stated.

>	         The other is to say that the parts of the message
> 	are very likely things which had some original home.
> 	In that case, the message is just giving the reciever
> 	a copy to save him the (perhaps insurmountable) trouble
> 	of retrieving it.  In this case the parts should be
> 	identified with thier original UDIs so that the
> 	receiver is not confsed with multiple documents which
> 	are in fact the same thing. 

  I wonder about attaching two UDI's to a message: a (required)
absolute UDI, referring to the original home, and a second (optional)
UDI referring to a "less expensive" copy.  ("Less expensive" is, of
course, arbitrarly defined.)  Think of the latter as a hint, i.e., if
the user attempts to resolve the UDI the system first looks for the
hint and, if found, uses it.  If the hint is absent or fails, then the
system tries to use the (more expensive) required UDI.

  Of course thinking about this might be simpler if we refer to one UDI
with two parts: one required, the other optional.

  Benefits of this approach include retaining the reference to the
original site while, at the same time, supporting replication of the
document in an arbitrary number of locations.  If the optional UDI is
relative to the containing message then (1) the reference never fails,
and (2) performance is excellent.  Retaining the original UDI should
help some applications monitor the original for revisions, e.g., an
archive site could cache a document but check periodically with the
original site for an updated version.  Retaining the original can also
help resolve the validity of a document, e.g., by enabling comparison
of the original and cached copies.

  One could implement the optional UDI as a table external to the
document.  When dereferencing a UDI the table is checked first and, if
the UDI is found, the associated optional UDI is used.  This has the
advantage of not modifying the original document, including not
changing the result of any error detection arithmetic, e.g., checksums.

> 
> I think that's all the comments I have on what I've read so far..
> 
> 	Tim

    Bob

-- 
Bob Peterson             Work: peterson@csc.ti.com              Expressway Site
Texas Instruments        Home: peterson@zgnews.lonestar.org     North Building
P.O. Box 655474, MS238   TIMSG: RWP  Landline: +1 214 995 6080  Aisle A4
Dallas, Tx USA 75265                 FAX line: +1 214 995 0304  2-88V97

From raisch@cthulhu.control.com  Mon Jun 22 19:27:14 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20886; Mon, 22 Jun 92 19:27:14 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14855; Mon, 22 Jun 92 19:27:25 +0200
Received: by control.com (4.1/Spike-2.0)
	id AA04177; Mon, 22 Jun 92 13:25:37 EDT
From: raisch@cthulhu.control.com (Robert Raisch)
Message-Id: <9206221725.AA04177@control.com>
Subject: Links, Type and Documents (Third time's a charm)
To: www-talk@nxoc01.cern.ch
Date: Mon, 22 Jun 92 13:25:35 EDT
Cc: One@cthulhu.control.com, of@cthulhu.control.com, the@cthulhu.control.com,
        missing@cthulhu.control.com, pieces@cthulhu.control.com,
        here@cthulhu.control.com, is@cthulhu.control.com,
        the@cthulhu.control.com, ability@cthulhu.control.com,
        of@cthulhu.control.com, creating@cthulhu.control.com,
        new@cthulhu.control.com, h-texts@cthulhu.control.com,
        and@cthulhu.control.com
Action: dding new links to old h-texts.
X-Mailer: ELM [version 2.3 PL11]

[ This is the third time I have tried to post this.  Drop me a line,
  Francois, if you see this on the list.  Thanks.  </rr> ]

<!-- 

  I first posted this some weeks ago on the 'www-interest' list, and 
  received only one reply, (complementing me on my reference to Rexx.)

  I really had hoped that this post would start an interesting discussion
  on the topics I address, specifically the ideas of 'attention links' 
  'user documents' and 'transparent documents'.

  Are these ideas so obvious that they merit no discussion whatsoever?

  Always interested in replies, </rr>

 -->

<Preface>
First of all, hearty congrats to the WWW people.  It's a great tool, and
since it is based on SGML, it has the broadest scope of any solution I have
yet seen.

To others, see the current issue of Byte magazine regarding "Info-Glut" and
SGML.  Interesting.


<Query>
One of the missing pieces here is the ability of creating new h-texts, and
adding new links to old h-texts.

Hypertext, and like systems, are of limited use if they do not support
collaboration.  I feel that this is a VERY important point.

When might we expect extensions to WWW that support collaboration?
</Query>
</Preface>

I have a few recommendations regarding new link types in WWW.  This is based
on thinking about hyper-applications for almost 15 years, (ever since I 
first had the pleasure of hearing Ted Nelson speak in 1977.)

Please keep in mind that these are 'front end' issues.  They should not
affect the manner in which documents are stored.

------------------

There are 4 'minimal' link types which, I believe, a true hypertext application
*must* support.

	1.	Replacement
			-- when activated, replaces the current document
			   with a new document, (this is what WWW offers
			   today).

	2.	Annotation
			-- when activated, overlays a new document on the
			   current document, partially obscuring the original.
			   (An annotation must be dismissed by the reader.)

	3.	Inclusion
			-- when the document is created, elements from other
			   documents are collection to be included in the
			   representation of the current document.  (Quotes)
			   (This is a non-interactive link.  The user does
			    not activate this link. It is activated before 
			    the document is presented to the user.)

	4.	Expansion
			-- when activated, new information is added to the 
			   current document, expanding the original scope.

			   (Think of outline processors, and the collapse
			    of detail.)  

			   This is also a reflection of Nelson's concept of 
			   'stretch text'.  

			   A stretch-text definition of "stretch text" might be:

{Collapsed}		   "Stretch text is{}a sentence{}that when{}collapsed
			    states it's thesis{}and when expanded adds detail." 

{Expanded}		   "Stretch text is where a sentence is constructed in 
			    such a way that when it is collapsed it states it's 
			    thesis in simple terms, and when expanded adds 
			    detail to further express itself."

There are 3 further types which I believe are necessary to complete the
function paradigm.  (Of particular interest is the 'attention link'.)


	6.	Execution

			-- when activated, some arbitrary function is performed.
			   The point that was mentioned about the lack of an
			   ubiquitious scripting language is well made.  Lisp
			   is too arcane for most.  Shell languages are too
			   platform specific.  What is needed is a simple
			   to understand, freely available scripting platform.
			   Although I hesitate to mention it, REXX might be
			   a reasonable choice due to it's broad availability.

	5.	Attention   (a specialisation of the Execution type)

			-- when the current document is modified (a link is
			   added, or removed, or the document is merely read)
			   a message is sent to the 'owner' of the attention
			   link.  This message creates a new link in the 'user
			   document' of the individual who placed the attention.
			   (See definition of 'user document' below.)

			   In this way, I could place a link onto a document I 
			   had interest in, and when it was changed or accessed
			   in some manner, I would be informed.

	7.	Collection  (a non-local specialisation of the Execution type)

			-- when activated, a collection link leaves the current
			   document, and 'travels' the docuverse, in search of
			   other documents which satisfy it's internal criteria.
			   This is the concept of a 'knowbot'.

			   Collection links can be activated based on day and
			   time, much like the WAIS questions in the MAC 
			   WAIS interface, WAIS-Station.  They could also be
			   activated based on external events, such as the 
			   activation of an attention link.

			   Collection links would be written in the ubiquitious
			   scripting language, and would only be allowed to 
			   operate on documents which were EXPLICITLY permitted.


Along with the various links presented, two new varieties of document would
be used.

	Transparent Documents  --

		a transparent document is one which a user creates locally,
		and that is a new representation of an existing document.

		Transparent documents are used to create new local links on
		a document which I do not have permission to modify.

		Transparent documents can then be made available to others,
		(published) just as a "regular" document is, thus facilitating
		the creation of new works from old.

	User Documents --

		a user document is where I keep my "bookmarks", links to
		local documents, links to messages from others, links to
		my "attention" links, (see below).  User documents are where
		we, as navigators of the docuverse, are defined as individuals.

		They are also where we can keep links to other user documents
		which have been permitted to view/modify my own local documents.

		Another function of the User document is to collect users into
		an abstract group. (Thus, based on my membership in user 
		document 'Research Group', I am permitted access to materials
		'owned' by that group. Of course, messages sent to an abstract
		group then become available to all members of that group.)

		(Please note that a User Document is nothing more or less than
		 a collection of links, (as all documents are).)

----------------------------

So.....

	Scenerio:

		I start my session with my hypertext-application, and open 
		my user document.

		I notice that 17 of my attention links have been activated 
		in the last day.

		I select the most interesting and activate the link which
		it created in my personal user document.

		I am now reading an article which I previously linked, and
		see that an annotation which I made some time ago has been
		added to, by a colleague.

		The comments are pertinant to my current work, so I create
		a new local 'transparent' document to mirror the original 
		work.  (Or use the 'transparent' document I may have created
		previously.)

		On this new document, I make a few new annotations and decide
		to made this new work available to the research group of which
		I am leader.  I place a link to it in the user document which
		represents my working group.

		I also send a new document link to the colleague who made the
		original comments, so that he can see how I have interpreted 
		his ideas, and included them into my own research.

		I move ever onwards...

---------------------

Ok, I hope that that fuels a little discussion, and I would *love* to hear 
from others regarding these ideas.  

Regards, </rr>

"knowledge is the *only* weapon"
-- 

From raisch@cthulhu.control.com  Mon Jun 22 19:32:37 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20902; Mon, 22 Jun 92 19:32:37 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15255; Mon, 22 Jun 92 19:32:51 +0200
Received: by control.com (4.1/Spike-2.0)
	id AA04308; Mon, 22 Jun 92 13:30:55 EDT
From: raisch@cthulhu.control.com (Robert Raisch)
Message-Id: <9206221730.AA04308@control.com>
Subject: Links, Types and Documents (Third time's a charm)
To: jfg@dxcern.cern.ch
Date: Mon, 22 Jun 92 13:30:55 EDT
Cc: www-talk@nxoc01.cern.ch
X-Mailer: ELM [version 2.3 PL11]

[ 
  ARRRGGGGHHHHHH!!!! I goofed.  This is the full message, please 
  disregard the previous one, since I am not sure that it got out
  properly.

  This is the third time I have tried to post this.  Drop me a line,
  Jean Francois, if you see this on the list.  Thanks.  </rr> ]

<!-- 

  I first posted this some weeks ago on the 'www-interest' list, and 
  received only one reply, (complementing me on my reference to Rexx.)

  I really had hoped that this post would start an interesting discussion
  on the topics I address, specifically the ideas of 'attention links' 
  'user documents' and 'transparent documents'.

  Are these ideas so obvious that they merit no discussion whatsoever?

  Always interested in replies, </rr>

 -->

<Preface>
First of all, hearty congrats to the WWW people.  It's a great tool, and
since it is based on SGML, it has the broadest scope of any solution I have
yet seen.

To others, see the current issue of Byte magazine regarding "Info-Glut" and
SGML.  Interesting.


<Query>
One of the missing pieces here is the ability of creating new h-texts, and
adding new links to old h-texts.

Hypertext, and like systems, are of limited use if they do not support
collaboration.  I feel that this is a VERY important point.

When might we expect extensions to WWW that support collaboration?
</Query>
</Preface>

I have a few recommendations regarding new link types in WWW.  This is based
on thinking about hyper-applications for almost 15 years, (ever since I 
first had the pleasure of hearing Ted Nelson speak in 1977.)

Please keep in mind that these are 'front end' issues.  They should not
affect the manner in which documents are stored.

------------------

There are 4 'minimal' link types which, I believe, a true hypertext application
*must* support.

	1.	Replacement
			-- when activated, replaces the current document
			   with a new document, (this is what WWW offers
			   today).

	2.	Annotation
			-- when activated, overlays a new document on the
			   current document, partially obscuring the original.
			   (An annotation must be dismissed by the reader.)

	3.	Inclusion
			-- when the document is created, elements from other
			   documents are collection to be included in the
			   representation of the current document.  (Quotes)
			   (This is a non-interactive link.  The user does
			    not activate this link. It is activated before 
			    the document is presented to the user.)

	4.	Expansion
			-- when activated, new information is added to the 
			   current document, expanding the original scope.

			   (Think of outline processors, and the collapse
			    of detail.)  

			   This is also a reflection of Nelson's concept of 
			   'stretch text'.  

			   A stretch-text definition of "stretch text" might be:

{Collapsed}		   "Stretch text is{}a sentence{}that when{}collapsed
			    states it's thesis{}and when expanded adds detail." 

{Expanded}		   "Stretch text is where a sentence is constructed in 
			    such a way that when it is collapsed it states it's 
			    thesis in simple terms, and when expanded adds 
			    detail to further express itself."

There are 3 further types which I believe are necessary to complete the
function paradigm.  (Of particular interest is the 'attention link'.)


	6.	Execution

			-- when activated, some arbitrary function is performed.
			   The point that was mentioned about the lack of an
			   ubiquitious scripting language is well made.  Lisp
			   is too arcane for most.  Shell languages are too
			   platform specific.  What is needed is a simple
			   to understand, freely available scripting platform.
			   Although I hesitate to mention it, REXX might be
			   a reasonable choice due to it's broad availability.

	5.	Attention   (a specialisation of the Execution type)

			-- when the current document is modified (a link is
			   added, or removed, or the document is merely read)
			   a message is sent to the 'owner' of the attention
			   link.  This message creates a new link in the 'user
			   document' of the individual who placed the attention.
			   (See definition of 'user document' below.)

			   In this way, I could place a link onto a document I 
			   had interest in, and when it was changed or accessed
			   in some manner, I would be informed.

	7.	Collection  (a non-local specialisation of the Execution type)

			-- when activated, a collection link leaves the current
			   document, and 'travels' the docuverse, in search of
			   other documents which satisfy it's internal criteria.
			   This is the concept of a 'knowbot'.

			   Collection links can be activated based on day and
			   time, much like the WAIS questions in the MAC 
			   WAIS interface, WAIS-Station.  They could also be
			   activated based on external events, such as the 
			   activation of an attention link.

			   Collection links would be written in the ubiquitious
			   scripting language, and would only be allowed to 
			   operate on documents which were EXPLICITLY permitted.


Along with the various links presented, two new varieties of document would
be used.

	Transparent Documents  --

		a transparent document is one which a user creates locally,
		and that is a new representation of an existing document.

		Transparent documents are used to create new local links on
		a document which I do not have permission to modify.

		Transparent documents can then be made available to others,
		(published) just as a "regular" document is, thus facilitating
		the creation of new works from old.

	User Documents --

		a user document is where I keep my "bookmarks", links to
		local documents, links to messages from others, links to
		my "attention" links, (see below).  User documents are where
		we, as navigators of the docuverse, are defined as individuals.

		They are also where we can keep links to other user documents
		which have been permitted to view/modify my own local documents.

		Another function of the User document is to collect users into
		an abstract group. (Thus, based on my membership in user 
		document 'Research Group', I am permitted access to materials
		'owned' by that group. Of course, messages sent to an abstract
		group then become available to all members of that group.)

		(Please note that a User Document is nothing more or less than
		 a collection of links, (as all documents are).)

----------------------------

So.....

	Scenerio:

		I start my session with my hypertext-application, and open 
		my user document.

		I notice that 17 of my attention links have been activated 
		in the last day.

		I select the most interesting and activate the link which
		it created in my personal user document.

		I am now reading an article which I previously linked, and
		see that an annotation which I made some time ago has been
		added to, by a colleague.

		The comments are pertinant to my current work, so I create
		a new local 'transparent' document to mirror the original 
		work.  (Or use the 'transparent' document I may have created
		previously.)

		On this new document, I make a few new annotations and decide
		to made this new work available to the research group of which
		I am leader.  I place a link to it in the user document which
		represents my working group.

		I also send a new document link to the colleague who made the
		original comments, so that he can see how I have interpreted 
		his ideas, and included them into my own research.

		I move ever onwards...

---------------------

Ok, I hope that that fuels a little discussion, and I would *love* to hear 
from others regarding these ideas.  

Regards, </rr>

"knowledge is the *only* weapon"
-- 

From M.Hu@cs.ucl.ac.uk  Mon Jun 22 20:56:31 1992
Return-Path: <M.Hu@cs.ucl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21169; Mon, 22 Jun 92 20:56:31 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA18429; Mon, 22 Jun 92 20:56:54 +0200
Message-Id: <9206221856.AA18429@dxmint.cern.ch>
Received: from tooting.cs.ucl.ac.uk by bells.cs.ucl.ac.uk with local SMTP 
          id <g.19271-0@bells.cs.ucl.ac.uk>; Mon, 22 Jun 1992 19:53:34 +0100
To: raisch@cthulhu.control.com
Cc: jfg@dxcern.cern.ch, www-talk@nxoc01.cern.ch, M.Hu@cs.ucl.ac.uk
Subject: Re: Links, Types and Documents (Third time's a charm)
In-Reply-To: Your message of Mon, 22 Jun 92 13:30:55 -0500. <9206221730.AA04308@control.com>
Date: Mon, 22 Jun 92 19:55:27 +0100
From: M.Hu@cs.ucl.ac.uk


On Mon, 22 Jun 92 13:30:55 EDT ,
raisch@COM.CONTROL.CTHULHU  wrote:

> 
><Query>
>One of the missing pieces here is the ability of creating new h-texts, and
>adding new links to old h-texts.

I agree with you that it is important for hypertext to create automatically
new h-texts and add new links to old ones. In my point of view, the first
step to realize it is to divide links from the texts. In WWW model, links
are inside the hypertexts, which makes it very difficult.


> 
>Hypertext, and like systems, are of limited use if they do not support
>collaboration.  I feel that this is a VERY important point.


Talking about collaboration of different hypertexts (IT IS VERY IMPORTANT.),
I feel it is more complicating. Interchange of formats of hypertexts and links
among different systems needs a better-structured hypertext model as a core.
WWW can not do it, and furthermore, it is not a good model to do it...

> 
>When might we expect extensions to WWW that support collaboration?
></Query>
></Preface>
> 
>I have a few recommendations regarding new link types in WWW.  This is based
>on thinking about hyper-applications for almost 15 years, (ever since I
>first had the pleasure of hearing Ted Nelson speak in 1977.)
> 
>Please keep in mind that these are 'front end' issues.  They should not
>affect the manner in which documents are stored.
> 
>------------------
>--


Mike

From connolly@pixel.convex.com  Mon Jun 22 21:39:12 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21341; Mon, 22 Jun 92 21:39:12 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19580; Mon, 22 Jun 92 21:39:28 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12765; Mon, 22 Jun 92 14:38:42 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA17202; Mon, 22 Jun 92 14:38:27 -0500
Message-Id: <9206221938.AA17202@pixel.convex.com>
To: raisch@cthulhu.control.com (Robert Raisch)
Cc: jfg@dxcern.cern.ch, www-talk@nxoc01.cern.ch
Subject: Re: Links, Types and Documents (Third time's a charm) 
In-Reply-To: Your message of "Mon, 22 Jun 92 13:30:55 EDT."
             <9206221730.AA04308@control.com> 
Date: Mon, 22 Jun 92 14:38:26 CDT
From: Dan Connolly <connolly@pixel.convex.com>


><!-- 
>
>  I first posted this some weeks ago on the 'www-interest' list, and 
>  received only one reply, (complementing me on my reference to Rexx.)
>
I keep my copy of this posting handy and I check lots of ideas against it.

>  I really had hoped that this post would start an interesting discussion
>  on the topics I address, specifically the ideas of 'attention links' 
>  'user documents' and 'transparent documents'.
>
I don't have any well defined systems (implementations or just specs.)
that address these issues. WWW is headed in this direction, but it's
a long way off.
 
>  Are these ideas so obvious that they merit no discussion whatsoever?
>
No, it's more like they're so novel we haven't thought seriously enough
to comment yet.

><Query>
>One of the missing pieces here is the ability of creating new h-texts, and
>adding new links to old h-texts.
>
>Hypertext, and like systems, are of limited use if they do not support
>collaboration.  I feel that this is a VERY important point.
>
>When might we expect extensions to WWW that support collaboration?
></Query>

You might look to Andrew for a more mature system in these regards.
While I think Andrew is a great breeding ground for ideas, I think
the resulting technology is too off-beat (for example, they implemented
their own object-oriented C preprocessor, and now C++ has come along
and writing Andrew code looks like a pain in comparison).

I'm toying with the idea of a FrameMaker inset editor to interface
Frame's direct-manipulation editing capabilities with global
hypertext on the internet. I shouldn't even mention it until I have
some sort of implementation, but it's an idea...

>I have a few recommendations regarding new link types in WWW.  This is based
>on thinking about hyper-applications for almost 15 years, (ever since I 
>first had the pleasure of hearing Ted Nelson speak in 1977.)
>
>Please keep in mind that these are 'front end' issues.  They should not
>affect the manner in which documents are stored.
>
Well, we should be careful not to store documents in a way that
conflicts with these useful concepts.


>------------------
>
>There are 4 'minimal' link types which, I believe, a true hypertext applicatio
n
>*must* support.
>
>	1.	Replacement
>			-- when activated, replaces the current document
>			   with a new document, (this is what WWW offers
>			   today).
>
FrameMaker: gotolink
GNU Info: menus, notes
WWW: <A HREF=...>
EBT: link

>	2.	Annotation
>			-- when activated, overlays a new document on the
>			   current document, partially obscuring the original.
>			   (An annotation must be dismissed by the reader.)
>
FrameMaker: openlink
GNU Info: n/a
WWW: n/a
EBT: link window=new

>	3.	Inclusion
>			-- when the document is created, elements from other
>			   documents are collection to be included in the
>			   representation of the current document.  (Quotes)
>			   (This is a non-interactive link.  The user does
>			    not activate this link. It is activated before 
>			    the document is presented to the user.)
>
FrameMaker: import by reference (bitmapped graphics ONLY)
GNU Info: n/a
WWW: n/a
EBT: n/a

>	4.	Expansion
>			-- when activated, new information is added to the 
>			   current document, expanding the original scope.
>
FrameMaker: conditional text
GNU Info: n/a
WWW: n/a
EBT: change stylesheets so that HIDE property changes

>
>There are 3 further types which I believe are necessary to complete the
>function paradigm.  (Of particular interest is the 'attention link'.)
>
>
>	6.	Execution
>
>			-- when activated, some arbitrary function is performed
.
>			   The point that was mentioned about the lack of an
>			   ubiquitious scripting language is well made.  Lisp
>			   is too arcane for most.  Shell languages are too
>			   platform specific.  What is needed is a simple
>			   to understand, freely available scripting platform.
>			   Although I hesitate to mention it, REXX might be
>			   a reasonable choice due to it's broad availability.
>
Ah... if you want commentary, state an arguable thesis. No one can argue
against a platitude like "What is needed is a simple to undertand,
freely available scripting platform." I vote for some brand of Lisp, perhaps
XLisp or ELK.

But there's a larger issue: should documents be turing machines? Using SGML,
it is a well defined problem to determine whether a document is valid. As
soon as we allow documents to be programs (like TeX, nroff, or Lisp), we
run into the halting problem and we lose any hope of converting documents
from one representation to another. If a document is a program that, when run,
conveys its content, then we lose the ability to use that content in any
other way than the author originally intended.

>	5.	Attention   (a specialisation of the Execution type)
>
>			-- when the current document is modified (a link is
>			   added, or removed, or the document is merely read)
>			   a message is sent to the 'owner' of the attention
>			   link.  This message creates a new link in the 'user
>			   document' of the individual who placed the attention.

Hmmm... I need a clear explanation of the underlying model here. In the
model in my mind, a "document" is never modified. But the functionality
you describe is interesting. Certainly we want to be able to collect
usage statistics.

>	7.	Collection  (a non-local specialisation of the Execution type)
>
>			-- when activated, a collection link leaves the current
>			   document, and 'travels' the docuverse, in search of
>			   other documents which satisfy it's internal criteria.
>
>			   This is the concept of a 'knowbot'.
>
It looks like a query to me. I need either 1) a good definition of the
capabilities of a knowbot, or 2) an implementation of a knowbot (any
sort of hack will do) to get a feel for the functionality. Until
then, it's just a very vague idea. Fortunately, there are some
implementations of this idea: cron/find, WAIS, USENET news (kill files, etc.)

>
>	Transparent Documents  --
>
>		a transparent document is one which a user creates locally,
>		and that is a new representation of an existing document.
>
>		Transparent documents are used to create new local links on
>		a document which I do not have permission to modify.
>
>		Transparent documents can then be made available to others,
>		(published) just as a "regular" document is, thus facilitating
>		the creation of new works from old.
>
This looks like a local copy of a document to me. No?

>	User Documents --
>
>		a user document is where I keep my "bookmarks", links to
>		local documents, links to messages from others, links to
>		my "attention" links, (see below).  User documents are where
>		we, as navigators of the docuverse, are defined as individuals.
>
>		They are also where we can keep links to other user documents
>		which have been permitted to view/modify my own local documents
.
>
>		Another function of the User document is to collect users into
>		an abstract group. (Thus, based on my membership in user 
>		document 'Research Group', I am permitted access to materials
>		'owned' by that group. Of course, messages sent to an abstract
>		group then become available to all members of that group.)
>
>		(Please note that a User Document is nothing more or less than
>		 a collection of links, (as all documents are).)
>
Now we've opened up the whole PIM can of worms. Current implementations
include mail user agents (MH, Elm), news readers (with their .newsrc and
kill files, etc.) wais-questions, WWW home documents. I haven't looked
at the hyperbole model, but I understand it addresses this issue at length.

>So.....
>
>	Scenerio:
>
I'd like to see how a MIME user agent would satisfy this scenario...

>		I start my session with my hypertext-application, and open 
>		my user document.
>
I start my MIME UA.

>		I notice that 17 of my attention links have been activated 
>		in the last day.
>
There are 17 mail messages (with certain tell-tale headers) in my inbox.

>		I select the most interesting and activate the link which
>		it created in my personal user document.
>
I read the message. It's a message/external-body type message that points
to an article in a USENET database at this site.

>		I am now reading an article which I previously linked
that is, I had saved the article by creating a message/external-body
type message in my mail box.

>		, and
>		see that an annotation which I made some time ago
i.e. my followup article

>		 has been
>		added to, by a colleague.
>
i.e. has been followed-up.

>		The comments are pertinant to my current work, so I create
>		a new local 'transparent' document to mirror the original 
>		work.  (Or use the 'transparent' document I may have created
>		previously.)
>
I just save a reference to the news artile, as above, in a message/external-body
type message.

>		On this new document, I make a few new annotations

i.e. I follow up to the document. It would be nice to be able to do
some direct-manipulation style annotation to articles, ala FrameMaker.

>		and decide
>		to made this new work available to the research group of which
>		I am leader.  I place a link to it in the user document which
>		represents my working group.
>
I mail a message/external-body style reference to the thread to the
alias that represents my working group.

I really think that Internet Mail, Usenet News, and WAIS could be
a great platform for CSCW. A MIME user agent that could make
WAIS and NNTP queries and act as a FrameServer client would
be a great start. If I have time, I'll try to cook something up.

Dan

From HARMO@valt.helsinki.fi  Tue Jun 23 10:01:10 1992
Return-Path: <HARMO@valt.helsinki.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA22326; Tue, 23 Jun 92 10:01:10 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29759; Tue, 23 Jun 92 10:01:30 +0200
Received: from charon-gw.pc.Helsinki.FI by kruuna.helsinki.fi with SMTP id AA04453
  (5.65c/IDA-1.4.4 for <www-talk@nxoc01.cern.ch>); Tue, 23 Jun 1992 11:00:35 +0300
Received: From HYLKN1/WORKQUEUE by charon-gw.pc.Helsinki.FI
          via Charon 3.4 with IPX id 100.920623110021.448;
          23 Jun 92 11:00:49 +0200
Message-Id: <MAILQUEUE-101.920623105426.28@valt.Helsinki.FI>
To: jfg@dxcern.cern.ch, www-talk@nxoc01.cern.ch
From: "Timo Harmo - SocSci U of Helsinki"  <HARMO@valt.helsinki.fi>
Date:     23 Jun 92 10:54:27 EET
Subject:  Re: Links, Types and Documents (Third time's a charm) 
X-Pmrqc:  1
X-Mailer: Pegasus Mail v2.2 (R3).

> > 3.  Inclusion
> >             not activate this link. It is activated before
> >             the document is presented to the user.)

Is this something that could be done by the server?

> > 6.  Execution
> freely available scripting platform." I vote for some brand of
>Lisp, perhaps  XLisp or ELK.
How about a simple Prolog? Prolog is quite hypertextish and relatively
easy to implement (I suppose).
 -Timo


From bridges@nas.nasa.gov  Tue Jun 23 19:03:22 1992
Return-Path: <bridges@nas.nasa.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25071; Tue, 23 Jun 92 19:03:22 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07321; Tue, 23 Jun 92 19:03:46 +0200
Received: by orville.nas.nasa.gov (5.61.a/1.34)
	id AA21186; Tue, 23 Jun 92 10:03:15 -0700
Date: Tue, 23 Jun 92 10:03:15 -0700
From: bridges@nas.nasa.gov (Michael D. Bridges)
Message-Id: <9206231703.AA21186@orville.nas.nasa.gov>
To: www-talk@nxoc01.cern.ch
Subject: add me to mailing list


Please add me to your www-talk mailing list.

                                Thank you,
                                                Mike Bridges
                                                NASA/AMES
                                                bridges@nas.nasa.gov


From koellner@lbl.bitnet  Tue Jun 23 19:13:52 1992
Return-Path: <koellner@lbl.bitnet>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25120; Tue, 23 Jun 92 19:13:52 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07876; Tue, 23 Jun 92 19:14:18 +0200
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R1)
   with BSMTP id 2560; Tue, 23 Jun 92 19:13:30 SET
Received: from Lbl.Bitnet by CEARN.cern.ch (Mailer R2.07B) with BSMTP id 7452;
 Tue, 23 Jun 92 19:13:30 SET
Date:    Tue, 23 Jun 92 10:13:02 PDT
From: koellner@lbl.bitnet (Werner Koellner, LBL)
Message-Id: <920623101302.23e16263@csa3.lbl.gov>
Subject: WWW (Viola) question
To: www-talk@nxoc01.cern.ch
X-St-Vmsmail-To: ST%"www-talk@info.cern.ch"

                                         LBL, Physics Division, 23-JUN-1992

    Hi,
         what might be the cause of the following error message when I
         start up WWW?

    Unknown character: 43WWW: home = /home/ux5/ux5c/phyd/cern/WWW/lbl.html

                  Best regards,

                                   Werner

From jfg@dxcern.cern.ch  Tue Jun 23 20:34:17 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25415; Tue, 23 Jun 92 20:34:17 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10610; Tue, 23 Jun 92 20:34:39 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA25813; Tue, 23 Jun 92 20:34:11 +0200
Date: Tue, 23 Jun 92 20:34:11 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206231834.AA25813@dxcern.cern.ch>
To: koellner@lbl.bitnet (Werner Koellner, LBL)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: WWW (Viola) question
References: <920623101302.23e16263@csa3.lbl.gov>

	Werner,

  This may be a problem either with Viola, or with the home document
you're trying to read. Try it with the line-mode browser:

	www /home/ux5/ux5c/phyd/cern/WWW/lbl.html

and see if it works. Did you create the lbl.html yourself ? In any
case, you can mail it to me (privately to not bother the list) and
I'll tell you if there's something wrong with it. Are you trying to
set up a WWW server about LBL ? That would be great !

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From davis@willow.tc.cornell.edu  Wed Jun 24 17:47:51 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28638; Wed, 24 Jun 92 17:47:51 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02889; Wed, 24 Jun 92 17:48:17 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA13062; Wed, 24 Jun 92 11:49:48 EDT
Date: Wed, 24 Jun 92 11:49:48 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206241549.AA13062@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: logical types of links (Re:  Links, Types and Documents)

I want to take issue with the set of links proposed by R Raisch.  They
are very intriguing and I praise him for bringing them up, while also
apologizing for not responding to them sooner.  This is the first
of several letters addressing some problems I see in his proposal
and some general issues for WWW and hypertext which are raised
by his list.

In this message, I want to discuss the logical types of links.  It
seems to me that hyperlinks could encoding knowledge of several
different types.  Three that come to mind are:

1 structural - relations between documents, e.g. document X cites
document Y; word X is defined in document Y; possibly extending to
the kind of argumentation links used in e.g. gIBIS, NoteCards (e.g.
claim X is refuted by argument Y)

2 presentation - the user should see X and Y at same time if possible.

3 construction - to build document X, include files Y and Z, and
run procedure W at display time.

It is not obvious to me that these three should be treated in the
same way.  In particular, I doubt the need for presentation information.
The lesson of SGML is that documents should be marked with logical
structure, leaving presentation out.

It also seems to me that Raisch's list mixes several types, and
this is undesirable.

For example, I see the "annotation" link as encoding presentation
information.  It differs from "replacement" only in that you see the
original and the target at the same time.  (At least, that's how he
describes it.  One could also define it as a kind of logical relation
- it is a comment on the target.  But that's a different subject.)

A second example is that one might want to use an "Execution" link (or
its subtype "collection") to implement any of the first four types
(replacement, annotation, inclusion, expansion).

To continue the discussion, we might consider whether there are
other logical types for links, how to decompose Raisch's links 
into these categories, and whether to encode presentation in links.

Best wishes

From davis@willow.tc.cornell.edu  Wed Jun 24 17:53:39 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28667; Wed, 24 Jun 92 17:53:39 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03527; Wed, 24 Jun 92 17:54:04 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA13109; Wed, 24 Jun 92 11:55:33 EDT
Date: Wed, 24 Jun 92 11:55:33 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206241555.AA13109@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: Re:  Links, Types and Documents

In considering R. Raisch's link types, it seems to me that the
expansion and replacement can be combined and generalized.  In both
cases portion of the document is replaced.  In expansion case, the
condensed text is replaced (perhaps temporarily) with the enlarged
text, in replacement the entire document is replaced with some other.
So the more general case is a link which labels a range in both the
source and target document.  The replacement link labels the entire
document, the expansion labels only a portion.

As for execution links in general, I see Dan's point that adding
procedures to documents makes them difficult to manipulate.  And N
Borenstein has pointed out (in Mime) the dangers of executing
arbitrary code.  But I still see that there are functions which only
code can provide, and so we just face the challenge of designing a
language that is both powerful and safe, perhaps sacrificing Turing
completeness.  Is Atomicmail [tm?] such a language?


From davis@willow.tc.cornell.edu  Wed Jun 24 17:58:51 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28710; Wed, 24 Jun 92 17:58:51 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03786; Wed, 24 Jun 92 17:59:18 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA13167; Wed, 24 Jun 92 12:00:50 EDT
Date: Wed, 24 Jun 92 12:00:50 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206241600.AA13167@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: Links that refer to a range of text, not just a point.

In my last piece of mail (I hope they arrive in order) I tried to
generalize replacement and expansion links.  But this way of
describing links presupposes that links have a range in the source
document.  You need this (or is this obvious?) e.g. because you must
know whether an annotation applies to the entire document, a section,
or just one word.  Likewise for replacements, you need to know how
much to replace.

But as far as I know, in most (all?) hypertext systems, the origin and
destination of links are points.  Certainly this is true in WWW, e.g.
The destination of a link is a position in a document, never a section
of a document.  On the other hand, in some sense WWW's Anchors do label
a region of the origin, since the anchor has an explicit beginning
and end.

But then this raises another issue: does WWW allow anchors within
anchors?  I think not - in which case I could not use WWW anchors to
both label a paragraph (e.g. for attaching an annotation) and a word
within it (e.g. for definition).  This worries me quite a bit.  Nor
can I attach multiple links to the same point (e.g. definitions of a
word in multiple languages).


From davis@willow.tc.cornell.edu  Wed Jun 24 18:00:30 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28723; Wed, 24 Jun 92 18:00:30 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03892; Wed, 24 Jun 92 18:00:54 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA13181; Wed, 24 Jun 92 12:02:25 EDT
Date: Wed, 24 Jun 92 12:02:25 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9206241602.AA13181@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject:  Raisch's Attention link
Cc: 
Mime-Version: 1.0
Content-Type:  text/richtext
Content-Transfer-Encoding:  7bit

<paragraph>
In a previous message, R. Raisch proposed a number of interesting
link types.  One of them was the attention link, which I want to
discuss here.  I am uncertain about the need for this link, the
technical ability to provide it, and the definition.

<nl>
<paragraph>
Let me discuss the function first.  The function seems to be
providing a means of notifying an "owner" of a document when certain
conditions obtain.  The conditions Raisch mentions are:<nl>
<indent>
 1) someone has read the document<nl>
 2) someone has modified the document<nl>
</indent>

<nl><paragraph>
There is some doubt in my mind about read notifications.  I am not sure I
want other people to know what I read.  I can see only two reasons
for this feature:<nl>
<indent>
 1) as a form of "proof of delivery".  Some email systems provide
this, but I don't like it.<nl>
 2) as a means of collective revenue (pay-per-read)<nl>
</indent>

<nl><paragraph>
As for charging, fairness requires that the link not be activated
until I have seen a warning (otherwise I might get charged a zillion
dollars to read the document - just like 900 phone numbers in the
USA).  So this will add complexity to the client.

<nl><paragraph>
Also, attention links are not sufficient for a charging.  They
support a model where I am charged once per read, no matter how much
of the document I read.  But it seems likely that there might be need
for other charging models.  It is also unclear that they are technically
sufficient.  For economic purposes, you would want the message to be sent
by the server, not the client.  But this would cease working if the
document were copied.  (But maybe this is not a fair objection, since
I know of no scheme that can preserve property rights given the
possibility of perfect digital  copying.)

<nl><paragraph>
Continuing on the more general question of read notification,
regardless of purpose, it is possible that one might desire
notification on a finer grain that the entire document.  But this, I
think, requires the cooperation of the client.  Indeed, the client
can tell the server that a given piece of text has been displayed,
but not whether the user actually read it (unless we go further, and
implement it with an executable function which requires the user to
click on a button)

<nl><paragraph>
As for the second form (modification notification), it seems to me
that there is a need to inform not just the owner, but also other
people.  There are two reasons for this:  

<nl><paragraph>
First, as owner of a document, I am not likely to allow other people
to modify my document at all.  On the other hand, I might be
interested in notifications when someone adds or deletes a link <bold>to</bold>
my document.  But attention links don't address this problem.

<nl><paragraph>
Second, as a reader of a document I don't own, I might want to be
notified when the owner modifies it, since I might wish to re-read it
(or at least the changed sections.)  Let's call these "monitor"
links.  Monitor links might be a useful means of reducing effort
required for some kinds of network retrievals - those where I am
interested in new developments in certain areas.  Now, instead of
polling documents to see whether they've changed, I can just leave an
"attention link" and get a notification.

<nl><paragraph>
On the other hand, this has some problems.  One of them is the
question of who pays the cost of sending all these notifications.
Can you imagine the load on your workstation as it sends out 10,000
monitor notifications?  Perhaps this can be answered by bringing in
more economics - that is, to attach a monitor link I need to set up
an account such that I can be charged for the delivery.  Or maybe the
notifications are sent by the document server, so as an author I am
not affected.

<nl><paragraph>
A second problem (or at least issue) is that monitor links require
finer grain of size and time.  Some users will want to monitor only
select portions of a document.  Likewise, we may not want
notifications sent when <italic>any</italic> editing is made, but
rather only when the author completes a session.  That is, if I edit
the document for a day, saving changes six times, you don't want six
notifications.  This might require some notion of "transactions" such
as used in data bases.  

<nl><paragraph>
Finally though, I don't think it is correct to call these things
links.  They are not related to logical structure, nor are they
explicitly activated by the reader (or writer), indeed that person
not even be aware that it was activated.  Consider the more general
question - if attention links are a subcase of execution links, and
attention links can be activated without knowledge of the user,
should all  execution links be capable of such activation?  Do you
want to read documents which can cause arbitrary computations to
occur without your choice, or even knowledge?


From connolly@pixel.convex.com  Wed Jun 24 19:16:14 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28939; Wed, 24 Jun 92 19:16:14 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09163; Wed, 24 Jun 92 19:16:36 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA29352; Wed, 24 Jun 92 12:15:55 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA10088; Wed, 24 Jun 92 12:15:53 -0500
Message-Id: <9206241715.AA10088@pixel.convex.com>
To: davis@willow.tc.cornell.edu (Jim Davis)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Links that refer to a range of text, not just a point. 
In-Reply-To: Your message of "Wed, 24 Jun 92 12:00:50 EDT."
             <9206241600.AA13167@willow.tc.cornell.edu> 
Content-Type: multipart/mixed; boundary="8<--"
Mime-Version: 1.0
Date: Wed, 24 Jun 92 12:15:52 CDT
From: Dan Connolly <connolly@pixel.convex.com>

--8<--

>But then this raises another issue: does WWW allow anchors within
>anchors?  I think not - in which case I could not use WWW anchors to
>both label a paragraph (e.g. for attaching an annotation) and a word
>within it (e.g. for definition).  This worries me quite a bit.  Nor
>can I attach multiple links to the same point (e.g. definitions of a
>word in multiple languages).
>
This and other related questions (can I have lists within lists?)
are precisely the reason for using a well-defined structural markup
language governed by SGML processing rules.

Right now we have no DTD for HTML, and the only answers lie in
the browser source code. The documentation "in the web" is too
vague. But I hardly think we want the browser source code to
be the definition of HTML.

On the other hand, I tried and failed to come up with a DTD which
described HTML in such a way that the existing documents are legal.

Before this situation gets out of hand, we need to establish a
(possibly evolving, but at least exsting) SGML DTD for HTML.
This will require incompatible changes to the definiton of HTML
(for instance, the PLAINTEXT, XMP, and LISTING features of HTML
don't quite fit into SGML).

Enclosed* is a proposed DTD, a perl hack to patch existing files,
and a sample patched file. I invite:

= SGML experts to round out the DTD (should we include
  stuff from the ISO General DTD? the AAP article DTD?
  ISOnum, ISOpub etc. standard entities? How about
  using the QWERTZ LaTeX-like DTD?)

= SGML non-experts to become conversant in SGML (it's
  coming whether you like it or not)

= HyTime experts to add to the confusion. Seriously, I'd
  like to know what HyTime has to offer.

= DSSSSSSSSSSL experts to do the same

= the WWW team to adapt existing code to match this DTD
  (or some real DTD)

= HTTP server sites to then update their HTML files


	*encosed in the MIME multipart/mixed enclosure sense

--8<--

<!-- This DTD was produced by DeveGram on Tue Jun  2 18:58:16 1992 -->
<!-- and hand-edited by connolly@convex.com -->

<!-- typical usage:

  <!DOCTYPE web-node SYSTEM 
    [
    <!ENTITY UDI011 SDATA
      "http://info.cern.ch/hypertext/DataSources/NewsFromVM/Overview.html">
    ]>
 -->

<!--     Parameter Entities       -->

<!--      Terminal symbols        -->

<!ENTITY % words "#PCDATA" >

<!--    Non-ELEMENT symbols       -->

<!ENTITY % inline       "%words | A" >
<!ENTITY % text         "%inline | P | IMAGE" >
<!ENTITY % heading "H1|H2|H3|H4|H5|H6" >

<!ENTITY lt "<">
<!ENTITY gt ">">
<!ENTITY amp "&">

<!ENTITY lt. "<">
<!ENTITY gt. ">">
<!ENTITY amp. "&">

<!--     Document structure       -->

<!ELEMENT WEB-NODE      O O  (TITLE, NEXTID?, ISINDEX?, section+, ADDRESS?)>

<!ELEMENT TITLE - -  (%inline)+>
<!ELEMENT ADDRESS - - (%text)+>

<!ELEMENT NEXTID - O EMPTY >
<!ATTLIST NEXTID N NUMBER #IMPLIED>

<!ELEMENT ISINDEX - O EMPTY >


<!ELEMENT section O O ((%heading)?,
                        (
                        %text |
                        section |
                        MENU |
                        UL |
                        OL |
                        DIR |
                        DL)+)>

<!ELEMENT (H1|H2|H3|H4|H5|H6)   - -  (%inline) >

<!ELEMENT P     - O  EMPTY -- paragraph SEPARATOR -->

<!ELEMENT IMAGE - O EMPTY>
<!ATTLIST IMAGE DATA ENTITY #REQUIRED>

<!ELEMENT A     - -  (%inline)+>
<!ATTLIST A
        NAME CDATA #IMPLIED
        HREF ENTITY #IMPLIED
        TYPE CDATA #IMPLIED --@@-- >

<!ELEMENT MENU  - -  (LI+)>

<!ELEMENT UL    - -  (LI+)>

<!ELEMENT OL    - -  (LI+)>

<!ELEMENT DIR   - -  (LI+)>

<!ELEMENT LI    - O  (%text)+>

<!ELEMENT DL    - -  ((DT, DD)+)>

<!ELEMENT DT    - O  (%inline)+>

<!ELEMENT DD    - O  (%text)+>

--8<--

And here's a perl script that attempts to patch up existing
HTML files:

--8<--

#!/usr/local/bin/perl
#
# USE
#   fix-html.pl <W3-file.html >W3-file.sgml
#
# SEE ALSO
#   the web-node.dtd.
#

print "<!DOCTYPE WEB-NODE SYSTEM \n[\n";

@html = <>;                     # read whole file
$_ = join('', @html);
$out = '';

$header = 0;
$anchor = "UDI000";
while(/</){
    $out .= $`;
    $_ = $';
    if(s/^A\s+//i){
        &fix_anchor;
    }elsif(s/^NEXTID\s+(\d+)\s*>//){
        $out .= "<NEXTID N=$1>";
    }elsif(s/^H(\d)>//){
        local($n) = $1;
        while($n<=$header){ $out .= "</SECTION>"; $header--; }
        while($n>$header){ $out .= "<SECTION>"; $header++; }
        $out .= "<H$n>";
    }else{
        $out .= '<';
    }
}

$out .= $_;

foreach(keys %anchor){
    local($ent) = $anchor{$_};

    print "<!ENTITY $ent SDATA \"$_\">\n";
}

print "]>\n", $out;

sub fix_anchor{
    local($name, $href, $type);

    # What exactly is the syntax of an SGML attribute value?
    while(s/^(\w+)\s*=\s*((\"[^\"]*\")|([^\s>]+))\s*//){
        local($v) = ($3 || $4);
        local($a) = $1;
        $href = $v if $a =~ /^href$/i;
        $name = $v if $a =~ /^name$/i;
        $type = $v if $a =~ /^type$/i;
    }
    s/[^>]*>//;

    $out .= "<A";
    $out .= " NAME=\"$name\"" if $name ne '';
    $out .= " TYPE=\"$type\"" if $type ne '';
    if($href ne ''){
        if(!defined($anchor{$href})){
            $anchor{$href} = ++$anchor;
        }
        $out .= " HREF=" . $anchor{$href};
    }
    $out .= ">";
}

--8<--

Here's my default.html run through the above script:

--8<--

<!DOCTYPE WEB-NODE SYSTEM 
[
<!ENTITY UDI011 SDATA
"http://info.cern.ch/hypertext/DataSources/NewsFromVM/Overview.html">
<!ENTITY UDI006 SDATA "http://crnvmc.cern.ch./FIND">
<!ENTITY UDI020 SDATA "http://info.cern.ch/rpc/doc/User/UserGuide.html">
<!ENTITY UDI013 SDATA
"http://info.cern.ch/hypertext/DataSources/bySubject/Overview.html">
<!ENTITY UDI021 SDATA "http://otax.tky.hut.fi/tky/default.html">
<!ENTITY UDI017 SDATA
"http://info.cern.ch:8001/archive.orst.edu:9000/archie-orst.edu">
<!ENTITY UDI010 SDATA "http://crnvmc.cern.ch/NEWS/student">
<!ENTITY UDI019 SDATA
"http://info.cern.ch./hypertext/Products/WAIS/Sources/Overview.html">
<!ENTITY UDI002 SDATA "http://info.cern.ch/hypertext/WWW/TheProject.html">
<!ENTITY UDI007 SDATA "http://crnvmc.cern.ch/NEWS/?">
<!ENTITY UDI001 SDATA "QuickGuide.html">
<!ENTITY UDI012 SDATA
"http://info.cern.ch/hypertext/DataSources/News/Overview.html">
<!ENTITY UDI003 SDATA "http://crnvmc.cern.ch./WHO">
<!ENTITY UDI022 SDATA
"gopher://gopher.micro.umn.edu:70/11/Other%20Gopher%20and%20Information%20Servers">
<!ENTITY UDI005 SDATA "http://crnvmc.cern.ch./FIND/jaune?">
<!ENTITY UDI004 SDATA "http://crnvmc.cern.ch./FIND/yellow?">
<!ENTITY UDI016 SDATA "http://crnvmc.cern.ch/FIND/DESY?">
<!ENTITY UDI009 SDATA "http://crnvmc.cern.ch./NEWS/vmnews">
<!ENTITY UDI008 SDATA "http://crnvmc.cern.ch./NEWS/cern">
<!ENTITY UDI023 SDATA
"http://info.cern.ch./hypertext/WWW/LineMode/Defaults/default.html">
<!ENTITY UDI015 SDATA "http://slacvm.slac.stanford.edu./FIND/spires">
<!ENTITY UDI018 SDATA "http://iicm.tu-graz.ac.at./jargon">
<!ENTITY UDI014 SDATA "http://info.cern.ch./hypertext/DataSources/Overview.html">
]>
<TITLE>CERN Information</TITLE>
<NEXTID N=10>
<SECTION><H1>CERN Information - Select by number</H1>
<DL>
<DT><A NAME="0" HREF=UDI001>Help</A>
<DD>On this program, or the
<A HREF=UDI002>World-Wide Web project</A>.
<DT><A NAME="2" HREF=UDI003>Phone book</A>
<DD>People, phone numbers, accounts and email addresses.
See also the analytical
<A NAME="yellow" HREF=UDI004>Yellow Pages</A>, or
the same index in French :
<A NAME="jaune" HREF=UDI005>Pages Jaunes</A>.
<DT><A NAME="1" HREF=UDI006>"XFIND" index</A>
<DD>Index of computer centre documentation, newsletters, news,
help files, etc...
<DT><A NAME="groups" HREF=UDI007>News</A>
<DD>A complete list of all public CERN news groups, such as
<A NAME="3" HREF=UDI008>news from the CERN User's
Office</A>,<A NAME="4" HREF=UDI009>
CERN computer center news</A>,<A HREF=UDI010>
student news</A>. See also <A NAME="5" HREF=UDI011>private
groups</A> and <A NAME="inews" HREF=UDI012>Internet
news</A>.
</dl>
<SECTION><H2>From other sites</h2>
See online data by
<A NAME="subject" HREF=UDI013>subject</A>,
pointers to
<A HREF=UDI014>other forms of online data</a>, and the following specific databases:
<DL>
<DT><A NAME="spires" HREF=UDI015>SLAC SPIRES</A>
<DD>The High Energy Physics preprint index at Stanford Linear
Accelerator, California.
(This is the same information avialable via the QSPIRES facility on BITNET.
Include the word "FIND" as the first keyword, eg: K FIND AUTHOR FRED.).
<DT><A NAME="desy" HREF=UDI016>DESY documents</a>
<DD>Documents and help files from the DESY lab in Hamburg.
<DT><A NAME="archie" HREF=UDI017>
Archie</a>
<DD>An index of almost everything available by "anonymous FTP".
<DT><A NAME="7" HREF=UDI018>Hacker Jargon</a>
<DD>An index to a cross-referenced set of hacker terms. A demonstration
of the WWW gateway to the Graz Technical University Hyper-G database.
<DT><A NAME="9" HREF=UDI019>W.A.I.S.</a>
<DD>All kinds of information available from "Wide Area Information Servers".
<DT><A NAME="6" HREF=UDI020>CERN RPC</A>
<DD>The user guide for the RPC system developed in CERN CN division
(not Sun/RPC). This is an example of documentation (partially) converted
into hypertext.
<DT><A NAME="hut" HREF=UDI021>Helsinki</a>
<DD>Helsinki Technical University information service (Mostly Finnish).
<DT><A NAME="gopher" HREF=UDI022>Gophers</a>
<DD>Campus-wide information systems using "Gopher" software. (Requires
www version 1.1 or higher)
</DL>
(This page may be an out of date copy. See the
<A NAME="latest" HREF=UDI023>latest version</a>.)

--8<----



From connolly@pixel.convex.com  Thu Jun 25 01:04:53 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29544; Thu, 25 Jun 92 01:04:53 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28907; Thu, 25 Jun 92 01:05:12 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA15721; Wed, 24 Jun 92 18:04:30 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA04497; Wed, 24 Jun 92 18:04:27 -0500
Message-Id: <9206242304.AA04497@pixel.convex.com>
To: davis@willow.tc.cornell.edu (Jim Davis)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Raisch's Attention link 
In-Reply-To: Your message of "Wed, 24 Jun 92 12:02:25 EDT."
             <9206241602.AA13181@willow.tc.cornell.edu> 
Date: Wed, 24 Jun 92 18:04:27 CDT
From: Dan Connolly <connolly@pixel.convex.com>


><paragraph>
>In a previous message, R. Raisch proposed a number of interesting
>link types.  One of them was the attention link, which I want to
>discuss here.  I am uncertain about the need for this link, the
>technical ability to provide it, and the definition.
>
[side note: Jim: what did you use to compose richtext? Ez?]

While all these ideas are very interesting, I sometimes get
lost in a haze of ideas and scenarios. I'd like to get a handle
on just what application we're developing here.

The pie-in-the-sky seems to be a distributed, hypermedia CSCW
(computer supported collaborative work) platform, where multiple authors
discover, research, read, reply, refute, annotate, author, and otherwise
exchange information.

Features of such a system might include:
- distributed access to documents, i.e. a document can be processed
	by a client on another host
- fulltext searching of large bodies of information
- direct manipulation query, i.e. point-and-click at the information
	that you're interested in
- hypertext, i.e. random-access both within documents
	and between documents
- direct manipulation editing, i.e. editing a representation of
	the end product rather than the source format (WYSIWYG)
- multimedia documents (formatted text, raster images, line drawings,
	audio, video, structured enclosures)
- hypermedia (just a term for multimedia hypertext)

In order to refine the model behind such an application and explore
the functionality different models support, let's have a look at some
existing applications and an abstract of the model they present.

(terms introduced by _underscores_ are objects defined by the model.)


Internet mail: distributed text message interchange

With _user agent_, a user composes a _message_, which
is delivered by a _transfer agent_ to a _mailbox_, possibly in
another _domain_, where another user can read the message.
	MIME defines various _types_ of messages, including
	text, images, audio, video, included messages, and
	multipart (complex) types.
The recieving user may forward the message or reply to the message
by composing a new message including part or all of the original.


USENET news: distributed bulletin board

An _article_ is a special kind of message, addressed to
a _newsgroup_ rather than a _mailbox_. _Posting software_ enters the
article into a _repository_. A _news reader_ is a variant of a
mail user agent that helps a user navigate the articles in the
repository. It maintains a record of which articles the user
has read. (Transfer agents fit in somehow, and NNTP adds a client/server
separation between the news reader/poster and the repository).


WAIS: distributed fulltext search and multimedia retrieval

With a _wais client_, a user composes a _question_ consiting of
some relavent text and some _sources_ to consult. The wais client
contacts the _server_ for each source and makes a _query_ using the
relavent text. The servers respond with a scored list of _document
identifiers_. The user can select a document identifier and instruct
the client to _retrieve_ the corresponding _document_. The user
can then refine the question by adding relavent documents or _chunks_
of relavent documents.


FTP: distributed file exchange

A user invokes a _client_ on one _host filesystem_. The client
logs into a _server_ on another _host filesystem_ using a _username_
and a _password_. The user indicates a _mode_ and a _directory_
to the server through the client. The user can request that the
client display a _directory listing_ from the server, or transfer
a _named_ _file_ from the server's filesystem to the client's.


archie (prospero, really): a distributed file system

A user indicates a _host_, _search term_,
and _search mode_ to a _client_. The client contacts the _server_
on that host, issues a query, and displays the resulting list
of (host|dir|mode|date|seq|size|name|type) _items_.


Gopher: distributed hierarchical information browser

The _client_ connects to a _server_ (a _port_ on a _host_)
and sends it a _selector_. The server either sends back a _document_
or a _directory_, depending on the _type code_ corresponding to
the selector (the null selector is defined to be the root directory
of the server). A directory is a list of _items_. Each item consists
of a type code, a _name_, a selector, a host, and a port.

The client displays the names for the user, and the user chooses one.
The client sends the selector to the server indicated by the corresponding
host and port, and depending on the type code, 0) display the resulting
document, 1) display the resulting directory, 4-6) decode the resulting
archive  9) save the resulting document to a file. Codes 2, 7, and
8 request services from CSO phone book servers, fulltext gopher servers,
and telnet hosts respectively.

The client maintains a _stack_ of the directories the user has visited,
and the user can choose to "go back" in addition to choosing a
directory item.


WWW: a distributed hypertext browser

a WWW _client_ parses an _address_ into a _scheme_, a _server_,
a _path_, an _anchor id_, and some _search terms_. The client retrieves
a _document_ from the server using the path and search terms (using
one of several protocols), and displays the document, indicating
the _anchor element_ indicated by the anchor id. Documents contain
_structural elements_ such as headings, lists, etc.

The user requests the next document by either a) choosing one of the
anchor elements of the document (which specifies an address), or b)
if the document is an _index_, the user can request a search by supplying
search terms. The client combines the address of the document with the
search terms and begins again. Otherwise, the user can choose one of the
anchor elements and instruct the client to use the corresponding
address for the next document.


GNU Info: online hypertext documentation for applications and products

An info _browser_ displays the root _node_. A user indicates another node
to display by choosing _up_, _next_, _previous_, choosing a
_menu item_, or indicating a _note_ to follow.


Unix manual: structured text documentation for unix commands and fuctions

A user may request _formatted text display_ of a _page_ by its _name_,
and _section_, or they may request display of all _permuted index entries_
(containing names of pages) that match a _string_. The database is defined
on a per-user basis as a list of _trees_, each contatining a permuted
index and one or more sections containing one or more pages.


Frame: direct manipulation hypermedia editor, hypermedia browser

FrameMaker supports point-and-click editing of _documents_ composed
of _frames_ containing _objects_ (geometrics graphics and raster images)
and _textflows_ of _paragraphs_ of formatted text and _markers_, including
_link sources_ and _link destinations_.

FrameViewer displays a _page_ frame of a document, and allows point-and-click
access to the link sources. Every document has an implicit firstpage and
lastpage link destination. Every page has an implicit link to the next
and previous page.


Compare and contrast objects:

Mail messages vs. WAIS documents vs WWW documents vs FTP files
	(unique id's? writable?)
WAIS source vs. news group
WAIS server vs. NNTP server vs. gopher server vs HTTP server
Message-ID vs WAIS docid vs WWW UDI
WAIS chunk vs. WWW anchor vs. FrameMaker marker
Info node vs. FrameMaker page vs. WWW document

Compare and contrast features

- distributed access to documents
	mail: no
	news: NNTP allows retrieval of headers by newsgroup or date
	wais: 
- fulltext searching: WAIS vs. WWW vs. gopher
- direct manipulation query: xwais vs. xgopher vs. NeXT WWW
- hypertext: WWW vs. GNU Info vs. FrameMaker
- direct manipulation editing: FrameMaker vs. Andrew vs. Interviews
- multimedia documents: FrameMaker vs. Gopher vs. MIME vs. WAIS vs. WWW

I'm formulating a model that will hopefully put all these features
and objects into one framework for discussion, at least.

Dan

From fkappe@fiicmds04.tu-graz.ac.at  Thu Jun 25 14:26:08 1992
Return-Path: <fkappe@fiicmds04.tu-graz.ac.at>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00925; Thu, 25 Jun 92 14:26:08 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25968; Thu, 25 Jun 92 14:25:47 +0200
Received: by iicm.tu-graz.ac.at (5.57/Ultrix3.0-C)
	id AA25321; Thu, 25 Jun 92 14:25:18 +0200
Date: Thu, 25 Jun 92 14:25:18 +0200
From: fkappe@fiicmds04.tu-graz.ac.at (Frank Kappe)
Message-Id: <9206251225.AA25321@iicm.tu-graz.ac.at>
To: www-talk@nxoc01.cern.ch
Subject: HTML DTD and related problems (rather long)

>>>>> On Wed, 24 Jun 92 12:15:52 CDT, Dan Connolly <connolly@pixel.convex.com> said:

>>But then this raises another issue: does WWW allow anchors within
>>anchors?  I think not - in which case I could not use WWW anchors to
>>both label a paragraph (e.g. for attaching an annotation) and a word
>>within it (e.g. for definition).  This worries me quite a bit.  Nor
>>can I attach multiple links to the same point (e.g. definitions of a
>>word in multiple languages).
>
> This and other related questions (can I have lists within lists?)
> are precisely the reason for using a well-defined structural markup
> language governed by SGML processing rules.

> Right now we have no DTD for HTML, and the only answers lie in
> the browser source code. The documentation "in the web" is too
> vague. But I hardly think we want the browser source code to
> be the definition of HTML.

The situation with anchors in SGML is even worse. In addition to the cases where
you want to have anchors within lists, list items, headlines etc. and lists,
list items, headlines etc. within anchors, you also have anchors within anchors.
Actually, anchors within anchors look like this:

<BEGIN ANCHOR A>
!
!
!   <BEGIN ANCHOR B>
!   !
!   !
!   !
!   <END ANCHOR B>
!
!
<END ANCHOR A>

This case is trivial (you just allow anchors within anchors in the DTD).
However, consider the case where you want to have a destination anchor marking,
say, paragraphs 1 and 2, and another one marking 2 and 3:

<BEGIN ANCHOR A>
!
! para 1
!
!   <BEGIN ANCHOR B>
!                  !
! para 2           !
!                  !
<END ANCHOR A>     !
                   !
  para 3           !
                   !
    <END ANCHOR B>-+

This situation cannot be implemented with SGML Tags like <A ....>text</A>, as
it is proposed in HTML. Also, I doubt that it is possible to construct an anchor
spanning, e.g., a few items of list A and a few items of list B, because the
SGML parser would implicitly close openened anchor tags when reaching </list>:

<list A>
  <item>...
<A .....>
  <item>...
  <item>...
</list>

<list B>
  <item>...
</A>
  <item>...
  <item>...
</list>

The reason why it is possible to construct such things using the NeXT-based WWW
viewer/editor is simply that HTML is not SGML. Therefore it is impossible to
specify a DTD for HTML (as Dan has already pointed out).

In our Hyper-G system that uses HTF, a SGML-based format similar to HTML, we
overcome the anchor-nesting problem by specifying TWO tags for anchors: an
anchor-start (<AS>) tag and an anchor-end (<AE>) tag with an additional ID
attribute. So, the examples are coded like this:

<AS ID="A">
para 1
<AS ID="B">
para 2
<AE ID="A">
para 3
<AE ID="B">

and

<list A>
  <item>...
<AS ID="C">
  <item>...
  <item>...
</list>

<list B>
  <item>...
<AE ID="C">
  <item>...
  <item>...
</list>

which is perfectly legal in our DTD. I don't want to waste more internet
bandwidth sending the DTD, but you may get it by anonymous ftp from
iicm.tu-graz.ac.at in file pub/Hyper-G/sgml/hyper-g.dtd. There is also a
corresponding style sheet as well as styles used to convert HTF to HTML and
LateX with a stand-alone SGML parser. 

Let me say one final word about anchors: In my (and others) opinion, it is
generally not a good idea to store anchors (or even links) in documents. This
requires a modification of the document whenever an anchor is
inserted/modified/deleted and is problematic in multi-user environments with
private links, etc. Rather, the links should be stored and manipulated in a
seperate link database (like in Intermedia and also in Hyper-G). This also
allows for backwards-tracing of links, which is essential for maintaining the
integrity of the hypertext and providing a graphical overview of the hypertext
to the users.

However, in certain circumstances (like document modification) it is convenient
to supply the anchor information with the document. That is the reason why it's
in the DTD.

-----------------------------------------------------------------------------
Frank M. Kappe                                      fkappe@iicm.tu-graz.ac.at
Institute for Information Processing                     Fax: ++43 316 824394
Technical University Graz, Austria           "Sorry, no kangaroos in Austria"
-----------------------------------------------------------------------------

From sean@coombs.anu.edu.au  Thu Jun 25 17:27:39 1992
Return-Path: <sean@coombs.anu.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01526; Thu, 25 Jun 92 17:27:39 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10252; Thu, 25 Jun 92 17:27:22 +0200
Received: by coombs.anu.edu.au (5.61/1.0)
	id AA13539; Fri, 26 Jun 92 01:27:14 +1000
Date: Fri, 26 Jun 92 01:27:14 +1000
From: sean@coombs.anu.edu.au (Sean Sebastian Batt)
Message-Id: <9206251527.AA13539@coombs.anu.edu.au>
To: www-talk@nxoc01.cern.ch
Subject: HTML -> Postscript? Text?

G'Day,

its late at night and my eyesight is fading so I'm simply not up to
parsing the installation instructions for variuos parts of WWW written
as they are in HTML.

Is there an HTML -> Postscript processor anywhere? HTML -> troff? Text
even?

Thanks in advance...

Sean
--
------------- Sean Sebastian Batt - sean@coombs.anu.edu.au --------
-------- Coombs Computing Section - Telephone: +61 6 249 3296 -----
-- Australian National University - GPO Box 4 Canberra City 2601 --
-------------------------------------------------------------------

From timbl  Thu Jun 25 22:50:05 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02447; Thu, 25 Jun 92 22:50:05 MET DST
Date: Thu, 25 Jun 92 22:50:05 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206252050.AA02447@ nxoc01.cern.ch >
To: davis@willow.tc.cornell.edu
Subject: Re: Links that refer to a range of text, not just a point.
Cc: www-talk@nxoc01.cern.ch


On types of links: Link types can descibe

-- hints at presentation (Footnote, in-line, embed, automatic or
   on demand, print this if you print me, don't search this if
   you search me, etc etc)

-- semantics of the documents (a is a previous version of b, etc)

-- semantics of THAT DESCIBED by the document, eg
   "The W3 software" is a part of "the W3 project" where the
   'is part of' in fact applies to the unquoted things, not the
   documents. There is something on link types on the web in

   http://info.cern.ch/hypertext/WWW/DesignIssues/LinkTypes.html


On areas and points:  No, the WWW links are not (in general) points
they are areas. In the broad sense they can be any object within
the document, as identified by the anchor ID. In the specific
case of HTML, they are areas which have a beginning and an end.
In the case of the actual W3 software, noone can handle
overlapping anchors because the text object underneath isn't powerful
enough.  There is also a problem showing overlapping source anchors
(buttons) to the user. But in principle, there is no reason'
why one shouldn't have overlapping anchors, or at least
nested ones.

But not now.

Tim

From timbl  Fri Jun 26 15:35:05 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04694; Fri, 26 Jun 92 15:35:05 MET DST
Date: Fri, 26 Jun 92 15:35:05 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206261335.AA04694@ nxoc01.cern.ch >
To: connolly@pixel.convex.com, timbl@nxoc01.cern.ch
Subject: Re: HTML DTD
Cc: www-talk@nxoc01.cern.ch

Dan, you say

<<
I suppose you could come up with a DTD that describes something
close to the current HTML, but I'm not sure of the value of it.
HTML allows tags to be pretty much sprinkled wherever you feel
like putting them. Any DTD that allows that much leeway just
looks like this:

        <!ENTITY % alltags "TITLE|H1|H2|H3|MENU|OL|UL">
        <!ELEMENT %alltags (%alltags)*>

i.e. every element is just a repeatable or-group of all the elements.
Then the SGML parser can't do any minimization cuz nothing's required. >>

Yes, current SGML currently is just a linear sequence of
elements. (Sorry, current HTML -- I'm typing this in serially
and can't edit!).  There is a reason for this:  it is very
convenient for HTML to map onto a series of styles -- for two
reasons.

Firstly, a lot of rich text objects can hold styles but can't hold
structure.  You can deduce structure from the styles -- like
Word deucing outlining from Heading styles, and WWW deducing
a list <UL> from a lot of <LI> paragraphs. But you can't go
very far.  If you want to make a HT editor out of such a
text object, you ahve to regenerate the elements from the
styles.

Secondly, it may be that the wysiwyg editors have a linear style
structure because that is intuitive to people. I don't know
a lot of people who use author/editor (which maintains
structure). Maybe real people actually think in terms of styles
and fix the document to look right, then they are happy to have the
structure deduced.

So if we went for a nestable HTML which would be cleaner for
those who apreciate recursion, we would have to have a hypertext
editor which made the structure visible.  I don't have experience
enough to know whether real information providers (group secretaries,
for example) would be into generating nested elements -- maybe
the styles are useful to keep as the current `user interface metaphor'
of word processors.

(It also makes making the editor easier!)

Or maybe we should have two levels of DTD -- one basically linear
and mandatory (and precompiled for fast access) and one more
sophisticated for larger documents.

Of course, when you are writing hypertext the large documents are
normally broken down into small bits to make traveing them quick.
So whereas each hypertext node may contain only H1 and H2 headings,
when a book is generated a la the_www_book.ps you get 5 levels
of heading from the whole tree.

So that is why the HTML strcuture is so simple. I am open to
a more sophisticated alternative.

Tim
____________________________
From connolly@pixel.convex.com Fri Jun 26 00:00:33 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02722; Fri, 26 Jun 92 00:00:27 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25540; Fri, 26 Jun 92 00:00:11 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA10700; Thu, 25 Jun 92 17:00:01 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA05209; Thu, 25 Jun 92 17:00:00 -0500
Message-Id: <9206252200.AA05209@pixel.convex.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Subject: Re: HTML DTD 
In-Reply-To: Your message of "Thu, 25 Jun 92 23:07:25 +0700."
             <9206252107.AA02534@ nxoc01.cern.ch > 
Date: Thu, 25 Jun 92 16:59:59 CDT
From: Dan Connolly <connolly@pixel.convex.com>
Status: R


>thanks for that contribution.   Not being as hot on SGML
>as I ought to be, I don't see why the HREF has to refer to
>and entity declared separately rather than directly having
>a string argument.
>
That's actually left over from when I was trying to point
HREF attributes to MIME attachments. It's not really
necessary to move the UDIs into entities as long as you're
careful that the UDI syntax is a subset of the SGML
attribute literal syntax.

Beware, for example, that an
SGML parser will expand entity references in an attribute literal
to produce the CDATA for the attribute value. So that
<A HREF="A&P"> might be OK for the linemode browser,
but an SGML parser will try to resolve &P.

Also, SGML attribute values have a maximum length specified
in the SGML declaration. The default value is 960 or something
around there.

>The title is in fact optional currently, by the way ...
>we could keep it so though it "ought" always to have one.
>
>I'd like a DTD which as closely reflects the current HTML as
>possible.

I suppose you could come up with a DTD that describes something
close to the current HTML, but I'm not sure of the value of it.
HTML allows tags to be pretty much sprinkled wherever you feel
like putting them. Any DTD that allows that much leeway just
looks like this:

	<!ENTITY % alltags "TITLE|H1|H2|H3|MENU|OL|UL">
	<!ELEMENT %alltags (%alltags)*>

i.e. every element is just a repeatable or-group of all the elements.
Then the SGML parser can't do any minimization cuz nothing's required.

> Then, if we change HTML to HTML2, I would
>change it in a number of ways, in particular to include
>separate header and body parts.  I have come across the
>"Davenport" group of publishers who are defineing DTDs for
>technical documentation.  They include Steve Newcombe who
>is the HyTime guy (or one of the two I should say).
>I would like to get some input from them.
>

Certainly we should keep tabs on things like the Davenport
group and HyTime.

But my immediate concern is these little sytactic differences
that render HTML documents worthless to an SGML parser. The
current HTML and UDI syntax make a good proof of concept, but
we need to move toward formal definitions so that we can
have confidence that correct implementations will interoperate.

More later...

Dan


From timbl  Fri Jun 26 20:35:20 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00771; Fri, 26 Jun 92 20:35:20 MET DST
Date: Fri, 26 Jun 92 20:35:20 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206261835.AA00771@ nxoc01.cern.ch >
To: sean@coombs.anu.edu.au, www-talk@nxoc01.cern.ch
Subject: Re: HTML -> Postscript? Text?

Sean,

You say, "its late at night and my eyesight is fading so I'm simply not up to
parsing the installation instructions for variuos parts of WWW written
as they are in HTML".

The basic installation instructions are also in the line mode
browser tar file in plain text.  That will allow you to get the
line mode browser (www) up.  9You can probably get a binary anyway).
Then you can use that to change HTML into text 

	www -n -p -na xxxx.html

will give you a non-interactive unpaged link-free formatted
text output. What more can you want? 

If there is something crucial missing from the .txtx files
shipped, then tell www-bug@info.cern.ch.  If you want more
information about other bits without getting www up, then
just telnet to info.cern.ch and read it on line.


Actually, we plan to make a combined user manual availabl
in postscript and TeX in the same way as the_www_book.ps.Z
dumped from the hypertext.  Later.


Tim

From timbl@zippy.lcs.mit.edu  Fri Jun 26 22:03:28 1992
Return-Path: <timbl@zippy.lcs.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01144; Fri, 26 Jun 92 22:03:28 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AB01707; Fri, 26 Jun 92 22:02:46 +0200
Received: by zippy.lcs.mit.edu 
	id AA29919; Fri, 26 Jun 92 16:04:23 -0400
Date: Fri, 26 Jun 92 16:04:23 -0400
From: timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Message-Id: <9206262004.AA29919@zippy.lcs.mit.edu>
To: ietf-udi@merit.edu, ietf@isi.edu, nir@nxoc01.cern.ch,
        www-talk@nxoc01.cern.ch
Subject: IETF BOF on Universal Document Identifiers
Cc: erik.huizer@surfnet.nl, mdavies@nri.reston.va.us



		Universal Document Identifiers UDI BOF

        Time:                  Monday 13th July 1992 1:30 pm

	Chair:                 Tim Berners-Lee

	Background document:   file://info.cern.ch/pub/www/doc/udi2.ps

Aim:  To define some clear decisions to be made by a small WG to be
formed.    A skeleton charter for such a working group is appended,
and may be discussed at the BOF.  The overall aim is to standardize
on one unifying printable representation for names and addresses of
retrievable objects in existing and future name and address spaces.

Those who have not been following the discussion are asked to read the
background document first.  An archive of some of the discussion is
available as file://info.cern.ch/pub/www/doc/udi/discussion.mbox .
The BOF will avoid philosophy and a discussion of the differences
between names and addresses, or the relative merits of different naming
schemes, or the combination of names in different spaces recommended to
refer to an object.  If new schemes are required, a separate effort
may be forked off to create them.
_________________________________________________________________

Provisional Charter:

	To define a printable string syntax to the allow

1.	The expression of the address on the network of any
	accesable object using existing information retrieval protocols;

2.	The expression of the name of any object held in
	a directory system or unique naming space on the network;

3.	The distinction to be made easily in the syntax
	between such protocols and directories and name spaces;

4.	New protocols, directories and naming schemes to be included as
	and when they are developed.


The aim of the working group is to further the exchange of information
between people and applications using the network by allowing an
unambiguous reference to be cited to accessible units of information.

The working group will build on experience with existing information retrieval
protocols and will not invent new protocols or name spaces. The working
group will note the properties of established name and address spaces.

Deliverable:

A	Document describing:
		Overall syntax, character sets and limitations
		Formats for addresses of:-
		   FTP files and directories
		   WAIS documents and databases
		   HTTP objects
		   NNTP newsgroups and articles
		   Gopher items.

	Standards track.

B	Appendices to document A for x500 distinguished name spaces

C	Appendices to document A for selected established
	unique identifier name spaces. (possible separate parallel
	working group).


Milestones:

	Define at BOF.


From serrano@osage.csc.ti.com  Mon Jun 29 23:19:44 1992
Return-Path: <serrano@osage.csc.ti.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08231; Mon, 29 Jun 92 23:19:44 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09219; Mon, 29 Jun 92 23:19:09 +0200
Received: from tilde.csc.ti.com ([128.247.160.56]) by ti.com with SMTP 
	(5.59/LAI-3.2) id AA16612; Mon, 29 Jun 92 16:09:38 CDT
Received: from osage.csc.ti.com (osage) by tilde.csc.ti.com id AA24636; Mon, 29 Jun 1992 16:07:53 -0500
Received: from localhost by osage.csc.ti.com (4.1/SMI-4.1)
	id AA28545; Mon, 29 Jun 92 16:07:51 CDT
Message-Id: <9206292107.AA28545@osage.csc.ti.com>
To: wei@xcf.berkeley.edu
Cc: www-talk@nxoc01.cern.ch
Date: Mon, 29 Jun 92 16:07:51 -0500
From: serrano@osage.csc.ti.com


Hi, 

1) I was wondering where I can get an editor to create hypertext
documents for the Viola WWW browser (html source editor)?

2) Where can I find "TheProject.html"? I checked under
/info.cern.ch/hypertext/WWW but there is no such path.

ANY HELP will be greatly appreciated.

Yonson
serrano@csc.ti.com
=====================================================

           ,_             ___@            __@
      ,______\@          _`__\-'         / /\__
  ^^^^,__'    \^^^      (')\/(`)       ___/\
              '                            /_
======================================================

From timbl  Tue Jun 30 00:08:31 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08352; Tue, 30 Jun 92 00:08:31 MET DST
Date: Tue, 30 Jun 92 00:08:31 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9206292208.AA08352@ nxoc01.cern.ch >
To: serrano@osage.csc.ti.com, wei@xcf.berkeley.edu
Subject: Hypertext editor
Cc: www-talk@nxoc01.cern.ch


Well, this is one of theings we're all hoping is high on Pei's
agenda -- to make Viola an editor too.

Right now, all there is is a NeXTStep editor which was frozen last
summer so is not all up-to-date and bug-free but exists and
we use it but you need a NeXT. Available by aftp from
info.cern.ch in /pub/www/src

You ask, "Where can I find "TheProject.html"? I checked under
/info.cern.ch/hypertext/WWW but there is no such path."

I guess you tried the FTP server. Bad news: the ftp server and the
http server serve different things on that machine.
If you want the source, assuming you have the www line mode
browser, just say

 www -source  http://info.cern.ch/hypertext/WWW/TheProject.html > junk.html

This will give you an idea of what HTML looks like. Read the document
about what the tags mean, and then edit it to make your own.
For a limited quantity, a text editor on hypertext isn't too bad.
I'm away from home and so using emacs to make a hypertext trip report.
I make it with emacs then check it with  viola. A temporary solution
I know, till we get editors available.

Tim

From wei@xcf.berkeley.edu  Tue Jun 30 11:25:23 1992
Return-Path: <wei@xcf.berkeley.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09837; Tue, 30 Jun 92 11:25:23 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01341; Tue, 30 Jun 92 11:24:46 +0200
Received: by xcf.Berkeley.EDU (5.65/XCF-1.34)
	id AA25967; Tue, 30 Jun 92 02:20:10 -0700
Date: Tue, 30 Jun 92 02:20:10 -0700
From: wei@xcf.berkeley.edu (Pei Y. Wei)
Message-Id: <9206300920.AA25967@xcf.Berkeley.EDU>
To: serrano@osage.csc.ti.com
Subject: Re:  Hypertext editor
Cc: timbl@nxoc01.cern.ch, wei@xcf.berkeley.edu, www-talk@nxoc01.cern.ch

Yup... an editor is in the works. The very current state of the viola-based
browser uses output from a standard SGML parser (sgmls), and the displaying
page is composed of multiple structured textfield/bitmap/whatever objects,
instead of the unstructured single textfield as in the currently released 
version. 

Basically I'm taking a crack at a rough 1-1 mapping of SGML document 
structure to viola objects. Allow editing in the objects (ie textfield, 
bitmap), and convert back to SGML. It'll probably be highly structured 
s.t. some people might find needing some getting-used-to. But as the 
document source is SGML, there should eventually be many alternative 
editors. I can't say when this version will be releasable, as there are 
about a zillion of things to do to get there.

In the meanwhile, however, I could release a version (HTML based) that 
displays bitmaps (XBM and XPM). I hesitate releasing that version because
it has some fundamental limitations (hence the remodeling), b/c XBM and 
XPM are very X-ish, and, and b/c it kinda affects WWW's relatively uniformed
interoperability (linemode browser may then have to say "a picture is here,
but..."). I don't know. Maybe it's better to freeze HTML now?


-Pei
			"All I know-- we've got to change what's happening
			 Something good could happen"	The B-52's


From jfg@dxcern.cern.ch  Tue Jun 30 11:30:38 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09853; Tue, 30 Jun 92 11:30:38 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01640; Tue, 30 Jun 92 11:29:53 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA11026; Tue, 30 Jun 92 11:29:57 +0200
Date: Tue, 30 Jun 92 11:29:57 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206300929.AA11026@dxcern.cern.ch>
To: serrano@osage.csc.ti.com
Cc: www-talk@nxoc01.cern.ch
Subject: your WWW questions
References: <9206292107.AA28545@osage.csc.ti.com>

	Hello !

  Viola doesn't have an integrated editor yet. All you can do for now
is edit the html files separately and then display them with Viola.
Once you understand the few tags and the Doc IDs, it isn't hard to do.
Details are available in the hypertext documentation starting from the
"TheProject" page that you were looking for...

  ..."TheProject.html" is the hypertext page that you obtain when
clicking on the "?" icon in Viola, and then on the first link named
"World-Wide Web". If it doesn't work, it probably means that your
Internet connection has a problem, perhaps a bad configuration of the
name server. Try typing this in the "Doc ID" field at the bottom of Viola:

	http://128.141.201.74/hypertext/WWW/TheProject.html

and hit Return.

  Cheers !

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From jfg@dxcern.cern.ch  Tue Jun 30 11:58:23 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09909; Tue, 30 Jun 92 11:58:23 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04144; Tue, 30 Jun 92 11:57:48 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA19493; Tue, 30 Jun 92 11:57:55 +0200
Date: Tue, 30 Jun 92 11:57:55 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9206300957.AA19493@dxcern.cern.ch>
To: davis@willow.tc.cornell.edu (Jim Davis)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Raisch's Attention link
References: <9206241602.AA13181@willow.tc.cornell.edu>

> As for charging, fairness requires that the link not be activated
> until I have seen a warning (otherwise I might get charged a zillion
> dollars to read the document - just like 900 phone numbers in the
> USA).  So this will add complexity to the client.

  This is of course very important! But just adding an alert in the
client before spending money is not a complex change. It might just be
annoying to the user (had you rather be annoyed or spend $$$ ?) The
user could also want to authorize access without warning to trusted
data sources, e.g. a pay-by-time database that he uses frequently
(with the stress of the ticking $ clock in the corner...)

> Also, attention links are not sufficient for a charging.  They
> support a model where I am charged once per read, no matter how much
> of the document I read.  But it seems likely that there might be need
> for other charging models.

  For a discussion of the many problems of a read-based charging scheme
(which was to be implemented in Xanadu as an answer to the Copyright
issues), you may want to read a paper presented at the Hypertext'91
conference in San Antonio, by Pamela Samuelson and Robert Glushko,
"Intellectual Property Rights for Digital Library and Hypertext
Publishing Systems: an Analysis of Xanadu" (unfortunately not
available online to my knowledge...)

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From peterson@choctaw.csc.ti.com  Tue Jun 30 13:50:53 1992
Return-Path: <peterson@choctaw.csc.ti.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10109; Tue, 30 Jun 92 13:50:53 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11099; Tue, 30 Jun 92 13:50:01 +0200
Received: from tilde.csc.ti.com ([128.247.160.56]) by ti.com with SMTP 
	(5.59/LAI-3.2) id AA25959; Tue, 30 Jun 92 06:50:33 CDT
Received: from choctaw.csc.ti.com (choctaw) by tilde.csc.ti.com id AA00135; Tue, 30 Jun 1992 06:48:47 -0500
Received: by choctaw.csc.ti.com (4.1/SMI-4.1)
	id AA10506; Tue, 30 Jun 92 06:48:46 CDT
From: peterson@choctaw.csc.ti.com (Bob Peterson)
Message-Id: <9206301148.AA10506@choctaw.csc.ti.com>
Subject: Re: your WWW questions
To: jfg@dxcern.cern.ch (Jean Francois Groff)
Date: Tue, 30 Jun 92 6:48:45 CDT
Cc: serrano@osage.csc.ti.com, www-talk@nxoc01.cern.ch
In-Reply-To: <9206300929.AA11026@dxcern.cern.ch>; from "Jean Francois Groff" at Jun 30, 92 11:29 am
Reply-To: peterson@csc.csc.ti.com
Mime-Version: 1.0
X-Mailer: ELM [version 2.3 PL11]

You said:
> 
> 	Hello !
> 	...
>   ..."TheProject.html" is the hypertext page that you obtain when
> clicking on the "?" icon in Viola, and then on the first link named
> "World-Wide Web". If it doesn't work, it probably means that your
> Internet connection has a problem, perhaps a bad configuration of the
> name server. Try typing this in the "Doc ID" field at the bottom of Viola:
> 
> 	http://128.141.201.74/hypertext/WWW/TheProject.html
> 
> and hit Return.

  The problem is caused, as I understand it, by the (single) gateway
between the company's internal networks and the Internet.  That gateway
allows _NO_ TCP/IP connections between an internal machine and an
external machine.  Also, the gateway machine offers no compiler and, in
general, refuses to allow ordinary users to install arbitrary code,
e.g., www.

>   Cheers !
> 
> --
>   Jean-Francois Groff (jfg@info.cern.ch)

    Bob

-- 
Bob Peterson             Work: peterson@csc.ti.com              Expressway Site
Texas Instruments        Home: peterson@zgnews.lonestar.org     North Building
P.O. Box 655474, MS238   TIMSG: RWP  Landline: +1 214 995 6080  Aisle A4
Dallas, Tx USA 75265                 FAX line: +1 214 995 0304  2-88V97

From jfg@dxcern.cern.ch  Wed Jul  1 20:12:54 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14289; Wed, 1 Jul 92 20:12:54 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00575; Wed, 1 Jul 92 20:12:07 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA10061; Wed, 1 Jul 92 20:12:16 +0200
Date: Wed, 1 Jul 92 20:12:16 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207011812.AA10061@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Testing. Please ignore.

This message boldly goes where no VM user never went...

From jfg@dxcern.cern.ch  Wed Jul  1 20:29:19 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14357; Wed, 1 Jul 92 20:29:19 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01127; Wed, 1 Jul 92 20:28:29 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA14104; Wed, 1 Jul 92 20:28:38 +0200
Date: Wed, 1 Jul 92 20:28:38 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207011828.AA14104@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Testing again (Sorry, this may not be the last one...)

This message boldly goes where no VM user EVER went...

From S.Kille@isode.com  Sat Jul  4 16:44:02 1992
Return-Path: <S.Kille@isode.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04041; Sat, 4 Jul 92 16:44:02 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20899; Sat, 4 Jul 92 16:43:37 +0200
Received: from glengoyne.isode.com by haig.cs.ucl.ac.uk with Internet SMTP 
          id <g.02151-0@haig.cs.ucl.ac.uk>; Sat, 4 Jul 1992 15:43:01 +0100
Received: from localhost.cs.ucl.ac.uk by glengoyne.isode.com with SMTP (PP) 
          id <02364-0@glengoyne.isode.com>; Sat, 4 Jul 1992 15:42:41 +0100
To: timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Cc: ietf-udi@merit.edu, ietf@isi.edu, nir@nxoc01.cern.ch,
        www-talk@nxoc01.cern.ch, erik.huizer@surfnet.nl,
        mdavies@nri.reston.va.us
Subject: Re: IETF BOF on Universal Document Identifiers
Phone: +44-71-223-4062
In-Reply-To: Your message of Fri, 26 Jun 92 16:04:23 -0400. <9206262004.AA29919@zippy.lcs.mit.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Sat, 04 Jul 92 15:42:10 +0100
Message-Id: <2362.710260930@isode.com>
From: Steve Hardcastle-Kille <S.Kille@isode.com>

Tim,

I know that this is late in the day, but could I request that you reschedule
your meeting?   

Let me suggest Tuesday: 4-6

The reason is that you are clashing with the OSI-DS group.  I think
that X.500 has a massive role to play in this.   It has also been a
definite part of the disucssions, which I have not ahd time to be
active in.   This timing will exclude me, and probably most of the
other interested X.500 experts.  

Could I request that you consider this seriously, even at this late
stage


Steve

From S.Kille@isode.com  Sun Jul  5 17:41:21 1992
Return-Path: <S.Kille@isode.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00294; Sun, 5 Jul 92 17:41:21 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09752; Sun, 5 Jul 92 11:06:52 +0200
Received: from glengoyne.isode.com by haig.cs.ucl.ac.uk with Internet SMTP 
          id <g.01343-0@haig.cs.ucl.ac.uk>; Sun, 5 Jul 1992 10:06:30 +0100
Received: from localhost by glengoyne.isode.com with SMTP (PP) 
          id <00912-0@glengoyne.isode.com>; Sun, 5 Jul 1992 07:54:07 +0100
To: peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Cc: timbl@zippy.lcs.mit.edu (Tim Berners-Lee), ietf-udi@merit.edu,
        ietf@isi.edu, nir@nxoc01.cern.ch, www-talk@nxoc01.cern.ch,
        erik.huizer@surfnet.nl, mdavies@nri.reston.va.us
Subject: Re: IETF BOF on Universal Document Identifiers
Phone: +44-71-223-4062
In-Reply-To: Your message of Sat, 04 Jul 92 18:27:13 +0000. <9207041827.AA22331@expresso.cc.mcgill.ca>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Sun, 05 Jul 92 07:54:01 +0100
Message-Id: <910.710319241@isode.com>
From: Steve Hardcastle-Kille <S.Kille@isode.com>

I did not notice that Tim was in transit.    If there is no immediate
objection to a reschedule, how about booking a second slot for the BOF
(e.g., the Tuesday 4-6 I suggested).   This will give Tim the option

1) To go ahead and ignore the second slot

2) To cancell the meeting and switch

3) To use both slots (eeek)

By deciding a slot now, it means that the mechanics can be sorted
prior to the meeting.   Megan, is this slot available?  (If not, are
there many other options?)


Steve


From peterd@expresso.cc.mcgill.ca  Sun Jul  5 17:45:08 1992
Return-Path: <peterd@expresso.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00448; Sun, 5 Jul 92 17:45:08 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00943; Sat, 4 Jul 92 20:33:08 +0200
Received: from expresso.CC.McGill.CA by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA02201  (mail destined for nir@nxoc01.cern.ch) on Sat, 4 Jul 92 14:27:41 -0400
Received: by expresso.cc.mcgill.ca (NeXT-1.0 (From Sendmail 5.52)/NeXT-1.0)
	id AA22331; Sat, 4 Jul 92 14:27:13 EDT
Message-Id: <9207041827.AA22331@expresso.cc.mcgill.ca>
In-Reply-To: Steve Hardcastle-Kille's message as of Jul  4, 15:42
From: peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Date: Sat, 4 Jul 92 18:27:13 GMT-0:02
In-Reply-To: Steve Hardcastle-Kille's message as of Jul  4, 15:42
X-Mailer: Mail User's Shell (6.5.6 6/30/89)
To: Steve Hardcastle-Kille <S.Kille@isode.com>,
        timbl@zippy.lcs.mit.edu (Tim Berners-Lee)
Subject: Re: IETF BOF on Universal Document Identifiers
Cc: ietf-udi@merit.edu, ietf@isi.edu, nir@nxoc01.cern.ch,
        www-talk@nxoc01.cern.ch, erik.huizer@surfnet.nl,
        mdavies@nri.reston.va.us


Hmmm, I see this is going back to a lot of people.
apologies in advance for all of the duplicates that this
implies...

[ Steve Hardcastle-Kille writes: ]
> 
> Tim,
> 
> I know that this is late in the day, but could I request that you reschedule
> your meeting?   
> 
> Let me suggest Tuesday: 4-6


For those that missed the note that Karen Sollins sent
out, Tim Berners-Lee has left MIT and is "in transit" to
Boston so probably wont be able to vote on this request
before the start of the IETF conference. Since he was the
one who called the meeting, I suggest that we wait and try
to work out a suitable time and room on day 1 (or day zero
if enough people are around). Everyone watch the notice
board!


> 
> The reason is that you are clashing with the OSI-DS group.  I think
> that X.500 has a massive role to play in this.   It has also been a
> definite part of the disucssions, which I have not ahd time to be
> active in.   This timing will exclude me, and probably most of the
> other interested X.500 experts.  
> 
> Could I request that you consider this seriously, even at this late
> stage

I don't see why anyone would object, but I guess it's Tim's
call.


				- peterd

-- 
----------------------------------------------------------------------
I'm desperately seeking the words to 'Till h\"ogar, Swenson!'
If you have a digitized version, _please_ send me a copy...
                                                -peterd@cc.mcgill.ca
----------------------------------------------------------------------

From peterd@expresso.cc.mcgill.ca  Sun Jul  5 19:10:28 1992
Return-Path: <peterd@expresso.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00741; Sun, 5 Jul 92 19:10:28 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19513; Sun, 5 Jul 92 19:09:36 +0200
Received: from expresso.CC.McGill.CA by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA11192  (mail destined for nir@nxoc01.cern.ch) on Sun, 5 Jul 92 13:04:15 -0400
Received: by expresso.cc.mcgill.ca (NeXT-1.0 (From Sendmail 5.52)/NeXT-1.0)
	id AA24719; Sun, 5 Jul 92 13:03:46 EDT
Message-Id: <9207051703.AA24719@expresso.cc.mcgill.ca>
In-Reply-To: Steve Hardcastle-Kille's message as of Jul  5,  7:54
From: peterd@expresso.cc.mcgill.ca (Peter Deutsch)
Date: Sun, 5 Jul 92 17:03:45 GMT-0:02
In-Reply-To: Steve Hardcastle-Kille's message as of Jul  5,  7:54
X-Mailer: Mail User's Shell (6.5.6 6/30/89)
To: Steve Hardcastle-Kille <S.Kille@isode.com>
Subject: Re: IETF BOF on Universal Document Identifiers
Cc: timbl@zippy.lcs.mit.edu (Tim Berners-Lee), ietf-udi@merit.edu,
        ietf@isi.edu, nir@nxoc01.cern.ch, www-talk@nxoc01.cern.ch,
        erik.huizer@surfnet.nl, mdavies@nri.reston.va.us

[ Steve Hardcastle-Kille writes: ]
> 
> I did not notice that Tim was in transit.    If there is no immediate
> objection to a reschedule, how about booking a second slot for the BOF
> (e.g., the Tuesday 4-6 I suggested).   This will give Tim the option

I hadn't looked closely at the slot you're suggesting, but
now I've actually checked out the schedule I notice that
it would conflict with the second UserGlos session. As
many of the participants for the NIR session are User
Services people, this seems unwise. I don't see anything
scheduled for Thursday night after the 6pm tech
presentations. Any reason why we can't book a tentative
slot then? It seems that all of the other potential slots
have something of interest (at least to me... :-)

> 1) To go ahead and ignore the second slot
> 
> 2) To cancell the meeting and switch
> 
> 3) To use both slots (eeek)

Actually, judging from the fervor we found at the various
related sessions last time, I bet we _could_ use them
both, but since the objective is to allow everyone to
participate I think finding a new slot is the best we can
hope for. Going for Thursday night means we can go for a
while, i is nothing after except the Bar BOF. :-)

> By deciding a slot now, it means that the mechanics can be sorted
> prior to the meeting.   Megan, is this slot available?  (If not, are
> there many other options?)

I agree that we should reserve something now, and
tentatively suggest Thursday night after the 4-6pm
technical sessions. Obviously people have to eat, so how
about 7pm? Megan? Steve? Others?

				- peterd

-- 
----------------------------------------------------------------------
"It never ceases to amaze me how otherwise decent people
 are willing to pass on these malicious stories that have
 absolutely no validity."  - Ann Landers (writing about urban folklore)
----------------------------------------------------------------------

From wathu@lanka.ccit.arizona.edu  Mon Jul  6 23:43:21 1992
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10965; Mon, 6 Jul 92 23:43:21 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09779; Mon, 6 Jul 92 23:42:49 +0200
Return-Path: wathu@lanka.ccit.arizona.edu
Received: from Lanka.CCIT.Arizona.EDU by Arizona.edu (PMDF #12663) id
 <01GM28O4S39SALD7GU@Arizona.edu>; Mon, 6 Jul 1992 14:42 MST
Received: by lanka.ccit.arizona.edu; Mon, 6 Jul 92 14:43:02 MST
Date: Mon, 6 Jul 92 14:43:02 MST
From: wathu@lanka.ccit.arizona.edu (Wije Wathugala)
Subject: vms reader
To: www-talk@nxoc01.cern.ch
Cc: wathu@arizona.edu
Message-Id: <9207062143.AA10638@lanka.ccit.arizona.edu>
X-Envelope-To: www-talk@info.cern.ch

Hi

I noticed that the vms reader available in info.cern.ch
does not understand <comment> </comment> tags.

Wije

From timbl  Tue Jul  7 01:05:44 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11233; Tue, 7 Jul 92 01:05:44 MET DST
Date: Tue, 7 Jul 92 01:05:44 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207062305.AA11233@ nxoc01.cern.ch >
To: S.Kille@isode.com, peterd@expresso.cc.mcgill.ca
Subject: Re: IETF BOF on Universal Document Identifiers
Cc: erik.huizer@surfnet.nl, ietf-udi@merit.edu, ietf@isi.edu,
        mdavies@nri.reston.va.us, nir@nxoc01.cern.ch, timbl@zippy.lcs.mit.edu,
        www-talk@nxoc01.cern.ch

I'm sorry that I can only be at the IETF Monday, and Tuesday morning.
I'd like to start things off as soon as possible so that discussions
can then range throughout the week (alas without me).

I will be reading mail on and off until Friday am (from Fermilab).

Tim

Let's sort it out on Monday morning -- there seems to be no clear
soloution (move x500 BOF to second slot though it clashes with
the User Glass?  Actually, interest in user glass and udis may
coincide but the subject areas are not in fact much related...

Tim

From jfg@dxcern.cern.ch  Wed Jul  8 14:56:30 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16658; Wed, 8 Jul 92 14:56:30 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25610; Wed, 8 Jul 92 14:55:59 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA04938; Wed, 8 Jul 92 14:55:41 +0200
Date: Wed, 8 Jul 92 14:55:41 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207081255.AA04938@dxcern.cern.ch>
To: wathu@lanka.ccit.arizona.edu (Wije Wathugala)
Cc: wathu@arizona.edu, www-talk@nxoc01.cern.ch
Subject: Re: vms reader
References: <9207062143.AA10638@lanka.ccit.arizona.edu>

	Wije,

  Thanks for the comment. The binary there is a little older than its
Unix counterparts, and these tags had not been introduced yet. The
next version will have this fixed.

	Jean-Francois

From jfg@dxcern.cern.ch  Wed Jul  8 15:00:06 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16683; Wed, 8 Jul 92 15:00:06 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25818; Wed, 8 Jul 92 14:59:37 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA05277; Wed, 8 Jul 92 14:59:19 +0200
Date: Wed, 8 Jul 92 14:59:19 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207081259.AA05277@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: need assistance on setting up a WWW server


Forwarded From: timbl@nxoc01.cern.ch (Tim Berners-Lee)

Someone just the other day pointed out that the rules file wasn't very well
documented.  I then put in a couple of examples.

Here is the example code (its on the web, linked to the
documentation node about the rule file)

                                             Examples of HTTP daemon rule files
                              RULE FILE EXAMPLES
                                       
   A basic rule file for the http daemon might look like this:
   

map    /          /welcome.html
map    /*         /u/john/public/*
pass   /u/john/public/*
fail   *

   The first line maps the root document onto a specific document about the
   server.
   
   The second line maps all document names onto filenames in a particular
   directory.
   
   The third line allows access to all documenst in that directory.
   
   The fouth line disallows access to all other documents. (There won't be in
   any in this case because of the mapping, but its wise to put in for later).
   
Second example


map    /            /tnotes/welcome.html
map    /tnotes/*    /u/john/public/*
map    /seminars/*  /u/jane/seminars/*
pass   /u/john/public/*
pass   /u/jane/seminars/*.html
fail   *

   The first line maps the root document onto a specific document about the
   server. (See etiquette)
   
   The second line maps all document names starting with /tnote/ onto filenames
   in a particular where john maintains the technical notes. If someone else
   takes over the technical notes, we can change this. Here we are starting to
   distinguish between document names and file names. This can be carried much
   further if necessary, but one level of mapping is enough to allow for
   changes of administration of different areas.
   
   The third line separately maps the seminar information into Jane's
   directory.
   
   The third and forth line enable access to anything in John's "public"
   directory, and any .html file in Jane's "seminar" directory tree. Note here
   that the * maps to any sequence INCLUDING SLASHES so all files in any
   subdirectory of /u/jane/seminars will be enabled so long as they end in
   .html.
   
   The bottom line will pick up for example any attempt to use the server to
   access non-html files in Jane's seminar directory.

From timbl  Thu Jul  9 18:50:36 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20803; Thu, 9 Jul 92 18:50:36 MET DST
Date: Thu, 9 Jul 92 18:50:36 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207091650.AA20803@ nxoc01.cern.ch >
To: joslyn@kong.gsfc.nasa.gov
Subject: Re: HyTime in WWW?
Cc: www-talk@nxoc01.cern.ch

If there is a hytime construct which is better than what we
have then I'd be very happy to get it included in the next format.
We just need some people to work on that format formally.
Basically, anything which worries you is going to worry us just
as much!

There is a mailing list ww-announce, and another www-talk.
How to join ius on the web (under "mailing lists").
Annocuncements are (too) rare, talk is sometimes heavy,
sometimes not.

Tim
____
From joslyn@kong.gsfc.nasa.gov Thu Jul  9 16:14:32 1992
Return-Path: <joslyn@kong.gsfc.nasa.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20246; Thu, 9 Jul 92 16:14:27 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26395; Thu, 9 Jul 92 16:14:01 +0200
Received: from kong.gsfc.nasa.gov by lego.gsfc.nasa.gov (5.61/1.35)
	id AA22531; Thu, 9 Jul 92 10:13:33 -0400
Received: by kong.gsfc.nasa.gov (4.1/SMI-4.1)
	id AA02563; Thu, 9 Jul 92 10:13:30 EDT
From: joslyn@kong.gsfc.nasa.gov (Cliff Joslyn)
Message-Id: <9207091413.AA02563@kong.gsfc.nasa.gov>
Subject: Re: HyTime in WWW?
To: timbl@nxoc01.cern.ch (Tim@GIBBS.GSFC.NASA.GOV Berners-Lee)
Date: Thu, 9 Jul 92 10:13:29 EDT
In-Reply-To: <9207090441.AA19281@ nxoc01.cern.ch >; from "Tim@GIBBS.GSFC.NASA.GOV Berners-Lee" at Jul 9, 92 6:41 am
X-Mailer: ELM [version 2.3 PL11]
Status: R

> I have to admit that although I have skip-read HyTime I am not
> an expert. Charles Goldfarb suggested we write a generic HyTime
> engine, but my impression was that most of HyTime we didn't
> want (Finite coodinate systems, for example). 

Yes, us too. But my impression is that the INTENTION of HyTime is to
be able to use whichever portions are appropriate. Certainly
hypertext-only applications were envisioned. Personally, I think that
HyTime's alinks are the most elegant link structures I've seen.
They're completely generic n-ary relations.

The gain would be standard adherence for  long-run compatibility. I'd
hate to start marking our nodes up in your HTML only to find it's of
limitted compatibility with the world 10 years from now.

Thanks for the reply. I'm glad that Newcomb is involved. What's the
best way to keep informed about how W3 is proceedingd? Just
periodically reading the "What's New" node? Or do you have a separate
pamil or email list?

O----------------------------------------------------------------------------->
| Cliff Joslyn, Cybernetician at Large, 327 Spring St #2 Portland ME 04102 USA
| Systems Science, SUNY Binghamton      NASA Goddard Space Flight Center
| cjoslyn@bingsuns.cc.binghamton.edu    joslyn@kong.gsfc.nasa.gov
| ^^^^^^   !NOTE NEW EMAIL!   ^^^^^^
V All the world is biscuit shaped. . .


From emv@nigel.msen.com  Thu Jul  9 21:02:13 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21209; Thu, 9 Jul 92 21:02:13 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16604; Thu, 9 Jul 92 21:01:43 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0m63k2-0009ZdC@nigel.msen.com>; Thu, 9 Jul 92 15:01 WET DST
Message-Id: <m0m63k2-0009ZdC@nigel.msen.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: joslyn@kong.gsfc.nasa.gov, www-talk@nxoc01.cern.ch
Subject: Re: HyTime in WWW? 
In-Reply-To: Your message of Thu, 09 Jul 92 18:50:36.
             <9207091650.AA20803@ nxoc01.cern.ch > 
Date: Thu, 09 Jul 92 15:01:07 EDT
From: Edward Vielmetti <emv@msen.com>

I got a mailing today (from an SGML development firm which I will name
upon request) asking $20,000 in advance for a beta copy of their Hytime
engine.  From that bit of pricing information I gather
 - a full Hytime engine in all its glory is going to be a lot of work
   to write
 - the marketplace is not very mature

Needless to say I have other things that I'd like to spend $20K on....

--Ed

From connolly@pixel.convex.com  Tue Jul 14 20:40:47 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01449; Tue, 14 Jul 92 20:40:47 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29445; Tue, 14 Jul 92 20:40:28 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA06435; Tue, 14 Jul 92 13:39:59 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA10602; Tue, 14 Jul 92 13:39:54 -0500
Message-Id: <9207141839.AA10602@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: rethinking the HTML DTD.
Date: Tue, 14 Jul 92 13:39:53 CDT
From: Dan Connolly <connolly@pixel.convex.com>

I have been troubled by the fact that HTML documents look like SGML documents,
but technically, they are not. So I have tried to come up with a DTD that
captures the features of HTML.

I have come to the conclusion that HTML has very little structure, and that this
is by design.

I am beginning to wonder how much the needs of WWW have in common with the
features of SGML.

It seems to me that SGML is the technology of choice when you have a community
of information consumers and producers that share a common structure. e.g. the
construction industry might use SGML to exchange bill of materials, parts lists,
inventories, etc. The SGML parser would be used to verify part numbers, make
sure every widget has a corresponding gadget, etc.

The WWW project is a form of electronic publishing, however, and publishing is a
natural application of SGML. But the value of SGML is that you can verify the
structure of the text. A publisher can specify in his DTD the format
of references, bibliography entries, the placement of the abstract, etc.

The WWW project has no such editorial policies to enforce. The editorial
policies set forth in the HTML tag set are things like "you can have a title, if
you want, and we'll keep it visible for the user; you can have headings and
paragraphs and glossaries and lists and menus, and as long as you use them
in pretty much the traditional way, they'll be formatted reasonably. And
you can have anchors -- references from/to other documents."

The question that recently came into my mind is: why is the WWW project
defining such a tag set? The practical answer is that the NeXT implementation
has a nifty editor, and we'd like to be able to write nicely formatted documents
and display them nicely on nice terminals and simply on simple terminals.

Honestly, for that purpose, RTF is a more mature technology. The NeXT has
extensive support for RTF, and the Mac and the PC have some support.

I think all we're lacking is public implementations of RTF->ASCII,
RTF->Postscript, and RTF->X Windows renderers. MS Word and NeXT
edit would be fine editors. Really, for the kind of casual documents
the WWW project deals with, SGML is not a good match. Who really
uses all the "format independent" features of WWW? I haven't seen
anything that the RTF stylesheet features can't handle.

Unless we want some part of the WWW system to verify the structure
of documents, why are we using SGML (and using it poorly)?

Granted RTF doesn't have very good hypertext and multimedia features,
but that's what the WWW project is all about: experimenting with
hypertext and multimedia. We could standardize multimedia RTF conventions
as well as we have done for SGML.

Comments?

Dan

From timbl  Tue Jul 14 20:51:26 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01479; Tue, 14 Jul 92 20:51:26 MET DST
Date: Tue, 14 Jul 92 20:51:26 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207141851.AA01479@ nxoc01.cern.ch >
To: CNI-ARCH@uccvma.bitnet
Subject: Re: Citations Using Message Ids for Notes in Logs
Cc: www-talk@nxoc01.cern.ch


By the way, I see a really useful project which is up for grabs
right now is a server which hoards mail, inexes it, and fills
in all the back-links so you can follow messages which have
refered to article X, follow a link to people and lists
of messages they have written, etc.  The server could
simultaneously handle news, and eliminate the barrier (and
duplication) between the two methods of propogation.

This would be a cool excercise in the management of unruly
information, and a tool which most project managers would jump
at.

Any takers?

   Tim

From connolly@pixel.convex.com  Tue Jul 14 21:55:57 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01631; Tue, 14 Jul 92 21:55:57 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04062; Tue, 14 Jul 92 21:55:33 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA10403; Tue, 14 Jul 92 14:55:01 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20257; Tue, 14 Jul 92 14:54:59 -0500
Message-Id: <9207141954.AA20257@pixel.convex.com>
To: davis@willow.tc.cornell.edu (Jim Davis)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: rethinking the HTML DTD. 
In-Reply-To: Your message of "Tue, 14 Jul 92 15:48:32 EDT."
             <9207141948.AA04895@willow.tc.cornell.edu> 
Date: Tue, 14 Jul 92 14:54:58 CDT
From: Dan Connolly <connolly@pixel.convex.com>


>As far as I can tell the richtext in RFC1143 is kind of a quick
>and dirty hack.  I had no experience with the microsoft standard
>so of course I cant compare it but the rfc1143 richtext looks
>like a step backwards from html even.
>
In what way? This is exactly the point of my message: that HTML
is nothing more than rtf1143 RichText plus anchors. I'd like
to hear the flip side of the argument.

>is there an online definition of RTF?

I have an old (and in my opinion, poorly written) RTF
spec from a Microsoft programming journal. There's another
thing often called Rich_Text_Format_Specs.hqx (see archie
for FTP site nearest you), but it has at least one
inaccuracy (regarding newlines) and I don't know where it came from.

The best work I've seen on RTF is:
---------------------
.NH
Distribution and Update Availability
.LP
The RTF
distribution may be freely circulated and is available for
anonymous FTP access under the
.I ~ftp/pub
directory on host
.I ftp.primate.wisc.edu .
Updates appear there as they become available.
.LP
If you do not have FTP access, send requests to the address
.I software@primate.wisc.edu .
Bug reports, questions, suggestions and comments may be sent to
this address as well.
---------------------

by:
Paul DuBois
dubois@primate.wisc.edu


Have at it.

Dan

From timbl  Wed Jul 15 00:03:56 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02008; Wed, 15 Jul 92 00:03:56 MET DST
Date: Wed, 15 Jul 92 00:03:56 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207142203.AA02008@ nxoc01.cern.ch >
To: connolly@pixel.convex.com, www-talk@nxoc01.cern.ch
Subject: Re: rethinking the HTML DTD.

Dan,

You say HTML is not SGML.  It is true that the HTML generted by the NeXT editor
is not good. (example, lack of quotes around attributes which need them.)
Hwoever, the current parser wil parse real SGML. 

I feel it IS important to keep the higher-level markup.
Ypu ask, " Who really
uses all the "format independent" features of WWW? I haven't seen
anything that the RTF stylesheet features can't handle."

Well, the line-mode browser uses these features to generate a particular
style which is different from the Xwindows style.  The LaTeX generation
scripts which we use to make the "www book" use the high-level markup.

It is true that HTML does not have a deep structure, so that we can
be compatible with software whichcannot handle nested elements.
There is nothing wrong with having a simple SGML DTD as a basic case.
SGML does not HAVE to be complicated.  You can use SGML to map any
(non-overlapping) structure you like.

In the future, the web will inclued more complex DTDs, and dynamically
loaded DTDs, and people will want to use the same parser for it.

You suggest that we should use RTF because it is better supported.
Maybe we could use RTF in parallel in an experiment.  Soe problems
I have are that

RTF uses a fudge of specially names styles to represent headings
(for example, in Word) from which the WP deduces a structure
(for outline mode, etc).

RTF has styles, but as far as I could see Microsoft RTF documents
have teh actuall formatting information always tucked in there even
if it there is a style name attached.

RTF has various extensions fopr handling for example embedded documents
and links, but are these standard ized, or are different manufacturers
going to use different tagsets in RTF just like SGML?


Perhaps I am out of date in my knowledge of RTF (I certainly am).
However, I see the WP manufacturers trying to escape from a position
where they are historically bound to an RTF view, when they would like
to be able to handle SGML.

If you're talking about displaying things, to make HTML into RTF
is trivial.  You can make HTML into MIF too. You have to add
style information of course.  When you go back you have to do this
fudge of requiring the same style names to be used.

So I feel RTF would be a backward step. It is true that the current
W3 software is at a point level with RTF rather than general SGML.
But why tie ourselves to that point?

	Tim

From connolly@pixel.convex.com  Wed Jul 15 00:26:56 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02064; Wed, 15 Jul 92 00:26:56 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13260; Wed, 15 Jul 92 00:26:28 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA18318; Tue, 14 Jul 92 17:25:58 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA07409; Tue, 14 Jul 92 17:25:57 -0500
Message-Id: <9207142225.AA07409@pixel.convex.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: rethinking the HTML DTD. 
In-Reply-To: Your message of "Wed, 15 Jul 92 00:03:56 +0700."
             <9207142203.AA02008@ nxoc01.cern.ch > 
Date: Tue, 14 Jul 92 17:25:56 CDT
From: Dan Connolly <connolly@pixel.convex.com>


Ok, so we really do want to use SGML. Good. I agree. I just
wanted to hear from the WWW community.

>
>You say HTML is not SGML.  It is true that the HTML generted by the NeXT editor
>is not good. (example, lack of quotes around attributes which need them.)
>Hwoever, the current parser wil parse real SGML. 
>
The biggest problem with HTML files is that they have only 1 of the 3
basic parts of an SGML document: the SGML declaration, the prologue,
and the instnace. HTML documents only have the instance. It's legal
to omit the SGML declaration -- there's a default. But you've got
to have a prologue, or you end up with a non-standard way of infering
the prologue (for example, every WWW client infers the DTD described
in "http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html".)

So if we're commited to SGML, let's start putting something like

<!DOCTYPE HTML SYSTEM "http://info.cern.ch/hypertext/WWW/MarkUp/html.dtd">

at the front of every HTML file (we don't have to store it in the
file -- servers that distribute HTML could generate it on the fly.)
And let's put _some_ kind of DTD there.

>In the future, the web will inclued more complex DTDs, and dynamically
>loaded DTDs, and people will want to use the same parser for it.
>
Interesting! There are plans to support more than one DTD!
This makes SGML a clear winner.

>So I feel RTF would be a backward step. It is true that the current
>W3 software is at a point level with RTF rather than general SGML.
>But why tie ourselves to that point?
>

I guess that's what I wanted to hear: that the goals of WWW and the
features of SGML really _do_ have a lot in common, but the current
implementation doesn't support many of them.

Just to make sure I've beat this horse to death: let's begin to
formalize HTML and validate existing HTML documents before the
distance between HTML and SGML gets too big.

Dan

p.s. I'm working on a DTD that reflects the structure of most existing
word-processor documents: a sequence of paragraphs (maybe broken
into flows, sections, or whatever). I'll have RTF and MIF translators
for the DTD when it's ready. Maybe HTML2 can use some of the features --
the low level character-set related features, anyway.



From timbl  Wed Jul 15 00:33:09 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02089; Wed, 15 Jul 92 00:33:09 MET DST
Date: Wed, 15 Jul 92 00:33:09 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207142233.AA02089@ nxoc01.cern.ch >
To: fkappe@fiicmds04.tu-graz.ac.at, www-talk@nxoc01.cern.ch
Subject: Re: HTML DTD and related problems (rather long)

I am replying very late to a message of Frank Kappe,
dated 25 Jun 1992.

First of all, to clear up some things about W3 HTML.
You can't nest anchors.
You can't nest anything EXCEPT you can put any elements inside
an anchor (excpt for other anchors) and you can put an anchor
inside any elements.
Then there is the slight structure of the <DL>[<DT><DD>]*</DL>
etc which is required.

I think I emntioned in earlier messages that the lack of structure
is to make it easier to process HTML on systems which have styled
text (like most systems, MSWord etc).

Now it is interesting that you in Gyper-G allow anchors to be
any section of the text.  This of course is counter to the
SGML philosophy of strict nesting (SGML people can get quite
religeous about this, but I can't.)  I think it is useful
to be able to refer to two separate overlapping anchors.
The problem is it is taken as given by any SGML DTD designer
that this sort of structure in a document is "BAD". This
means that SGML tools won't be able to process the <AS>
and <AE> (anchor start and anchor end) tags, you'll have to
write something special on top which keep track of anchors.
AGML parsers won't be able to verify the anchor structure.
So though the DTD is valid, but it doesn't in fact representthe restrictions.

You say that you feel it is better to store the links separately
rather than in the document.  First of all let me say that W3 does NOT
require you to do that -- it just requires that the links, anchors
and text are transmitted at the same time on the net. That is very different.
Many systems generate the HTML on the fly from other sources of link
information.

Nowlooking at this question of where to store the links, the 'link database"
model you propose is the Intermedia model of Norman Meyrowitz et al.
This was developped in a non-distributed environment, where a "web"
(database of links) was available to the readers and centrally coordinated.
If you expand that system to more than one web server, and scale it to
global, then you find that the same problems of ensuring consistency
occur between the multiple link databases when before they occured between dcouments.  You can't set up a system of bidirectional links for example,
which you could in the non-distributed case.

Link databases have their advantages, though.  A model I am rather keen on
atthe moment is of servers which are both link databases and
source code control (sccs, rcs etc) systems.  In this world,
you don't need to store anchors at all -- you just quote the
character number AND VERSION number of the document.  To find an
anchor, if you have a more recent version than the one referred to in the anchor,
you have to ask the server to translate the anchor's position in the
old document into a position in the new one. It may reply with
the same or a didfferent position, or that as far as its "diff"
algorithms go, it can't find where the original anchor text would
be in the new document, or it might really have gone.
This would allow links to be made around source code (for which you want
source code control anyway).

There would be common problems when you do the sorts of changes which
diff can't handle intelligently, like you swap the two halves of a file,
or you change all the "a_"s to "A_".  In these cases, a smart editor
would be able to explian each editing change to the server as it goes,
to the server would understand the relationship between the pre-edit
and post-edit versions.  If you are going to do that, then you can
go a small extra step and make the server coordinate simultaneous edits
by many people, which gives you a group editor.

   Tim

From timbl  Wed Jul 15 00:55:36 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02153; Wed, 15 Jul 92 00:55:36 MET DST
Date: Wed, 15 Jul 92 00:55:36 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9207142255.AA02153@ nxoc01.cern.ch >
To: connolly@pixel.convex.com, timbl@nxoc01.cern.ch
Subject: Re: rethinking the HTML DTD.
Cc: www-talk@nxoc01.cern.ch

Dan,

You had a DTD which was almost HTML as it now is. I can't remeber the
syntax but it needs to have something along the lines of

   nonanchor = H! | H2 | text | DL ...
   anchor =    <A> nonanchors </A>
   document_bit = anchor | nonanchor

to get the restriction of not nesting anchors, not nesting DLs,
but being able to put anchors within DLs OR DLs within anchors.
If you could write that in DTD and mail it ten (when I come back
from vacation I or someone else) will put it into the web for
people to refer to.  If we get complains from some SGML parsers that
its not right, we can fix it. But we should have something there
as an attempt to document current practice.

I don't think the Daveport group (who are thinking about DTDs for
documentation seriously) are in on this list, and I'm not in on theirs.
I would like to get some UDI (The meeting att he IETf yesterday decided
to call them URLs -- Uniform Resource Locators -- minutes are in
 http://info.cern.ch/timbl/Public/USTrip1992/IETF-24/UDI_BOF_Minutes.html)
(but I digress) of the davenport group's working documents.
I'll go to their meeting in Sebastopol 16th-18th August if I can
and see what they are doing...

Tim

From wei@xcf.berkeley.edu  Wed Jul 15 19:45:27 1992
Return-Path: <wei@xcf.berkeley.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04292; Wed, 15 Jul 92 19:45:27 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19791; Wed, 15 Jul 92 19:45:11 +0200
Received: by con.Berkeley.EDU (5.65/XCF-1.34)
	id AA04407; Wed, 15 Jul 92 10:46:00 -0700
Date: Wed, 15 Jul 92 10:46:00 -0700
From: wei@xcf.berkeley.edu (Pei Y. Wei)
Message-Id: <9207151746.AA04407@con.Berkeley.EDU>
To: www-talk@nxoc01.cern.ch
Subject: viola update (with latest W3 library)

There's now a version of the viola WWW browser that uses the latest W3
library (extracted from the LineMode Browser 1.2h).

ftp://xcf.berkeley.edu/src/local/viola
-rwxr-xr-x  1 root      1011631 Jul 15 08:03 viola.decstation.Z
-rwxr-xr-x  1 root       516420 Jul 15 09:00 viola.sparc.Z
-rw-r--r--  1 root       697658 Jul 15 09:03 viola.tar.Z

Anyone up for kicking the tires? It's slightly evermore reliable than
the previous version, and should be gentler than the previous version in
regards to network traffic (how substantial is hard for me to measure).
I'm particularly interested in knowing if the font metrix problem is
still present (the "gosh, it's eating up lots of CPU doing nothing" bug).

-Pei


From connolly@pixel.convex.com  Thu Jul 16 05:36:01 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05320; Thu, 16 Jul 92 05:36:01 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02349; Thu, 16 Jul 92 05:35:44 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA25162; Wed, 15 Jul 92 22:35:21 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA24812; Wed, 15 Jul 92 22:35:19 -0500
Message-Id: <9207160335.AA24812@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML DTD enclosed
Date: Wed, 15 Jul 92 22:35:19 CDT
From: Dan Connolly <connolly@pixel.convex.com>

<!-- html.dtd - document type declaration subset for
                HyperText Markup Language as defined
		by the World Wide Web project.

	15 Jul 92 by connolly@convex.com

	See also: http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html
  -->

<!--      Terminal symbols        -->

<!ENTITY lt "<">
<!ENTITY gt ">">
<!ENTITY amp "&">

<!-- some existing html uses these. I think they meant
	&amp;
     in stead of 
	&amp.
     -->
<!ENTITY lt. "<">
<!ENTITY gt. ">">
<!ENTITY amp. "&">

<!--    Non-ELEMENT symbols       -->

<!ENTITY % heading "H1|H2|H3|H4|H5|H6" >
<!ENTITY % list "UL|OL|DIR|MENU|DL">
<!ENTITY % text "P|#PCDATA">
<!ENTITY % raw "XMP|LISTING">
<!-- PlainText is more than 8 characters, and changing the
     NAMELEN capacity involves including a lengthy SGML declaration
     in every HTML file. Besides: the semantics of PlainText can't
     be captured by real SGML anyway. -->
<!ENTITY % body "%heading|%list|%text|%raw">

<!--     Document structure       -->

<!ELEMENT HTML	O O  ((TITLE? & NEXTID? & ISINDEX?), BODY, ADDRESS?)>

<!ELEMENT TITLE	- -  (#PCDATA)>

<!ELEMENT NEXTID - O EMPTY >
<!ATTLIST NEXTID N NUMBER #REQUIRED>
<!-- as noted in Tags.html, the conventional <NEXTID 10> is
     illegal. Use <NEXTID N=10> to comply with this DTD. -->

<!ELEMENT ISINDEX - O EMPTY >

<!ELEMENT BODY O O ((%heading), (%body)+) +(A)>
<!-- The BODY element is necessary to avoid mixed content
     in the HTML element. Mixed content and optional elements
     don't mix very well. -->

<!ELEMENT (%heading)	- -  (%text)+
	--Tags.html says titles should fit on one line, but
	the browser handles paragraph breaks inside headings
	gracefully. -->

<!ELEMENT (MENU|UL|OL|DIR) - -  (LI+)>

<!ELEMENT DL	- -  ((DT, DD)+)>

<!ELEMENT LI	- O  (%text)+>
<!ELEMENT DT	- O  (#PCDATA)+>
<!ELEMENT DD	- O  (%text)+>
<!ELEMENT ADDRESS - O (%text)+ +(A)>
<!-- Tags.html says "This tag is for address information, signatures,
etc, normally at the top or bottom of a document." Here, it is only
allowed at the end of a document. -->

<!ELEMENT (%raw) - -  CDATA>
<!-- BUG:
tags.html says that you can put anything but </XMP> in the
text of an XMP element. SGML says that ETAGO, "</" ends a CDATA
section.
-->

<!ELEMENT P	- O  EMPTY -- paragraph SEPARATOR -->

<!-- We could use this to let blank lines separate paragraphs
  <!ENTITY   ptag   STARTTAG "p">
  <!SHORTREF bodymap "&#RS;&#RE;" ptag>
  <!USEMAP   bodymap  BODY;>
  -->

<!ELEMENT A	- -  (%body)+>
<!ATTLIST A
	HREF CDATA #IMPLIED -- attribute values with colons etc. must
				be quoted. --
	NAME CDATA #IMPLIED
	TYPE CDATA #IMPLIED >


From connolly@pixel.convex.com  Thu Jul 16 05:50:02 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05332; Thu, 16 Jul 92 05:50:02 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05889; Thu, 16 Jul 92 05:49:45 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA25548; Wed, 15 Jul 92 22:49:23 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA25229; Wed, 15 Jul 92 22:49:22 -0500
Message-Id: <9207160349.AA25229@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: perl script to legalize HTML files
Date: Wed, 15 Jul 92 22:49:21 CDT
From: Dan Connolly <connolly@pixel.convex.com>

#!/usr/local/bin/perl
#
# USE
#   fix-html.pl <W3-file.html >W3-file.sgml
#
# SEE ALSO
#   the html.dtd.
#

print "<!DOCTYPE HTML SYSTEM>\n";

@html = <>;			# read whole file
$_ = join('', @html);

while(/</){
    &out($`);
    $_ = $';
    if(s/^A\s+//i){
	&fix_anchor;
    }elsif(s/^NEXTID\s+(\d+)\s*>//){
	&out("<NEXTID N=$1>");
    }else{
	&out('<');
    }
}

&out($_);

sub out{
    print $_[0];
}

sub fix_anchor{
    local($name, $href, $type);

    # What exactly is the syntax of an SGML attribute value?
    while(s/^(\w+)\s*=\s*((\"[^\"]*\")|([^\s>]+))\s*//){
	local($v) = ($3 || $4);
	local($a) = $1;
	$href = $v if $a =~ /^href$/i;
	$name = $v if $a =~ /^name$/i;
	$type = $v if $a =~ /^type$/i;
    }
    s/[^>]*>//;

    &out("<A");
    &out(" NAME=\"$name\"") if $name ne '';
    &out(" TYPE=\"$type\"") if $type ne '';
    &out(" HREF=\"$href\"") if $href ne '';
    &out(">");
}

From connolly@pixel.convex.com  Thu Jul 16 06:07:03 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05357; Thu, 16 Jul 92 06:07:03 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11230; Thu, 16 Jul 92 06:06:44 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26267; Wed, 15 Jul 92 23:06:19 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA28878; Wed, 15 Jul 92 23:06:17 -0500
Message-Id: <9207160406.AA28878@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: RE: Minutes of the "UDI" BOF at the 24th IETF
Mime-Version: 1.0
Content-Type: text/x-html
Date: Wed, 15 Jul 92 23:06:17 CDT
From: Dan Connolly <connolly@pixel.convex.com>

<!DOCTYPE HTML SYSTEM>
<H1>RE: 
<A HREF=
"http://info.cern.ch/timbl/Public/USTrip1992/IETF-24/UDI_BOF_Minutes.html">
Minutes of the "UDI" BOF at the 24th IETF</A></H1>

[The gopher folks are dicussing how to add the "reply"
feature from USENET newsreaders to gopher clients.
I wish www had that feature too. The "followup" feature
is currently beyond the scope of WWW, but...]
<p>

[I'm beginning to wish www was a mail user agent and
a gopher client and a news reader and a WAIS client
all in one. Soon...]
<p>

[We need a DTD that models the USENET thread model,
with posts, followups, quotes, points, counterpoints,
flames, signatures, etc.<p>

Right now, I have to modify a destination document (add an anchor) to
link to an element of that document. We should look at what HyTime and
the TEI use for references to SGML elements without IDs. I saw a
HyTime description that said you could link to non-hyptime documents.
Maybe we could use this to reference passages of news articles etc.  ]

<p>

<H2>Quote</H2>

The information one quoted in a reference to an object could comprise
many things, among which were possible one unique name, (Unique
Resource Number, URN was one acronym), and zero or more addresses
(Uniform Resource Locators or URLs) which gave instructions for
retrieving the object.

<h2>Response</H2>

Cool! The model for global hypertext that swims around in my mind
includes references which consist of identifiers and addresses. On the
subject of URNs, it sure would be nice to be able to verify that the
data mentioned in the link and the data retrieved from the URL are the
same.
<p>

For instance, I could reference an FTP file, and somebody could
write over it. I might look like a fool arguing against old
information. If I give a URN in the link, the browser could warn
that it doesn't match the URN of the retrieved document.

<h2>Quote</h2>

NOT to be discussed were the differences between names and addresses,
URN schemes (which are not yet well enough defined), the full set of
information to be given in a reference, or IPv7.
<p>

<h2>response</h2>

I think internet message ID's make great URN's.

<h2>quote</h2>

To be discussed were the overall string syntax, including allowed
characters and escaping systems for unallowed characters, the order of
components (little/big-endian), punctuation characters, the particular
prefix to be used to identify each namespace.

<h2>Response</h2>

Cool. This makes URLs orthogonal to MIME external body part
references. I believe where they are not orthogonal, they should
coincide.

<h2>quote</h2>

It was pointed out that for WAIS one could imagine a separate name
space for databases and for documents. If this was taken futher, a
separate prefix would be used for each type of object. It was on
balance agreed that this could go too far. One prefix should be used
per protocol, but it should be made clear how to determine the type of
an object from the URL.

<h2>response</h2>

Note how nicely all this coincides with MIME external body part
constructs. Such a body part looks like, for example:<XMP>
Content-Type: message/external-body;
	access-type=x-http;
	host="info.cern.ch";
	path="/timbl/Public/USTrip1992/IETF-24/UDI_BOF_Minutes.html"

Content-Description: Minutes of the "UDI" BOF at the 24th IETF
Content-Type: text/x-html

</XMP>
<p>

In general, a MIME external body part looks like:<XMP>
Content-Type: message/external-body;
	access-type=_type_; /* local-file, anon-ftp, afs, or x-token */
	_other_parameters_ /* path, host, name, database, etc. */

Content-ID: _message-id_ /* of external body part */
Content-Description: here's what you'll get!
Content-Type: _base_/_subtype_ /* type of data in external body part */

ghost body goes here. This is _not_ the contents of the body part,
but it is available to the user agent that's fetching the data.
It could be used, for example, for the seed-words of a WAIS reference.
</XMP>

It looks like a URL is a condensed version of the MIME external body
part headers. The URL scheme:____blah____ syntax maps nicely to
MIME access-type=scheme; ___parameters for blah___.

<h2>quote</h2>

The class of object you get back should be predictable (--C Lynch).
W3 has a real problem with that, since everything is a "document" and
handled in a similar way.

<h2>response</h2>

I don't agree that "everything is a 'document'" to the W3 browser. The
browser knows it's getting gopher directory info from gopher UDI's,
for example. I think the type of data it returns can and should be
classified by the MIME typing system, even if it does so implicitly.

<h2>quote</h2>

Should one use punctuation, or attribute-value pairs? Attribute value
pairs get mispelt. (note x.400 vs.internet addresses)<p>
   
It was decided to use a short string with punctuation rather than an
attribute-value pair system.<p>

<h2>response</h2>
I have doubts about the ability to be able to encode all this
information (scheme, host, path/selector-string, type, etc) in
something akin to a phone number that can be written on one line of
text with no spaces. I think that within each scheme, folks develop
printable syntaxes for making references (ange-ftp, WAIS source files,
etc.).<p>

But the scope of URLs is so vast that I wonder if folks will form
habits over this whole domain.<p>

I advocate that the W3 format include, at least experimentally, an
SGML element for each access type, with the URL pre-parsed into
attribute-value pairs. The anchor element could become more complex,
including sub-elements for URLs and URNs. Data type information could
be included somewhere.<p>

The HTTP access type doesn't require type information: format
negociation is part of the HTTP protocol. But WAIS and Gopher
references require these types, and it would be nice for FTP
references (at least to choose between image and text transfers.)<p>

I'll think it over and work on a DTD that uses these pre-parsed URLs.

How do these examples look?
<XMP>
<A HREF=
"http://info.cern.ch/timbl/Public/USTrip1992/IETF-24/UDI_BOF_Minutes.html">
Minutes of the "UDI" BOF at the 24th IETF< /A>

becomes

<A><HTTP host="info.cern.ch"
 path="/timbl/Public/USTrip1992/IETF-24/UDI_BOF_Minutes.html">
Minutes of the "UDI" BOF at the 24th IETF< /A>

and

<A NAME=gopher
HREF=gopher://gopher.micro.umn.edu:70/11/Other%20Gopher%20and%20Information%20Servers>
list of sites< /A>

becomes

<A NAME=gopher>
<Gopher type="text/x-gopher-1"
        host="gopher.micro.umn.edu" port=70
        selector="1/Other Gopher And Information Servers">
list of sites< /A>
</XMP>

The idea here is that we've got a parser already: the SGML parser.
Why not use it to parse the various bits of data we need to reference
data located elsewhere?

<h2>quote</h2>

A separate issue of whether human or only machine readable.
Previously, included issue of printable.  This is needed because don't
have names now.  Question arose of whether once these addresses exist
will be replaceable with names - will be presented as new
functionality, not replacing existing systems. Agreement on some way
of specifying class of objects.

<h2>response</h2>

This reminds me of <A HREF="AUGMENT:132082,#11l"> Knowledge-Domain
Interoperability & an Open Hyperdocument System
</A>
 by Douglas C. Engelbart in which he gives requirements for his
system.
<p>

One of them is:

<H4>Hard-Copy Print Options to Show Addresses of Objects and Address
Specification of Links</H4>

<h5> ... so that, besides online workers being
able to follow a link-citation path (manually, or via an automatic
link jump), people working with associated hard copy can read and
iterpret the link-citation, and follow the indicated path to the cited
object in the designated hard-copy document.<p>
<p>

Also, suppose that a hard-copy worker wants to have a like to a given
object established in the online file. By visual inspection of the
hard copy, he should be able to determine a valid address path to that
object and for instance hand-write an appropriate link specification
for later online entry, or dicate it over a phone to a colleague.</H5>

That document deserves a thorough reading by the whole
comp.infosystems.* community.

<h2>quote</h2>

IT WAS AGREED that the context, or namespace, prefix be the first
(leftmost) part of the URL, and be separated from the rest of the URL
by a colon.

<h2>response</h2>

Has anybody given any thought to a syntax with implied schemes so that
the ange-ftp style URLs and internet message ID URNs that are out
there can be used?<p>

If we reserved a character to _start_ UDIs, then we could try to infer
the scheme of strings that don't start with that char. Let's take
() for URL schemes and [] for URN schemes.

<XMP>
For example: host:path == (ANON-FTP)host:path
             path@host == (ANON-FTP)host:path
             <message-id@host> == [rfc-822]<message-id@host>
</XMP>

Well, I suppose this type of thing is really akin to the W3 local
UDI scheme: it's application specific.<p>

<h6>Postscript: This document was prepared using emacs with the help
of Eric Naggum's
<A HREF="file://ftp.ifi.uio.no/pub/SGML/elisp/sgml-mode.el">
sgml-mode</A>, and verified by sgmls-0.8 with the DTD in <A
HREF="message-id:<9207160335.AA24812@pixel.convex.com>">html.dtd
</a>
. This is proof of concept that the W3 browser handles conforming
SGML. I also wrote
<a
href="message-id:<9207160349.AA25229@pixel.convex.com>"> a short perl
script</a> that will bring many existing HTML files into conformance.

</h6>

From davis@willow.tc.cornell.edu  Thu Jul 16 14:50:20 1992
Return-Path: <davis@willow.tc.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06423; Thu, 16 Jul 92 14:50:20 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26980; Thu, 16 Jul 92 14:50:04 +0200
Received: by willow.tc.cornell.edu (4.1/SMI-4.1)
	id AA23237; Thu, 16 Jul 92 08:51:35 EDT
Date: Thu, 16 Jul 92 08:51:35 EDT
From: davis@willow.tc.cornell.edu (Jim Davis)
Message-Id: <9207161251.AA23237@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: reading HTML mail

I don't know how many of you are using Mime for your mail (other
than Dan) but I am starting to.  So today I modified my mailcap
to be handle text/x-html messages, and since there was a little
difficulty I thought I share it with you.

Here is what I added to my mailcap

text/x-html; mime-show-html -f %s; needsterminal

The command mime-show-html is a new script I wrote.  It starts
up the Viola WWW browser (for which I thank the author!) but
there are some small problems with Viola

1) It seems that it requires that the file have suffix html
in order to work
2) You can't tell it what file to read from the command line,
rather you must set an environment variable.

So I wrote this little script:

#!/bin/csh
# Run the Viola WWW X windows hypertext system for a Mime message
# I expect caller (metamail) to supply the file to read with -f,
# and it will be a /tmp file

# Process args 
while ($#argv > 0 && "$1" =~ -*)
  switch ($1)
  case -f:
    shift
    if ($#argv < 1) goto usage
    set TEMP = $1.html
    cp $1 $TEMP
    setenv WWW_HOME $TEMP
    shift
    breaksw
  default:
    goto usage
    breaksw
 endsw
end

set VIOLA=/usr/local/WWW/Viola
setenv VIOLA_PATH $VIOLA/apps
$VIOLA/bin/viola 
rm $TEMP
exit 0

usage:
 echo "usage: `basename $0` [-f HTML-FILE]"
 exit 1

If you wish to use this script you will need to change the
setting of VIOLA depending on where you installed it.

Best wishes, and now we can use Mime to send WWW to each
other more easily.  

From jfg@dxcern.cern.ch  Thu Jul 16 16:27:24 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06675; Thu, 16 Jul 92 16:27:24 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04099; Thu, 16 Jul 92 16:27:08 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA10071; Thu, 16 Jul 92 16:26:51 +0200
Date: Thu, 16 Jul 92 16:26:51 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207161426.AA10071@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: HTML DTD enclosed
References: <9207160335.AA24812@pixel.convex.com>

  Thanks Dan for this revised HTML DTD. Some comments after a quick
glance (please bear with me as I'm no SGML expert...) :

> <!-- Tags.html says "This tag is for address information, signatures,
> etc, normally at the top or bottom of a document." Here, it is only
> allowed at the end of a document. -->

  We wanted addresses to be lawful both at the top or at the bottom of
a document because of the traditions of some information sources that
we can access, e.g. for Internet news, the address part is extracted
from various headers and displayed first. This makes sense in those
systems where the author name changes often from a document to the
next (in the order you read them). On the contrary, in technical
documentation like the WWW tree, it would be obnoxious to repeat the
author's name at the top of every page. There are even cases where
people cite several people at different points in the same document
within <Address> tags. So my opinion is that we should leave this tag
legal anywhere, or at least at both top and bottom.

> Tags.html says that you can put anything but </XMP> in the
> text of an XMP element. SGML says that ETAGO, "</" ends a CDATA
> section.

  This will be easy to fix in the next release of the browsers.

> 	HREF CDATA #IMPLIED -- attribute values with colons etc. must
>				be quoted. --

  The NeXT editor doesn't quote them: bad behaviour to be fixed. Also
fix every server generating anchors on the fly...

  I've put the DTD and the legalizer in the web: just follow HTML.

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From mad@merit.edu  Thu Jul 16 18:13:35 1992
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07018; Thu, 16 Jul 92 18:13:35 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12513; Thu, 16 Jul 92 18:13:23 +0200
Return-Path: <mad@merit.edu>
Received: from home.merit.edu by merit.edu (5.65/1123-1.0)
	id AA11246; Thu, 16 Jul 92 12:13:00 -0400
Received: by home.merit.edu (4.1/client-0.9)
	id AA19009; Thu, 16 Jul 92 12:12:59 EDT
Message-Id: <9207161612.AA19009@home.merit.edu>
To: www-talk@nxoc01.cern.ch
Cc: eastgate@applelink.apple.com
Subject: Storyspace Mac hypertext tool
Date: Thu, 16 Jul 92 12:12:59 -0400
From: Mark Alexander Davis-Craig <mad@merit.edu>

I don't know how interesting this will be to people, but I called one
of the technical people on the project, Mark Bernstein, (he's cced on
this message) and this might be close to a Mac front end for the web.
------- Forwarded Message

From: Elli Mylonas <ELLI%BROWNVM.BitNet@pucc.PRINCETON.EDU>
Subject:      Re: Coover article in NYT Bk Rvw on electronic fiction
To: Multiple recipients of list PACS-L <PACS-L%UHUPVM1.BitNet@pucc.PRINCETON.EDU>



- ----------------------------Original message----------------------------
This is a rather tardy reply to the query about StorySpace.
 
StorySpace is a hypertext authoring system that runs on the
Macintosh. The person using it creates "spaces" which
can contain text and/or other spaces. Links can also be created between
different text spans, and the links can be keyworded.
It is then possible to use the keywords to select sets of links to
follow.
StorySpace was originally conceived as a writing tool, but has since
been used as an organizer, courseware authoring system, environment
for writing fiction, etc.
It is written by J. David Bolter, Michael Joyce and John B. Smith, and
is distributed by Eastgate Systems in Cambridge Mass.
 
I have played with StorySpace a little, and have also read some of the
fiction  written in it (also from Eastgate). It is an extremely
sophisticated and versatile hypertext system, and using it is a very
worthwhile initiation into this new medium (...?!).
 
 
I should also add that, although I am not affiliated with
Eastgate or StorySpace, I think their products are good, and
I am a supporter and friend of theirs, so I am not entirely
nonpartisan.
 
To get in touch with Eastgate, call 1-800-562-1638. The fiction
is in the $30 range, and really takes the shine out of the current
books on disk.

------- End of Forwarded Message


From jfg@dxcern.cern.ch  Fri Jul 17 10:18:38 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08627; Fri, 17 Jul 92 10:18:38 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29808; Fri, 17 Jul 92 10:18:12 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA10305; Fri, 17 Jul 92 10:17:49 +0200
Date: Fri, 17 Jul 92 10:17:49 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207170817.AA10305@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Cc: eastgate@applelink.apple.com
Subject: Re: Storyspace Mac hypertext tool
References: <9207161612.AA19009@home.merit.edu>

  Interesting... Mark (one or the other :-), could you tell us how you
think this product might be hooked up to the web ? The message you
sent doesn't mention any networking possibility, but we could perhaps
combine our WWW code library with your user interface to obtain a new
great browser/editor. What does your internal hypertext format look
like ? Could we map it to HTML ? Can we get a demo version here ?

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From rama@noa.huji.ac.il  Sun Jul 19 13:30:54 1992
Return-Path: <rama@noa.huji.ac.il>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12016; Sun, 19 Jul 92 13:30:54 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21624; Sun, 19 Jul 92 13:30:34 +0200
Received: by noa.huji.ac.il (HU-2.5)
	id AA02425; Sun, 19 Jul 92 14:28:59 +0300
From: Rama Porrat <rama@noa.huji.ac.il>
Date: Sun, 19 Jul 92 14:28:59 +0300
Message-Id: <9207191128.AA02425@noa.huji.ac.il>
To: www-talk@nxoc01.cern.ch

                   TeX data base for WWW

We have a database containing information about TeX and related issues.
The database is built so that it can easily be accessed via 
     WWW  --  WorldWideWeb  -- 
a public domain interactive line browser. It is meant to be used
by both new and advanced TeX users.

Files within the database have been and are being copied (and modified) 
from information lists pertaining to TeX; others have been written here.
Files are constantly being updated and added.

Apart from general information pertaining to TeX, the database includes
information pertaining to Hebrew TeX. This can, of course, be skipped
by those who are not interested in the subject.

To use the TeX data base, you can telnet onto vms.huji.ac.il  
(currently 128.139.4.3) with the username  WWW

Once you are within WWW, choose the entry 
   "Computation Center Information"  [7]
by typing   7   <return>
 
in the next menu, choose
   "TeX News and Info"   [5]
by typing   5   <return>

All the files contained in the TeX database can be retrieved via
anonymous ftp from noa.huji.ac.il [132.64.254.10]   in  tex/www
The file   top.html   is the top of the information.:

Note: Our server is still running is the old port, not port 80.

Rama.

-- 
Rama Porrat   					rama@noa.huji.ac.il
Computation Center				voice:	+972-2-584539
The Hebrew University of Jerusalem		fax:	+972-2-527349
Jerusalem 91904, ISRAEL				bitnet: rama@hujivms



From jfg@dxcern.cern.ch  Tue Jul 21 09:46:32 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15563; Tue, 21 Jul 92 09:46:32 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09315; Tue, 21 Jul 92 09:46:27 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA19273; Tue, 21 Jul 92 09:46:09 +0200
Date: Tue, 21 Jul 92 09:46:09 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9207210746.AA19273@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: questionnaire on billing server for the Internet

  Forwarded from the wais-talk mailing list, FYI only (same disclaimer
as below...)

	Jean-Francois

------- Start of forwarded message -------
From: Steve Goldstein--Ph +1-202-357-9717 <sgoldste@cise.cise.nsf.gov>
To: wais-talk@quake.think.com
Subject: questionnaire on billing server for the Internet
Date: Mon, 20 Jul 92 14:58:50 EDT

Forwarded for the interest of WAIS-folk who might be interested in the
customer charging functions.  Perhsps somebody would like to respond
to these folks with WAIS-specific interests.  

This is not an endorsement of the request in any way: it is just forwarded
for your information and, possibly, to lead to WAIS-enlightenment for the
questioners.

						Thanks,

						Steve G.

- ------- Forwarded Message

          Mon, 20 Jul 1992 13:22:51 -0400 (EDT)
Message-Id: <keOjNfS00io1M1r1Q1@andrew.cmu.edu>
Date: Mon, 20 Jul 1992 13:22:51 -0400 (EDT)
From: Tao Jen <tj0u+@andrew.cmu.edu>
To: com-priv@psi.com
Subject: Internet Billing Server



			Information Networking Institute
			Carnegie Mellon University
			5000 Forbes Avenue
			Pittsburgh, PA  15213
			Tel:  (412) 268-8128
			Fax:  (412) 268-7196
			Email address:  tj0u@andrew.cmu.edu
 
To whom this may concern:
 
We are graduate students from Carnegie Mellon University's Information
Networking Institute.  Currently we are working on a project to design
and develop a "billing server" on the Internet.  This "billing server"
will provide billing functions for various service providers who could
sell their information services electronically over the Internet.  We
believe that many of you could be potential service providers (our
customers). Therefore, your input to this market survey will be valuable
to the success of our project, and greatly appreciated.
 
The "billing server" that we envision would include billing functions
such as customized billing, invoice creation, service charge calculation
and collection, centralzied authentication, topical directory service,
and customer inquiry handling.  Basically, it is like a credit card
service for the electronic services available on the Internet.
 
Following is a market survey that we are asking you to fill out for us. 
We greatly appreciate if you could respond to this survey as soon as
possible.  If possible, please reply by email, fax, or telephone calls.  


			Sincerely yours,
 
 
 
			Tao Jen
 

 
 
Name:						                       Title:
Company:
 
 
1.  Would you be interested in making your service or information
available electronically?
 
 
2.  Would you be interested in having a third party (e.g. a "billing
server") handle the billing functions for you?
 
 
3.  Would you prefer an uniform pricing scheme for all customers or an
individual pricing scheme on a customer by customer basis?
 
 
4.  Would you like a third party (e.g. a "billing server") to calculate
the service charges for you?
 
 
5.  Circle the following services in terms of the importance in order
for you to provide services electronically.  (1 is least important, 5 is
most important)
 
		- Centralized authentication.		   	1	2	3	4	5
		- Service charge calculation.	   	1	2	3	4	5
		- Customized billing.			          	1	2	3	4	5
		- Invoices creation.			           	1	2	3	4	5
		- Guaranteed payment		            	1	2	3	4	5
		- Service charge collection.	    	1	2	3	4	5
		- Directory service.		           	1	2	3	4	5
		- Customer inquires.		           	1	2	3	4	5
 
Please add to the list any additional service you feel is important.
 
 
 
6.  Would you prefer to handle customer inquiries by yourself or let the
centralized  "billing server"  handle them?
 
 
7.  What is the highest percentage of the total sale that you are
willing to pay for the billing service?  (Please try your best to answer
this question)
 
 
Other comments:
 


- ------- End of Forwarded Message

------- End of forwarded message -------

From connolly@pixel.convex.com  Fri Jul 24 07:19:47 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23830; Fri, 24 Jul 92 07:19:47 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA18179; Fri, 24 Jul 92 07:19:25 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA16637; Fri, 24 Jul 92 00:18:36 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA06296; Fri, 24 Jul 92 00:18:35 -0500
Message-Id: <9207240518.AA06296@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: html2mml.l -- FrameMaker support for HTML
Content-Type: multipart/mixed; boundary="cut-here"
Date: Fri, 24 Jul 92 00:18:34 CDT
From: Dan Connolly <connolly@pixel.convex.com>

--cut-here

Here's a lisp program I cooked up to convert HTML files
to Frame's Maker Markup Language. It uses a real SGML
parser and a lisp interpreter, so you'll have to build
those if you don't have them handy.

I haven't tested it extensively, and I don't have a
down translator (MIF to HTML) yet... but I thought
I'd pass it along.

Oh... it assumes the HTML file conforms to the DTD
I sent out a while ago (I'd give you a WWW HREF/URL,
but the server's down right now and I can't find
it.)

Dan

--cut-here

;;; html2mml.l -- translate HyperText Markup Language to Maker Markup Language.
;;;
;;; USE
;;;  sgmls file.html | xlisp html2mml.l >file.mml
;;;
;;; Where xlisp is Tom Almy's improved release of David Betz's XLISP 2.1,
;;; available in export.lcs.mit.edu:/contrib/winterp/xlisp/xlisp-2.1.almy.tar.Z
;;; and sgmls is built from
;;; ifi.uio.no:/pub/SGML/SGMLS/sgmls-0.8.tar
;;; aka
;;; ftp.uu.net:/pub/text-processing/sgml/sgmls-0.8.tar.Z
;;;
;;; The resulting file will have the OS Banner from XLisp at the
;;; top. For some reason, XLisp writes everything to stdout.
;;; I patched it to write diagnostic output to stderr. I'll have
;;; to get the patches incorporated soon.
;;;
;;; Anyway, just edit the banner out so the first line of the file is
;;; <MML ...>
;;;
;;; Then import the mml file to FrameMaker.
;;;

(setq *tracenable* t)
(setq *breakenable* t)

(princ "<MML \"from html2mml.l by connolly@convex.com\">\n")
(setq *para-tags*
      '(title h1 h2 h3 h4 h5 body ol ul dl menu dir xmp listing))
(setq *literal-tags* '(xmp listing))

(setq *style-sheet* "
<!DefinePar Title
  <Alignment r>
  <plain> <pts 18> <bold>
>
<!DefinePar H1
  <Alignment c>
  <plain><pts 18>
  <SpaceBefore 12pt><SpaceAfter 12pt>
>
<!DefinePar H2
  <LeftIndent 0in><FirstIndent 0in>
  <SpaceBefore 12pt><SpaceAfter 6pt>
  <Alignment l>
  <plain><pts 14>
>
<!DefinePar H3
  <plain> <bold>
  <LeftIndent 0.25in><FirstIndent 0.25in>
  <SpaceBefore 6pt><SpaceAfter 3pt>
  <Alignment l><pts 12>
>
<!DefinePar H4
  <Alignment l>
>
<!DefinePar H5
  <Alignment l>
>
<!DefinePar BODY
  <LeftIndent 0.75in><FirstIndent 0.75in>
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
  <Alignment l><plain><pts 12>
>
<!DefinePar OL
  <FirstIndent 1.0in> <LeftIndent 1.5in>
  <TabStops <TabStop 1.25in>>
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
  <AutoNumber Yes> <NumberFormat \"<n+>\t\">
  <Alignment l><plain><pts 12>
>
<!DefinePar UL
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
  <FirstIndent 1.0in> <LeftIndent 1.5in>
  <TabStops <TabStop 1.25in>>
  <AutoNumber Yes> <NumberFormat \"o\\t\">
  <Alignment l><plain><pts 12>
>
<!DefinePar DL
  <AutoNumber No>
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
  <FirstIndent 0.5in> <LeftIndent 2.5in>
  <TabStops <TabStop 2.5in>>
  <Alignment l><plain><pts 12>
>
<!DefinePar MENU
  <AutoNumber No>
  <WithNext yes><WithPrev yes>
  <Alignment l><plain><pts 12>
>
<!DefinePar DIR
  <AutoNumber No>
  <Alignment l><plain><pts 12>
>
<!DefinePar XMP
  <AutoNumber No>
  <FirstIndent 0in> <LeftIndent 0in>
  <Alignment l><plain>
  <Family Courier><pts 9>
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
>
<!DefinePar LISTING
  <AutoNumber No>
  <FirstIndent 0in> <LeftIndent 0in>
  <Alignment l><plain>
  <Family Courier><pts 8>
  <SpaceBefore 3pt><SpaceAfter 3pt><BlockSize 3>
>
")

(princ *style-sheet*)

;; From almy2.1
;; push and pop treat variable v as a stack
(defmacro push (v l)
        `(setf ,l (cons ,v ,l)))

(defmacro pop (l)
        `(prog1 (first ,l) (setf ,l (rest ,l))))


(defun start-para (stream tag)
  (format stream "<~A>~%" tag)
  )

(defun end-para (stream)
  (format stream "~%~%")
  )


(defun convert-data (literal)
  (do ((c (read-char) (read-char))
       d1 d2 d3
       )
      ((eq c #\Newline) nil)
      
      (cond ((eq c #\\)
	     (cond ((setf d1 (digit-char-p (setf c (read-char))))
		    (setf d2 (digit-char-p (read-char))) 
		    (setf d3 (digit-char-p (read-char)))
		    (princ (int-char (+ d3 (* 8 (+ d2 (* 8 d1))))))
		    )
		   ((eq c #\\) (princ "\\\\"))
		   ((eq c #\n) (format t (if literal "<HardReturn>" " ")))
		   ((eq c #\|) ;;nothing
		    )
		   ((eq c #\s) (princ " "))
		   ) )
	    ((member c '(#\< #\>)) (format t "\\~A" c))
	    ((eq c #\space) (format t (if literal "<HardSpace>" " ")))
	    ((eql c 7) (format t "<tab>"))
	    (t (princ c))
	) ) )

(defun html2mml ()
  (do ((c (read-char) (read-char))
       stack
       tag
       attrs
       )
      ((null c)) ;; quit at end of file
      
      (case c
	    (#\Newline ;; do nothing
	     )
	    
	    (#\( (let ((gi (read))
		       )
		   ;; open tag
		   (push gi stack)
		   (cond ((member gi *para-tags*)
			  (setq tag gi)
			  (start-para t tag)
			  )
			 ((eq gi 'a)
			  (let ((href (second (assoc 'href attrs)))
				)
			    ;; watch out for >'s and 's
			    (format t "<Marker <MType 8> <MText `message www ~A'>><italic>" href)
			    )
			  )
			 )
		   (setq attrs nil)
		   ))
	    (#\) (let ((gi (read))
		       )
		   (pop stack)
		   (cond ((member gi *para-tags*)
			  (setq tag nil))
			 ((eq gi 'a) (format t "<noitalic>"))
			 ((eq gi 'dt) (format t "<tab>"))
			 ((member gi '(p dd li)) (format t "<par>"))
			 )
		   ))
	    
	    (#\-
	     (unless tag
		     (end-para t)
		     (dolist (gi stack)
			     (when (member gi *para-tags*)
				   (setq tag gi)
				   (return)
				   ) )
		     (start-para t tag)
		     )
	     (convert-data (member tag *literal-tags*))
	     )
	    
	    (#\& (let ((name (read))
		       )
		   ;; name
		   ))
	    
	    (#\? (let ((pi (read-line))
		       )
		   ;; processing instruction
		   ))
	    (#\A (let ((name (read))
		       (token (read))
		       )
		   (case token
			 (IMPLIED ;; nothing
			  )
			 (CDATA (let ((data (read-line))
				      )
				  (push (list name data) attrs)
				  ))
			 (TOKEN (let ((tokens (read-line)) ;;@@ read tokens til \n
				      )
				  ;; tokens
				  ))
			 (NOTATION (let ((name (read))
					 )
				     ;; notation
				     ))
			 (ENTITY (let ((name (read))
				       )
				   ;; general entity
				   ))
			 (ID (let ((id (read))
				   )
			       ;; id
			       ))
			 (IDREF (let ((ids (read-line)) ;; @@ read ids til \n
				      )
				  ;; id's
				  ))
			 ) ) )
	    
	    (#\D (read-line) ;; do like A but for external data name
	     )
	    ) )
  )

(html2mml)

--cut-here--


From joe@athena.mit.edu  Fri Jul 24 17:17:17 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25134; Fri, 24 Jul 92 17:17:17 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02797; Fri, 24 Jul 92 17:17:19 +0200
Received: from CALCULUS-1.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA25953; Fri, 24 Jul 92 11:16:58 EDT
From: joe@athena.mit.edu
Received: by CALCULUS-1.MIT.EDU (5.61/4.7) id AA09483; Fri, 24 Jul 92 11:16:50 -0400
Message-Id: <9207241516.AA09483@CALCULUS-1.MIT.EDU>
To: www-talk@nxoc01.cern.ch
Subject: Connecting WWW and Tk
Date: Fri, 24 Jul 92 11:16:49 EDT

I'm working on a frontend to World Wide Web navigation system
using the Tk2.1 toolkit.

I should have an alpha version ready to test in about a week or so.


From connolly@imagine.convex.com  Fri Jul 24 17:33:12 1992
Return-Path: <connolly@imagine.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25174; Fri, 24 Jul 92 17:33:12 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04630; Fri, 24 Jul 92 17:33:05 +0200
Received: from imagine.convex.com by convex.convex.com (5.64/1.35)
	id AA02942; Fri, 24 Jul 92 10:32:17 -0500
Received: from localhost by imagine.convex.com (5.64/1.28)
	id AA26087; Fri, 24 Jul 92 10:32:15 -0500
Message-Id: <9207241532.AA26087@imagine.convex.com>
To: cni-arch@uccvma.bitnet
Cc: wais-talk@think.com, www-talk@nxoc01.cern.ch
Subject: SGML for URLs
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="cut-here"
Date: Fri, 24 Jul 92 10:32:14 CDT
From: Dan Connolly <connolly@imagine.convex.com>

--cut-here
Content-Type: multipart/alternamtive; boundary=alt

--alt

                                   OBJECTIVE
                                       
   The issue of what to call these things we're defining has been discussed at
   length. First it was Universal Document Identifier. The name has changed as
   the objective has been refined. The latest name is Universal Resource
   Locator. The provisional charter is;
   
    To define a printable string syntax to the allow
    
      The expression of the address on the network of any accesable object
      using existing information retrieval protocols;
      
      The expression of the name of any object held in a directory system or
      unique naming space on the network;
      
      The distinction to be made easily in the syntax between such protocols
      and directories and name spaces;
      
      New protocols, directories and naming schemes to be included as and when
      they are developed. [1]
      
      Clearly what we are about is defining a language, i.e.  a syntax and
      semantics for communicating some information.
      
      The information is the location and/or identity of some information
      object in the global hypertext. It's a citation or a reference or a
      hypertext link anchor.
      
      I propose a specification for the language of URLs, in the context of a
      specification for a language of global hypertext references.
      
      These global hypertext references include more semantics than just
      differentiating between protocols and accessing data. There are also
      issues of determining the type and the identity of the referent data.
      
SGML as a syntactic specification tool

   That's what it's for, after all. What I propose is a DTD that (with the
   default SGML declaration) defines the language of global hypertext
   references.
   
    Some examples of the language:
    

<http host="info.cern.ch" path="hypertext/TheProject.html">
<http host="info.cern.ch" path="hypertext/people.html" anchor="timbl">
<http host="info.cern.ch" path="XFIND" search="SGML">

<prospero host="archie.mgil.ca" path="pub/ftp">

<file host="snoopy" path="~connolly/bin/cgrep.pl" type=appl subtype=x-perl>

<ftp host="export.lcs.mit.edu" dir="contrib"
name="XcRichText-1.2.tar.Z">

<usenet group="comp.infosystems.gopher">
<usenet article="<abc@convex.com>">

<wais host="quake.think.com" database="INFO" search="help">
<wais host="quake.think.com" database="INFO" wtype="TEXT" size=1000
        path="/usr/local/wais/README" >

<telnet host="info.cern.ch">

<gopher host="boombox.umn.edu" port=70>
<gopher host="boombox.umn.edu" selector="foo &#34;bar&#34;" gtype=0 >

   The DTD uses only the most basic features of SGML, and thus the resulting
   language is not very complex. Implementation of a parser for this particular
   SGML language is a vastly more simple task than implementing an SGML parser.
   At the same time, we get the benefits of a rigorously defined language based
   on established standards.
   
  Note:                  I haven't studied the HyTime standard very carefully.
                         I think it's beyond the scope of the task at hand, but
                         I'd like to have that opinion substantiated by someone
                         who really knows. In particular, its Finite Coordinate
                         Systems could be used to model positions within
                         documents: characters, lines, paragraphs.
                         
  RELAVENT ISSUES
  
  Verbosity              This syntax is somewhat verbose, but I think that
                         implicit markup (punctuation rather than names) will
                         lead to a mass of quoting in many cases. And the
                         consistency between schemes is not necessarily very
                         high.
                         
  Long URLs              Extra whitespace between tokens has no effect. There
                         is still the problem of quoted strings that are longer
                         than a mailer allows. Certainly there's some SGML
                         feature that I'm not aware of that addresses the
                         issue.
                         
  I don't believe there's a way to restrict the length of an element, though
                         there is a 960 character limit on the length of an
                         attribute value (in the default SGML declaration).
                         
  Quoting                The SGML numeric character reference (e.g. &#128;)
                         allows an attribute value literal to represent any
                         sequence of bytes.
                         
  NAMELEN                The default SGML declaration specifies that names of
                         elements and attributes be 8 characters or less. It's
                         a conceptually simple matter to operate under an SGML
                         declaration where NAMELEN is higher.
                         
  Extensibility          One problem with the current UDI syntax specification
                         is that it seems to allow new schemes to add arbitrary
                         complexity to the grammar. This specification limits
                         the language to an SMGL start tag.
                         
  If we adopt this spec, we need to give it a public text identifier, and
                         maintain a registry of the names used (probably with
                         the IANA).
                         
  DEPLOYMENT AND USAGE
  
   The first place to try this specification out is in the WWW browser. (I'll
   try to make the code changes if I find time). It's a simple matter of
   elevating UDI's as SGML attributes to URLs as SGML elements. I'd like to
   have someone who really knows SGML to have a look at this DTD and see if it
   can be improved. And I'd like to study the HyTime standard, the Davenport
   DASH, the CFCM standard, etc. to see how this element meshes with their
   citation strategies. Also, it would be nice to have explicit support from
   WAIS and Gopher clients -- drag and drop comes to mind.
   
SGML and semantics

   SGML is famous for being divorced from application semantics. Most of the
   semantics of URLs is in the constituent protocols. All we need to do is
   define a way to parse a URL and pass the various bits to the protocol. But
   as long as we're going to all the trouble to gather information accessible
   with all these protocols into one specification, it makes sense to define
   some semantics common to most applications that will use URLs.
   
  DATA TYPES
  
   Some of the schemes have explicit type information (wais, gopher), some have
   implicit typing (html, USENET), and some have no typing at all (file, ftp).
   The MIME content-type system is general and useful enough to warrant
   support. An application should be able to determine the content-type of the
   data regardless of the protocol.
   
  RESOURCE IDENTITY
  
   Many applications have use for determining whether two URLs refer to the
   same information. Various schemes (such as USENET article id's) may have
   semantics for identifying resources. But I think this capability is so
   widely useful that it should be coherently supported for all protocols.
   
                                                            connolly@convex.com
--alt
Content-Type: text/x-html

<!DOCTYPE html SYSTEM>
<title>Using SGML to define Universal Resource Locators</title>

<H1>Objective</H1>

The issue of what to call these things we're defining has been
discussed at length. First it was Universal Document Identifier. The
name has changed as the objective has been refined. The latest name is
Universal Resource Locator. The provisional charter is;

<a HREF="x-message-id:<9206262004.AA29919@zippy.lcs.mit.edu>">
<h4>To define a printable string syntax to the allow</h4>

<ol>
<li>The expression of the address on the network of any accesable
object using existing information retrieval protocols;

<li>The expression of the name of any object held in a directory
system or unique naming space on the network;

<li>The distinction to be made easily in the syntax between such
protocols and directories and name spaces;

<li>New protocols, directories and naming schemes to be included as
and when they are developed.
</ol>
</a>

<p>
Clearly what we are about is defining a language, i.e.  a syntax and
semantics for communicating some information.
<p>

The information is the location and/or identity of some information
object in the global hypertext. It's a citation or a reference or a
hypertext link anchor.
<p>

I propose a specification for the language of URLs, in the context of
a specification for a language of global hypertext references.
<p>

These global hypertext references include more semantics than just
differentiating between protocols and accessing data. There are also
issues of determining the type and the identity of the referent data.

<H2>SGML as a syntactic specification tool</H2>

That's what it's for, after all. What I propose is a DTD that
(with the default SGML declaration) defines the language of
global hypertext references.
<p>

<h4>Some examples of the language:</h4>
<XMP>
<http host="info.cern.ch" path="hypertext/TheProject.html">
<http host="info.cern.ch" path="hypertext/people.html" anchor="timbl">
<http host="info.cern.ch" path="XFIND" search="SGML">

<prospero host="archie.mgil.ca" path="pub/ftp">

<file host="snoopy" path="~connolly/bin/cgrep.pl" type=appl subtype=x-perl>

<ftp host="export.lcs.mit.edu" dir="contrib"
name="XcRichText-1.2.tar.Z">

<usenet group="comp.infosystems.gopher">
<usenet article="<abc@convex.com>">

<wais host="quake.think.com" database="INFO" search="help">
<wais host="quake.think.com" database="INFO" wtype="TEXT" size=1000
	path="/usr/local/wais/README" >

<telnet host="info.cern.ch">

<gopher host="boombox.umn.edu" port=70>
<gopher host="boombox.umn.edu" selector="foo &#34;bar&#34;" gtype=0 >
</XMP>

The DTD uses only the most basic features of SGML, and thus
the resulting language is not very complex. Implementation
of a parser for this particular SGML language is a vastly
more simple task than implementing an SGML parser.

At the same time, we get the benefits of a rigorously
defined language based on established standards.

<dl><dt>Note:
<dd>I haven't studied the HyTime standard very
carefully. I think it's beyond the scope of the task at
hand, but I'd like to have that opinion substantiated by someone
who really knows. In particular, its Finite Coordinate Systems
could be used to model positions within documents: characters,
lines, paragraphs.
</dl><p>

<h3>Relavent Issues</h3>

<dl>
<dt>Verbosity <dd>This syntax is somewhat verbose, but I think that
implicit markup (punctuation rather than names) will lead to a mass of
quoting in many cases. And the consistency between schemes is not
necessarily very high.

<dt>Long URLs
<dd>Extra whitespace between tokens has no effect. There is still
the problem of quoted strings that are longer than a mailer allows.
Certainly there's some SGML feature that I'm not aware of that
addresses the issue.
<p>
I don't believe there's a way to restrict the length of an element,
though there is a 960 character limit on the length of an attribute
value (in the default SGML declaration).

<dt>Quoting
<dd>The SGML numeric character reference (e.g. &#128;) allows
an attribute value literal to represent any sequence of bytes.

<dt>NAMELEN
<dd>The default SGML declaration specifies that names of
elements and attributes be 8 characters or less. It's a
conceptually simple matter to operate under an SGML declaration
where NAMELEN is higher.

<dt>Extensibility
<dd>One problem with the current UDI syntax specification is that it
seems to allow new schemes to add arbitrary complexity to the grammar.
This specification limits the language to an SMGL start tag.
<p>
If we adopt this spec, we need to give it a public text identifier,
and maintain a registry of the names used (probably with the IANA).
</dl>

<h3>Deployment and Usage</h3>

The first place to try this specification out is in the
WWW browser. (I'll try to make the code changes if I find
time). It's a simple matter of elevating UDI's as SGML
attributes to URLs as SGML elements.

I'd like to have someone who really knows SGML to have a look
at this DTD and see if it can be improved. And I'd like
to study the HyTime standard, the Davenport DASH, the CFCM
standard, etc. to see how this element meshes with their
citation strategies.

Also, it would be nice to have explicit support from WAIS and Gopher
clients -- drag and drop comes to mind.

<h2>SGML and semantics</h2>

SGML is famous for being divorced from application semantics.
Most of the semantics of URLs is in the constituent protocols.
All we need to do is define a way to parse a URL and pass
the various bits to the protocol.

But as long as we're going to all the trouble to gather information
accessible with all these protocols into one specification, it makes
sense to define some semantics common to most applications that will
use URLs.

<h3>Data Types</h3>

Some of the schemes have explicit type information (wais, gopher),
some have implicit typing (html, USENET), and some have no typing at
all (file, ftp). The MIME content-type system is general and useful
enough to warrant support. An application should be able to determine
the content-type of the data regardless of the protocol.

<h3>Resource Identity</h3>

Many applications have use for determining whether two URLs refer
to the same information. Various schemes (such as USENET article
id's) may have semantics for identifying resources. But I think this
capability is so widely useful that it should be coherently supported
for all protocols.

<address>connolly@convex.com</>
</HTML>

--alt--
--cut-here

<!-- Universal Resource Locator specification
     derived from http://info.cern.ch/hypertext/WWW/Addressing/BNF.html
     on 24 July 1992
     by connolly@convex.com -->

<!-- Typical usage:
	<!DOCTYPE url SYSTEM>
		(we need a public identifier)
	or as part of another SGML document type:
	<!ELEMENT url SYSTEM>
	&url;
	-->

<!-- minimization? I believe you can omit the name= part
	of an SGML attribute specification in some circumstances.
	I don't think it works with CDATA attributes because
	order is not significant. -->

<!-- news: scheme renames USENET -->
<!-- file: is somewhat vague. I suggest explicit support for FTP: -->
<!ENTITY % schemes "http|file|ftp|usenet|telnet|prospero|gopher|wais">

<!ELEMENT url - - (%schemes;)* >
<!-- content model of URL: more than one element in a URL? (obviously
	an application can use multiple URLs. The question is whether
	to define semantics for multiple elements in a single URL.)

	Also, what about type, size, search information? Perhaps
	one element should describe the connection information,
	another element or elements describes the path to the data
	(allowing us to define semantics of hierarchical databases)
	and another element defines the type of information there.

	-->

<!ELEMENT (%schemes;) - O EMPTY >

<!-- TCP connection info: internet domain address and port number -->
<!ENTITY % host "host CDATA #REQUIRED" >
<!ENTITY % hostp "%host; port NUMBER #IMPLIED" >

<!ENTITY % types "text|image|audio|video|message|multi|appl">
<!ENTITY % stypes "plain|richtext|
	gif|g3fax|
	basic|
	mpeg|
	rfc822|external|partial|
	mixed|altern|parallel|
	octets|ps|oda">
<!-- content-type parameters? -->

<!ENTITY % cte "7bit|8bit|qp|base64|binary"
	-- we could define several of the gopher types
	   in terms of encodings and types
		e.g. x-binhex, application/x-stuffit
	-->

<!ENTITY % MD5 "datasig CDATA #IMPLIED" -- MD5 data signature -->
<!ENTITY % bytes "bytes NUMBER #IMPLIED">
<!ENTITY % lines "lines NUMBER #IMPLIED">

<!ATTLIST http
	-- information accessing attributes --
	%hostp;
	path CDATA #REQUIRED -- server local name --
		-- must match xalpha [/ path ] --
		-- can a CDATA attribute contain an arbitrary bytestream? --
	search CDATA #IMPLIED -- search terms --
	anchor CDATA #IMPLIED -- HTML anchor name --

	-- information content attributes --
	type (%types) text
	subtype (%stypes) #IMPLIED
	encoding (%cte) 7bit
	%MD5;
	%bytes;
	>

<!ATTLIST prospero
	%hostp;
	path CDATA #REQUIRED
	-- prospero path should not be constrained to WWW path syntax --


	-- information content attributes --
	type (%types) appl
	subtype (%stypes) octets
	encoding (%cte) binary
	%MD5;
	%bytes;
	>

<!ATTLIST file
	%host;
	path CDATA #REQUIRED
	-- unix path should not be constrained to WWW path syntax --

	-- information content attributes --
	type (%types) appl
	subtype (%stypes) octets
	encoding (%cte) binary
	%MD5;
	%bytes;
	>

<!ATTLIST ftp
	%hostp;
	dir CDATA #REQUIRED -- directory for cd command --
	name CDATA #REQUIRED -- name for get command --
	user CDATA "anonymous" -- anonymous ftp by default --
	password CDATA #IMPLIED -- not always needed --

	-- information content attributes --
	type (%types) appl
	subtype (%stypes) octets
	encoding (%cte) binary -- use 7bit for ascii transfers --
	%MD5;
	%bytes;
	>

<!ATTLIST usenet
	group CDATA #IMPLIED -- usenet newsgroup name --
	article CDATA #IMPLIED -- article message-id --

	-- information content attributes --
	type (%types) message
	subtype (%stypes) rfc822
	encoding (%cte) 7bit
	%MD5;
	%lines; -- you can add headers without changing a USENET
			article, so bytes isn't a good measure --
	>

<!-- should we split this into two nodes so that
	we can put #REQUIRED on the size and type for documents? -->
<!ATTLIST wais
	%hostp;
	database CDATA #IMPLIED -- WAIS database name --
	search CDATA #IMPLIED -- search terms --
		-- what about relavent documents? --
	wtype CDATA #IMPLIED -- WAIS data type --
		-- this should be obsoleted by the MIME type system --
	bytes NUMBER #IMPLIED
	path CDATA #IMPLIED -- split into original x, y? --

	-- information content attributes --
	type (%types) text
	subtype (%stypes) plain
	encoding (%cte) binary
	%MD5;
	>

<!ATTLIST telnet
	%hostp;
	user CDATA #IMPLIED -- username --
	>

<!ATTLIST gopher
	%hostp;
	gtype CDATA "1" -- gopher type --
		-- again, MIME types should be used --
		-- www browser can be inundated by non-text data
		   unless it recognizes other types --
	selector CDATA "" -- gopher object selector --
	search CDATA #IMPLIED -- fulltext search terms --

	-- information content attributes --
	type (%types) #IMPLIED
	subtype (%stypes) #IMPLIED
	encoding (%cte) binary
	%MD5;
	%bytes;
	>
--cut-here
Content-type: text/sgml
Content-Description: Example URLs

<!DOCTYPE url SYSTEM>
<url>
<http host="info.cern.ch" path="hypertext/TheProject.html">
<http host="info.cern.ch" path="hypertext/people.html" anchor="timbl">
<http host="info.cern.ch" path="XFIND" search="SGML">

<prospero host="archie.mgil.ca" path="pub/ftp">

<file host="snoopy" path="~connolly/bin/cgrep.pl" type=appl subtype=x-perl>

<ftp host="export.lcs.mit.edu" dir="contrib"
name="XcRichText-1.2.tar.Z">

<usenet group="comp.infosystems.gopher">
<usenet article="<abc@convex.com>">

<wais host="quake.think.com" database="INFO" search="help">
<wais host="quake.think.com" database="INFO" wtype="TEXT" size=1000
	path="/usr/local/wais/README" >

<telnet host="info.cern.ch">

<gopher host="boombox.umn.edu" port=70>
<gopher host="boombox.umn.edu" selector="foo &#34;bar&#34;" gtype=0 >
</url>

--cut-here--

From joe@athena.mit.edu  Sat Jul 25 14:15:38 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA26927; Sat, 25 Jul 92 14:15:38 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20507; Sat, 25 Jul 92 14:15:41 +0200
Received: from CALCULUS-1.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA01267; Sat, 25 Jul 92 08:15:07 EDT
Received: by CALCULUS-1.MIT.EDU (5.61/4.7) id AA17334; Sat, 25 Jul 92 08:15:04 -0400
Message-Id: <9207251215.AA17334@CALCULUS-1.MIT.EDU>
To: cdsdev@athena.mit.edu, www-talk@nxoc01.cern.ch
Subject: tk interface to World Wide Web
Date: Sat, 25 Jul 92 08:15:02 EDT
From: Joseph Wang <joe@athena.mit.edu>


It looks like that I will have an alpha-test version of the tk
interface to WWW done by the end of next week.

Is there anyone out there who can donate some disk space to put it on
anonymous ftp?



From jfg@granit.dtb.dk.dtb.dk  Sat Jul 25 17:56:17 1992
Return-Path: <jfg@granit.dtb.dk.dtb.dk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA27211; Sat, 25 Jul 92 17:56:17 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00407; Sat, 25 Jul 92 17:56:21 +0200
Received: by  granit.dtb.dk.dtb.dk  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01746; Sat, 25 Jul 92 17:54:10 MET DST
Date: Sat, 25 Jul 92 17:54:10 MET DST
From: jfg@granit.dtb.dk.dtb.dk (Jean-Francois Groff)
Message-Id: <9207251554.AA01746@ granit.dtb.dk.dtb.dk >
To: Joseph Wang <joe@athena.mit.edu>
Cc: www-talk@nxoc01.cern.ch, cdsdev@athena.mit.edu
Subject: Re: tk interface to World Wide Web
References: <9207251215.AA17334@CALCULUS-1.MIT.EDU>

  This interface will be most welcome. We had looked at Tcl/Tk to
create an X browser, but spent our time on other things as usual :-)
Do you use the hman object that appeared a few months ago (or was it
htext?)

  Please send it to us, and we'll put it up for ftp. I'll try to find
someone at Cern to test it, as I don't have Tcl here. Just drop it
into /pub/incoming at info.cern.ch...

  Thanks again !

--
  Jean-Francois Groff (jfg@info.cern.ch)
  World-Wide Web initiative
  CERN, ECP division, CH-1211 Geneva 23, Switzerland
  Phone +41 22 767 3755 -- Fax +41 22 767 7155
--
"Life may at times be boring, but is it more fun to be dead ?"
                                                  -- Alcor


From joe@athena.mit.edu  Sat Jul 25 18:02:55 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA27219; Sat, 25 Jul 92 18:02:55 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00498; Sat, 25 Jul 92 18:02:59 +0200
Received: from CALCULUS-1.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA03552; Sat, 25 Jul 92 12:02:26 EDT
Received: by CALCULUS-1.MIT.EDU (5.61/4.7) id AA21446; Sat, 25 Jul 92 12:02:22 -0400
Message-Id: <9207251602.AA21446@CALCULUS-1.MIT.EDU>
To: www-talk@nxoc01.cern.ch, tcl-archive@barkley.berkeley.edu
Cc: cdsdev@athena.mit.edu
Subject: tkWWW-0.1
Date: Sat, 25 Jul 92 12:02:21 EDT
From: Joseph Wang <joe@athena.mit.edu>


I've uploaded a very preliminary interface to World Wide Web using the
tk toolkit to export.lcs.mit.edu and the tcl archive in
barkley.berkeley.edu.

tkWWW Version 0.1 alpha (joe@athena.mit.edu)
--------------------------------------------

This a first pass at a browser for World Wide Web using the tk
library.  It is very buggy.  Use at your own risk.

The Tk browser has the following advantages.

1. Since the entire user interface is written in an interpreted 
   language, it should be very easy to make modifications and extensions
   to the system.

2. More important, it is possible to imbed Tk code into hypertext
   documents.  To see an example of this, load in the hypertext file
   file:$pwd/Tcl/text2.html


INSTALLATION
------------
In order to install tkWWW you will need

   The code for the WWW line-mode browser. (anon ftp from info.cern.ch)
   Libraries for tk and tcl (I'm using tk2.1 and tcl6.3)

   A wish intepreter which contains the Hyper and XYGraph widgets

To install this program, unpack the WWW line-mode browser source and 
cd to the directory WWW.  Unpack this tar file. 




From arl@cs.hut.fi  Sun Jul 26 00:31:43 1992
Return-Path: <arl@cs.hut.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA27729; Sun, 26 Jul 92 00:31:43 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA18423; Sun, 26 Jul 92 00:31:48 +0200
Received: by cardhu.cs.hut.fi id AA11360
  (5.65c8/HUTCS-C 1.3 for www-talk@nxoc01.cern.ch); Sun, 26 Jul 1992 01:31:28 +0300
Date: Sun, 26 Jul 1992 01:31:28 +0300
Message-Id: <199207252231.AA11360@cardhu.cs.hut.fi>
From: Ari Lemmke <arl@cs.hut.fi>
Sender: arl@cs.hut.fi
To: www-talk@nxoc01.cern.ch
Subject: Erwise 0.1
Reply-To: <arl@cs.hut.fi>
Organization: Helsinki University of Technology, Finland.


	Tired for waiting my programming group to finish their
	work ;-) I released Erwise beta 0.1 sources ..

	Hmm. What's Erwise? WWW X client for Motif.
	[who needs Motif anyway .. ;-]

	FTP at nic.funet.fi:/pub/unix/hypertext/world-wide-web/src
		erwise-0.1.tar.Z

	Enjoy!

	arl		// A desperate student programming work tutor


From evas@cs.few.eur.nl  Wed Aug  5 16:51:42 1992
Return-Path: <evas@cs.few.eur.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23605; Wed, 5 Aug 92 16:51:42 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14996; Wed, 5 Aug 92 16:52:00 +0200
Received: from evas@slc01.cs.few.eur.nl by cs.few.eur.nl (5.67/EUR)
	id AA21544; Wed, 5 Aug 92 16:51:27 +0200
From: Eelco van Asperen <evas@cs.few.eur.nl>
Received: by slc01.cs.few.eur.nl (5.67/EUR/BSD)
	id AA20447; Wed, 5 Aug 92 16:51:21 +0200
Date: Wed, 5 Aug 92 16:51:21 +0200
Message-Id: <9208051451.AA20447@slc01.cs.few.eur.nl>
To: www-talk@nxoc01.cern.ch
Subject: Converting preformatted documents to HTML


In our HTML files, I frequently want to refer the reader to man-pages
or the GNU documentation. So, I wrote two small scripts to convert
man-pages and GNU Info files to HTML and added a bit of code to
the HTTPD daemon to call these filters if it found a .man or a .info
file. With this, one can write f.e. 
	"<A HREF=http://kaa.cs.few.eur.nl/info/gcc/gcc.info>GCC</A>"
to refer to the (extensive) documentation for the GNU C compiler.
So far, so good.

The Info files are the GNU equivalent of man pages and they
are complete formatted documents that contain references. 
The problem I've run into is that HTML does not offer a mode in 
which all formatting is preserved *and* tags are recognised.
The LISTING mode does preserve the formatting but does not see the 
hypertext references; the NORMAL mode does recognise the references 
but destroys the formatting (indentation, line breaks). 
Switching from LISTING to NORMAL mode (and back) in the middle of 
a paragraph is not feasible either because that will cause a blank line 
to be inserted at that point.

It would be handy to have a mode that does preserve formatting and
recognizes SGML tags since there are no doubt other hypertext formats
that could be converted to HTML this way.

Thoughts anyone ?

Eelco van Asperen.           || Erasmus University Rotterdam
internet: evas@cs.few.eur.nl || Department of Computer Science, room H4-32
New, Improved, a disclaimer: || PObox 1738, 3000 DR Rotterdam, The Netherlands
*** publishing private email is not allowed by the author of this message. ***


From timbl  Wed Aug  5 18:59:38 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23998; Wed, 5 Aug 92 18:59:38 MET DST
Date: Wed, 5 Aug 92 18:59:38 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9208051659.AA23998@ nxoc01.cern.ch >
To: evas@cs.few.eur.nl, www-talk@nxoc01.cern.ch
Subject: Re: Converting preformatted documents to HTML
Cc: defert@cernvax.cern.ch

Eelco,

I agree that it would be useful to have a mono-spaced litteral
text format which would still accept tags other than the closing
tag.  Because tags, especially if
automatically generated, can easily produce very long lines
unless they are broken up, it might be useful for
thiat format to have explicit new lines. (The paragraph
mark <P> could be used, with hte convention that it
represents only a new line).  Like you, I have come
across the need for it mainly in converted information.

It would be very easy to put in the browsers.

By the way, have you seen the Gnu Info convertion
which Philippe Defert does, on http://asis01.cern.ch:80/info/ ?
He uses a perl script. Would you both like to publish
your scripts?  They would be useful examples for anyone
writing converters, and people might wantto set up their
own Gnu Info servers too.

Tim BL

From joe@athena.mit.edu  Wed Aug  5 19:19:54 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24094; Wed, 5 Aug 92 19:19:54 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24222; Wed, 5 Aug 92 19:20:18 +0200
Received: from MAJOR.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA12712; Wed, 5 Aug 92 13:19:55 EDT
Received: by major (5.57/4.7) id AA23552; Wed, 5 Aug 92 13:19:53 -0400
Message-Id: <9208051719.AA23552@major>
To: www-talk@nxoc01.cern.ch (Tim Berners-Lee)
Subject: Re: Converting preformatted documents to HTML 
In-Reply-To: Your message of Wed, 05 Aug 92 18:59:38 +0700.
             <9208051659.AA23998@ nxoc01.cern.ch > 
Date: Wed, 05 Aug 92 13:19:51 EDT
From: Joseph Wang <joe@athena.mit.edu>


On a related topic, has anyone written a script that would convert
Usenet FAQ files (such as the one for comp.lang.c) into linked 
HTML files.  It seems that all this script would have to do is to
scan for a regexp that signifies begin question, chop it up into
little HTML files, and then create a HTML index with links to the
little files.



From timbl  Thu Aug  6 23:23:36 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA27633; Thu, 6 Aug 92 23:23:36 MET DST
Date: Thu, 6 Aug 92 23:23:36 MET DST
From: timbl (Tim Berners-Lee)
Message-Id: <9208062123.AA27633@ nxoc01.cern.ch >
To: www-talk@nxoc01.cern.ch
Subject: perl server script for Gnu info W3 server


Phillippe Defert has kindly provided  copy of his perl
script. The script is online as 
http://info.cern.ch/hypertext/WWW/Daemon/Implementation/asis.txt
and the results are visible as http://asis01.cern.ch:80/info/

Tim Berners-Lee

(Oh for a hypertext mail reader!)

From connolly@pixel.convex.com  Fri Aug  7 07:58:01 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28095; Fri, 7 Aug 92 07:58:01 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26524; Fri, 7 Aug 92 07:58:26 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12409; Fri, 7 Aug 92 00:57:25 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA10806; Fri, 7 Aug 92 00:57:16 -0500
Message-Id: <9208070557.AA10806@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: more on FrameMaker support
Date: Fri, 07 Aug 92 00:57:16 CDT
From: Dan Connolly <connolly@pixel.convex.com>

I've just cooked up a MIF->HTML filter (for frame docs created from
HTML files in the first place). It's written in XLISP, which is a
widely available lisp interpreter with OOP extensions (the thing builds
on PCs, Macs, and Unix boxes).

This completes the circle:
	# HTML to MML
	sgmls foo.html | xlisp html2mml.l >foo.mml
	# now you can load foo.mml into frame
	# Then you can save it as mif. Or, you
	# can just do
	mmltomif <foo.mml >foo.mif
	# Then you can convert it back to html:
	xlisp mif2html.l <foo.mif >foo.html

Note that this does not address the issue of converting "legacy
documents" currently in Frame to HTML. The Frame documents
have to use the right paragraph tags so that I can recognize
the SGML structure of the file.

But it has some interesting possibilities:

* Frame can be configured to convert files based on
their extension. So you can edit some frame config
file so that when you open foo.html, it invokes
the html2mml and mmltomif filters, and voila! you
can load WWW files into FrameMaker.

I think you can do the same thing for saving. So
you could use FrameMaker much like the NeXT browser.

* Frame has hypertext which is extensible through
RPC calls. I translated the HTML sequence
	<A HREF="scheme:addr">text</a>
to
	<italic>
	<Marker <MType 8> <MText "message www scheme:addr">>
	text
	<noitalic>
in MML. Marker type 8 is hypertext. So when you click on
"text", the MText is invoked. "message www" means make
an RPC call to www with "scheme:addr" as the argument.

So we could write a www RPC client that fetches WWW nodes
and hands them to Frame.

I'm not going to distribute the code right now,
because 1) it's not very polished, and 2) the www-talk
audience didn't respond to my html->mml filter with
much enthusiasm (I assume that's because it required
you to build XLISP (easy) and SGMLs (bigger, but still
easy)).

There are a few things that I didn't bother to code yet:

* mapping Frame's funkey apostrophies and quotes
to plain ASCII. (in general, we want to convert
Frame's funky "Diacritic Encoding" to whatever character
set HTML uses (ISO latin-1?))

* mapping <A NAME="2"> to <MText "newlink 2"> and back.

* mapping <A HREF="#2"> to <MText "gotolink 2"> and back.

* mapping <A HREF="file:foo#bar"> to <MText "gotolink foo:bar"> and back.

Good night.

Dan

p.s. I discovered that the DTD in the WWW browser code
considers <LI>, <DT>, and <DD> to be empty elements.
I changed my copy of html.dtd accordingly. The one
in the web will need to be changed.

This causes the UL, OL, DL, etc. items to have mixed
content, which gives newlines all sorts of tricky
twists.

Mixed content is something to be avoided in SGML DTD's,
for reasons that are far too ugly to explain right now.

From evas@cs.few.eur.nl  Fri Aug  7 15:30:40 1992
Return-Path: <evas@cs.few.eur.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29092; Fri, 7 Aug 92 15:30:40 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21386; Fri, 7 Aug 92 15:30:54 +0200
Received: from evas@slc01.cs.few.eur.nl by cs.few.eur.nl (5.67/EUR)
	id AA21300; Fri, 7 Aug 92 15:30:27 +0200
From: Eelco van Asperen <evas@cs.few.eur.nl>
Received: by slc01.cs.few.eur.nl (5.67/EUR/BSD)
	id AA23666; Fri, 7 Aug 92 15:30:22 +0200
Date: Fri, 7 Aug 92 15:30:22 +0200
Message-Id: <9208071330.AA23666@slc01.cs.few.eur.nl>
To: www-talk@nxoc01.cern.ch
Subject: Re: Converting preformatted documents to HTML


> I agree that it would be useful to have a mono-spaced litteral
> text format which would still accept tags other than the closing
> tag.  Because tags, especially if
> automatically generated, can easily produce very long lines
> unless they are broken up, it might be useful for
> thiat format to have explicit new lines. (The paragraph
> mark <P> could be used, with hte convention that it
> represents only a new line).  Like you, I have come
> across the need for it mainly in converted information.
> 
> It would be very easy to put in the browsers.

ok, I'll look into that; any thoughts on a name for this format ?
"PREFORMATTED" ?

> By the way, have you seen the Gnu Info convertion
> which Philippe Defert does, on http://asis01.cern.ch:80/info/ ?
> He uses a perl script. Would you both like to publish
> your scripts?  They would be useful examples for anyone
> writing converters, and people might wantto set up their
> own Gnu Info servers too.

Yes, I've seen this script. My own script is also in perl but
performs a more complete conversion. For example, each Info
'node' has previous/next references and embedded in the text
can be references to other documents. Also, my script is explicitly
designed to perform the conversion for a single topic when the user
wants to read this topic. This means that there's no need to store
the converted document and that the data is always up to date.
The disadvantage of this approach is that the scripts has to been
every time a request is made.

The scripts and the modifications I made to the HTTP daemon are
now available via anonymous ftp from ftp.cs.few.eur.nl in the
/pub/www directory, files Daemon4.0.patch, info2html and man2html.
Or try http://kaa.cs.few.eur.nl/hypertext/filters/filters.html.

I'm on holiday next week so problems/flames/praise will have to
wait until I'm back.

Eelco van Asperen.           | Erasmus University Rotterdam
-----------------------------| Department of Computer Science, room H4-32
internet: evas@cs.few.eur.nl | PObox 1738, 3000 DR Rotterdam, The Netherlands



From erict@minnie.cs.su.oz.au  Tue Aug 11 04:45:41 1992
Return-Path: <erict@minnie.cs.su.oz.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07882; Tue, 11 Aug 92 04:45:41 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15453; Tue, 11 Aug 92 04:46:14 +0200
Received: from joyce.cs.su.OZ.AU by mcsun.EU.net with SMTP
	id AA14606 (5.65b/CWI-2.173); Tue, 11 Aug 1992 04:45:48 +0200
Message-Id: <9208110245.AA14606@mcsun.EU.net>
Date: Tue, 11 Aug 1992 12:45:12 +1000
From: erict@minnie.cs.su.oz.au (Eric Yin Wang Tse)
Subject: How do I join this mailing list?
To: www-talk@nxoc01.cern.ch


From timbl  Thu Aug 13 01:24:34 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14370; Thu, 13 Aug 92 01:24:34 GMT+0100
Date: Thu, 13 Aug 92 01:24:34 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9208130024.AA14370@ nxoc01.cern.ch >
To: boutell@isis.cshl.org
Subject: Pointers to Voice magazine on the web
Cc: www-talk@nxoc01.cern.ch

Tom,

There is no problem making your magazine reachable through CERN-
sourced lists. I would suggest an entry in the W3 servers list but
also more importantly an entry in the Sunject index.  It is great that
you are doing this.  I'll also send something around on the www-announce
list when you are happy with general access. (Sorry, Subject not Sunject
of course).

I would suggest a pre-release to get some feedback from W3 readers
on the format -- you could send a message to www-talk asking for
comments (a small list of people -- www-announce is much longer).
That would be the moment you have a rough version ready.

I'm looking forward to reading it!

    Tim Berners-Lee

______________________________________
	From boutell@isis.cshl.org Wed Aug 12 23:47:10 1992
	Return-Path: <boutell@isis.cshl.org>
	Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
		id AA14136; Thu, 13 Aug 92 00:47:04 MET DST
	Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
		id AA21982; Wed, 12 Aug 92 23:47:46 +0200
	Received: from isis.cshl.org by cshl.org (4.1/2.1-Cold Spring Harbor Laboratory)
		id AA12588; Wed, 12 Aug 92 17:46:18 EDT
	Received: from athena.cshl.org by isis.cshl.org (4.1/SMI-4.1)
		id AA08223; Wed, 12 Aug 92 17:42:35 EDT
	Date: Wed, 12 Aug 92 17:42:35 EDT
	From: boutell@isis.cshl.org (Tom Boutell)
	Message-Id: <9208122142.AA08223@isis.cshl.org>
	To: www-request@nxoc01.cern.ch
	Subject: Making my Magazine Available...


	I will shortly be releasing the first issue of a new electronic
	magazine, which will be dedicated to a given topic of general
	interest in each issue. (The first issue deals with abortion,
	from multiple standpoints; I'll be printing pro - life, pro - choice
	and intermediate articles.) I'd like to make the magazine available
	over WWW.

	I'm a programmer by trade and have already hacked my base html a bit,
	so I think I can probably manage to get the hang of doing this.
	What I'd like to ask is how to get the magazine listed somewhere
	where it will be seen - on the CERN entry point page, for
	instance (or somewhere relatively close at least). Am I the
	only one requesting this sort of thing? Probably not, so I'm not
	expecting the world. But making it available in a reasonably prominent
	fashion would help the magazine (which is strictly free of course)
	get started, and in return I would explain how to get started
	with WWW in the other electronic and nonelectronic editions of
	the magazine.

	Let me know! I hope to release the first issue in early September.
	It'll be made available over the net by multiple means to increase
	readership, but WWW is actually probably the most elegant possible.
	It'll eventually make for a truly beautiful way of disseminating
	back issues, for instance.

	(The topic of the second issue is likely to be the limitations
	of free speech, obviously a hot issue for those pressing the
	limits of network technology!)

	Thanks for your help.

	-Tom Boutell, Editor, Voice (name of magazine likely to change
	before publication as it conflicts with a few others here
	stateside)


From emv@nigel.msen.com  Fri Aug 14 20:16:33 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19640; Fri, 14 Aug 92 20:16:33 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11450; Fri, 14 Aug 92 19:17:15 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mJ5GP-0009p0C@nigel.msen.com>; Fri, 14 Aug 92 13:16 WET DST
Message-Id: <m0mJ5GP-0009p0C@nigel.msen.com>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: boutell@isis.cshl.org, www-talk@nxoc01.cern.ch
Subject: Re: Pointers to Voice magazine on the web 
In-Reply-To: Your message of Thu, 13 Aug 92 01:24:34.
             <9208130024.AA14370@ nxoc01.cern.ch > 
Date: Fri, 14 Aug 92 13:16:17 EDT
From: Edward Vielmetti <emv@msen.com>

Tom, Tim, et al,

With regard to publishing magazines on the net, I would recommend sending
a notice of either each issue or at least the first issue to "alt.zines"
and/or "rec.mag".  There are a number of folks in each group who are 
tracking small publications and who would be happy to write reviews,
keep contact information, and otherwise generally get the word out to
a wider audience.

I would refer everyone interested also to
	file://ftp.msen.com/pub/newsletters/F5-E/
which is "Factsheet Five - Electronic", a 'zine that covers the very small
press and other non-commercial publishing.

thanks,

--Ed

From emv@nigel.msen.com  Fri Aug 14 20:45:22 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19741; Fri, 14 Aug 92 20:45:22 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13084; Fri, 14 Aug 92 19:46:07 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mJ5iY-0009pAC@nigel.msen.com>; Fri, 14 Aug 92 13:45 WET DST
Message-Id: <m0mJ5iY-0009pAC@nigel.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: preprint services
Date: Fri, 14 Aug 92 13:45:26 EDT
From: Edward Vielmetti <emv@msen.com>

Here's a set of materials that would be useful to go into the web, if
it isn't there already.  If there are clients out there that support
"reply to owner of node" that would be a way to support a direct
interface to email based services -- if I recall right the EIES system
has some of that in it.

--Ed


  Date: Fri, 14 Aug 92 09:15:42 EDT
  From: Roy Richter PH/32  <rrichter@ph.gmr.com>
  To: emv@msen.com
  Subject: preprint servers
  
  I guess sometimes things don't work right.  Oh well.
  
  Here a list following up on our discussion last night at SEMiSLUG.
  --
  Roy Richter                  Internet: rrichter@ph.gmr.com
  Physics Dept, GM Research    UUCP:     rphroy!rrichter
          and Environmental
  
  
  Some things I've found on preprint servers, following up on our
  SEMiSLUG discussion last night...
  
  --
  
  Article: 26257 of sci.physics
  Path: rphroy!zaphod.mps.ohio-state.edu!mips!mips!munnari.oz.au!uunet!ux1.cso.uiuc.edu!news.cso.uiuc.edu!uimrl7.mrl.uiuc.edu!ercolessi
  From: ercolessi@uimrl7.mrl.uiuc.edu (furio ercolessi)
  Newsgroups: uiuc.announce,sci.physics,sci.astro,sci.math
  Subject: ANNOUNCE: Automated preprint distribution facility
  Keywords: preprint condensed matter physics astrophysics functional analysis
  Message-ID: <1992May21.064614.28349@news.cso.uiuc.edu>
  Date: 21 May 92 06:46:14 GMT
  Sender: usenet@news.cso.uiuc.edu (Net Noise owner)
  Reply-To: ercolessi@uimrl7.mrl.uiuc.edu (furio ercolessi)
  Organization: MRL - UIUC
  Lines: 30
  Xref: rphroy sci.physics:26257 sci.astro:19692 sci.math:23310
  
  
  	Starting from April 1992, fully automated bulletin boards 
  	for preprints in physics and mathematics are available 
  	at SISSA (International School for Advanced Studies), Trieste, 
  	Italy.   The service is free and people are welcome to use it.
  
  	Preprints can be submitted and retrieved.  It is also possible 
  	to subscribe to a daily distribution list, containing authors 
  	and abstracts of the papers just submitted to the board.
  
  	The boards are operated by sending commands by e-mail to
  	the appropriate Internet address:
  
  	- cond-mat@babbage.sissa.it   for condensed matter physics
  	- astro-ph@babbage.sissa.it   for astrophysics
  	- funct-an@babbage.sissa.it   for functional analysis
  
  	An analogous service, based on the same software, is
  	provided by Los Alamos National Lab for high energy
  	physics preprints:
  
  	- hep-th@xxx.lanl.gov         for high energy physics, theory
  	- hep-ph@xxx.lanl.gov         for high energy physics, phenomenological
  
  	Preprints are in TeX/LaTeX format. Facilities to use special 
  	macros are available.  Figures in PostScript format may be
  	also submitted.  Anonymous ftp access is also possible.
  	For further details, instructions, disclaimers, etc, please 
  	send a mail with Subject: help  to the address of the desired 
  	board.
  
  
  Article: 30771 of sci.physics
  Path: rphroy!zaphod.mps.ohio-state.edu!usc!sol.ctr.columbia.edu!destroyer!ncar!uchinews!curie.uchicago.edu!trivedi
  From: trivedi@curie.uchicago.edu (Anil Trivedi)
  Newsgroups: sci.physics,sci.astro,sci.math
  Subject: Re: Preprint Servers: Is there a list...?
  Message-ID: <1992Aug12.074607.10886@midway.uchicago.edu>
  Date: 12 Aug 92 07:46:07 GMT
  References: <l7ukasINNaem@pollux.usc.edu> <Bsu41w.7Ln@news.cso.uiuc.edu> <1992Aug11.221257.19812@unixg.ubc.ca>
  Sender: news@uchinews.uchicago.edu (News System)
  Organization: University of Chicago
  Lines: 35
  Xref: rphroy sci.physics:30771 sci.astro:22367 sci.math:26084
  
  keith@msmri.med.ubc.ca writes:
   > I think the automated preprint servers which are popping up at various
   > sites are a wonderful idea but how does one find out about new
   > servers and what topics the current servers cover?
  
  The servers I am aware of are:
  
   alg-geom@publications.math.duke.edu (algebraic geometry)
   astro-ph@babbage.sissa.it           (astrophysics)
   cond-mat@babbage.sissa.it           (condensed matter)
   funct-an@babbage.sissa.it           (functional analysis, n.b.: not fun-anal)
   hep-lat@ftp.scri.fsu.edu            (computational and lattice physics)
   
   gr-qc@xxx.lanl.gov		     (general relativity / quantum cosmology)
   gr-qc@babbage.sissa.it		     ...a duplicate of the above archive...
   
   hep-ph@xxx.lanl.gov                 (high energy physics phenomenological)
   hep-ph@babbage.sissa.it             ...a duplicate of the above archive...
   
   hep-th@xxx.lanl.gov                 (high energy physics formal)
   hep-th@babbage.sissa.it             ...a duplicate of the above archive...
   
   lc-om@alcom-p.cwru.edu              (liquid crystals, optical materials)
   e-mail@xxx.lanl.gov                 (e-mail address database)
  
  Notice that the last one is not a preprint server but an e-mail address
  database.
  
  Notice also that qc-gr, hep-ph, and hep-th archives are duplicated
  at two sites; so choose the nearer one.
  
  To get the basic information file from any server, send mail to that
  server with the Subject line set as "Subject: help".
  
  -----
  
  


From emv@cic.net  Wed Aug 19 07:52:52 1992
Return-Path: <emv@cic.net>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28758; Wed, 19 Aug 92 07:52:52 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21975; Wed, 19 Aug 92 06:53:48 +0200
Received: by nic.cic.net (4.1/SMI-4.1)
	id AA09771; Wed, 19 Aug 92 00:53:19 EDT
Message-Id: <9208190453.AA09771@nic.cic.net>
To: www-talk@nxoc01.cern.ch
Subject: links for you all to look at - GopherCon trip report, X.500 gateway
Date: Wed, 19 Aug 92 00:53:16 -0400
From: emv@cic.net

take a look at
	gopher://gopher.msen.com:70/11/internet-review/v2n3
for a trip report to GopherCon.  I did an "alternative universe"
scenario in which the conference was really about World Wide Web
instead, the supercollider was in Michigan not Texas, and U Minnesota
was running a mainframe based CWIS.

the other thing coming out of that that's really cool is a gopher based
X.500 front end, see
	gopher://umich.edu:7777/
for that.  (subject to change).  Tim Howes did some work so that
a server speaks gopher on one side and X.500 on the other, something
which I think is quite reusable in the WWW world.

thanks,

--Ed

From connolly@pixel.convex.com  Wed Aug 19 10:14:50 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29023; Wed, 19 Aug 92 10:14:50 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04982; Wed, 19 Aug 92 09:15:43 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA21115; Wed, 19 Aug 92 02:15:05 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA01336; Wed, 19 Aug 92 02:14:34 -0500
Message-Id: <9208190714.AA01336@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: can now read/write html from FrameMaker!
Date: Wed, 19 Aug 92 02:14:32 CDT
From: Dan Connolly <connolly@pixel.convex.com>

I just spent some time integrating FrameMaker and
HTML. The open/save dialogs in frame can be configured
to automatically convert from/to HTML.

The tools are based on the XLisp interpreter and
the SGMLs SGML parser, but they work pretty well.

Anybody volunteer some FTP disk space?

Anybody else want me to email them a shar file?

Dan

From jfg@dxcern.cern.ch  Wed Aug 19 14:00:54 1992
Return-Path: <jfg@dxcern.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29552; Wed, 19 Aug 92 14:00:54 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04735; Wed, 19 Aug 92 13:01:50 +0200
Received: by dxcern.cern.ch (5.57/Ultrix3.0-C)
	id AA14969; Wed, 19 Aug 92 13:01:26 +0200
Date: Wed, 19 Aug 92 13:01:26 +0200
From: jfg@dxcern.cern.ch (Jean Francois Groff)
Message-Id: <9208191101.AA14969@dxcern.cern.ch>
To: www-talk@nxoc01.cern.ch
Subject: Re: can now read/write html from FrameMaker!
References: <9208190714.AA01336@pixel.convex.com>

  Great ! You can send your stuff to info.cern.ch:/pub/incoming, and
we'll transfer it to /pub/www/src for everyone to see.

	Jean-Francois

From timbl  Wed Aug 19 19:41:46 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00906; Wed, 19 Aug 92 19:41:46 GMT+0100
Date: Wed, 19 Aug 92 19:41:46 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9208191841.AA00906@ nxoc01.cern.ch >
To: JUDY@crnvma.cern.ch
Subject: Re: on-line dictionaries/thesaurus
Cc: www-talk@nxoc01.cern.ch

There are dictionary servers running, but the polite thing
to do is to limit their use to your own site. There is a pd
client and server system (not w3 compatible unfortunately
but I am sure very easily hackable) for the NeXT. Every NeXT
comes with Webster's and Roget's thesaurus. We could make
the dictionary of some NeXT available to teh CERN site
but it would be less than nice tomake it available worldwide.
(We can make a W3 server which only allows .cern.ch connections).

Good summer student project for a few days/weeks.

There is a public WAIS server for an early out of coipyright
Roget's thesaurus. Find it under "Reference" in the subject list
or www http://info.cern.ch:8001/wais.cic.net:210/roget-thesaurus

The copyright situation for online stuff is not well defined as far
as I know. You could trythe El;ectronic Frontier Foundation's
archives or their personel for leads .. theat is their speciality
(law of the electronic information revolution).

J-P and I spent a few seconds on the problem, but did not have
much time.

The Roget's thesaurus on that server (at CICnet) by hte way
is provided from teh Gutenberg project collection of out-of-copyright
littereature.


	Tim

Anyone else on the list know of a dictionary server on the web?

	From JUDY@crnvma.cern.ch Fri Aug 14 16:59:25 1992
	Return-Path: <JUDY@crnvma.cern.ch>
	Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
		id AA19255; Fri, 14 Aug 92 17:59:20 MET DST
	Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
		id AA02451; Fri, 14 Aug 92 17:00:08 +0200
	Message-Id: <9208141500.AA02451@dxmint.cern.ch>
	Received: from CERNVM.cern.ch by CERNVM.CERN.CH (IBM VM SMTP V2R2)
	   with BSMTP id 7458; Fri, 14 Aug 92 17:00:36 SET
	Received: from CERNVM (JUDY) by CERNVM.cern.ch (Mailer R2.08) with BSMTP id
	 0267; Fri, 14 Aug 92 17:00:36 SET
	Date:         Fri, 14 Aug 92 16:48:18 SET
	From: Judy Richards <JUDY@crnvma.cern.ch>
	Subject:      on-line dictionaries/thesaurus
	To: Tim <timbl@nxoc01.cern.ch>

	I understand that a month or two back you discussed this with Jean-Pol
	Matheys and got hold of some software but it didn't work properly.

	My question is more general - do you know of any software, commercial or
	not, that would allow us to put a 'dictionaty server' in the computer
	centre? I find it hard to imagine that you could get something completely
	for free without breaking some sort of copyright law - at least the
	dictionaries themselves must be protected in some way. How much do you know
	about this subject, and how should one set about finding out more? Any
	leads would be appreciated!


From HARMO@valt.helsinki.fi  Thu Aug 20 16:30:03 1992
Return-Path: <HARMO@valt.helsinki.fi>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03592; Thu, 20 Aug 92 16:30:03 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23770; Thu, 20 Aug 92 15:30:52 +0200
Received: from charon-gw.pc.Helsinki.FI by kruuna.helsinki.fi with SMTP id AA14484
  (5.65c8/IDA-1.4.4 for <www-talk@nxoc01.cern.ch>); Thu, 20 Aug 1992 16:30:20 +0300
Received: From HYLKN1/WORKQUEUE by charon-gw.pc.Helsinki.FI
          via Charon 3.4 with IPX id 100.920820163145.320;
          20 Aug 92 16:32:14 +0200
Message-Id: <MAILQUEUE-101.920820161806.339@valt.Helsinki.FI>
To: www-talk@nxoc01.cern.ch
From: "Timo Harmo - SocSci U of Helsinki"  <HARMO@valt.helsinki.fi>
Date:     20 Aug 92 16:18:06 EET
Subject:  Help with lm-browser installation
X-Pmrqc:  1
X-Mailer: Pegasus Mail v2.2 (R3).

I told a friend of mine (who is a unix novice) about WWW, and
he got very excited about it and wanted to install the line-mode
browser into his system.
He is working on an information system for some 50 Finnish NGOs,
and WWW seems most promising media for small, non-governement
organizations.

As he turned to me from help, and I know nothing about unix, so
my only resource is to turn to this list.

The system he is running is Sun (os 4.1.2)
I have the feeling that it is a very simple unix-problem, and not
very fruitfull if discussed in public. He went thru the installation,
but something seems to be wrong. If there is anybody out there
willing to help, please reply to me and I will put him in
contact with you.
 -Timo

From emv@nigel.msen.com  Thu Aug 20 20:17:18 1992
Return-Path: <emv@nigel.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04471; Thu, 20 Aug 92 20:17:18 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13542; Thu, 20 Aug 92 19:18:14 +0200
Received: by nigel.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mLG8n-0009bqC@nigel.msen.com>; Thu, 20 Aug 92 13:17 WET DST
Message-Id: <m0mLG8n-0009bqC@nigel.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: web, schmeb, give me a hierarchy
In-Reply-To: Your message of 20 Aug 92 16:18:06.
             <MAILQUEUE-101.920820161806.339@valt.Helsinki.FI> 
Date: Thu, 20 Aug 92 13:17:26 EDT
From: Edward Vielmetti <emv@msen.com>

a frustrating experience I want to relate...

i want to take a look at the trip reports that I know are on the CERN
server.  I even know pretty much where they are in the server, or at
least I can get to one of them (Hypertext '92) with some relatively
obvious browsing.  but there's no way I can see to get a screen full
of all of them, without having someone construct a .html file for that
directory, and even then that depends on there being an "obvious name"
for that file or a coded link.

the www stuff is organized in directories that make some sense.  I
would like to browse through them that way, ploddingly and
methodically, just like I can plow through gopherspace and examine
each document in turn.  I don't see a good way to do that, and it's
frustrating.

--Ed


From timbl  Fri Aug 21 02:13:42 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05573; Fri, 21 Aug 92 02:13:42 GMT+0100
Date: Fri, 21 Aug 92 02:13:42 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9208210113.AA05573@ nxoc01.cern.ch >
To: HARMO@valt.helsinki.fi, www-talk@nxoc01.cern.ch
Subject: Re: Help with lm-browser installation


If the information on the web itself (which he canalways access
using telnet info.cern.ch when desparate) is not sufficient,
he can ask www-bug@info.cern.ch which is the w3 support team at CERN.

This www-talk list is only if he has a puzzling thing he would like
to ask all interested technical people.

I would really suggest that on a sun one of the X browsers would
be more user-friendly, but the line moed browser will of course
work.

Tim BL

From timbl  Fri Aug 21 18:44:50 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07407; Fri, 21 Aug 92 18:44:50 GMT+0100
Date: Fri, 21 Aug 92 18:44:50 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9208211744.AA07407@ nxoc01.cern.ch >
To: emv@msen.com, www-talk@nxoc01.cern.ch
Subject: Re: web, schmeb, give me a hierarchy

Ed,

First off, thanks for the pointer to the Gophercon report.

You would like to be able to browse through the directories
of the http server's file system.  I gree this would be a useful
feature, and it is one we aim to put in one day (trivial like
all the other things to do :-).

Mind you, there are some things in the W3 team's directory
which are just temporary or junk or old versions, etc. So
we might feel that we don't want people reading for example
our c files as we edit them. There's a bit of security there
that if we temporarily leave in a WWW directory
something which we wouldn't want distributed (like a copy
of passwd -- unlikely but an example) then noone will
find it. These are our working directories. So probably when
we dop produce a server which will serve directories, which
will make it MUCH easier to publish plain text a la Gopher
server, then we might ourselves disable it.

What we SHOULD do is WAIS-index the lot and also make a
little recursive   "www -lR" which traverses a web.
Another trivial bit of code...  You have to have a 
terminating condition of course.

BTW thanks also for mentioning W3 again in Gopherville.
I liked teh bit in the report about W3 being the result of
"heavy investment" by the Physics community. At CERN we are
trying to arrange for a third person... Bothe W3 and Gopher
of course are basically grass-roots sourced. We are talking about
a W3 support consortium ... maybe a W3con is not too far off.

Tim

From koellner@lbl.bitnet  Sat Aug 22 02:33:54 1992
Return-Path: <koellner@lbl.bitnet>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08701; Sat, 22 Aug 92 02:33:54 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15151; Sat, 22 Aug 92 01:34:55 +0200
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R1)
   with BSMTP id 0476; Sat, 22 Aug 92 01:36:16 SET
Received: from Lbl.Bitnet by CEARN.cern.ch (Mailer R2.07B) with BSMTP id 4989;
 Sat, 22 Aug 92 01:36:15 SET
Date:    Fri, 21 Aug 92 16:15:57 PDT
From: koellner@lbl.bitnet (Werner Koellner, LBL)
Message-Id: <920821161557.21807317@csa3.lbl.gov>
Subject: How to print a document from linemode www
To: www-talk@nxoc01.cern.ch
X-St-Vmsmail-To: ST%"www-talk@info.cern.ch"

                                         LBL, Physics Division, 21-AUG-1992

    Hi,
       using the LineMode www on a VAX, can a document that is displayed on
       the screen be sent to a printer? If so, how can that be done?

                     Many thanks,

                                   Werner

From fkappe@fiicmds04.tu-graz.ac.at  Sat Aug 22 13:33:45 1992
Return-Path: <fkappe@fiicmds04.tu-graz.ac.at>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09315; Sat, 22 Aug 92 13:33:45 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23226; Sat, 22 Aug 92 12:34:47 +0200
Received: by iicm.tu-graz.ac.at (5.57/Ultrix3.0-C)
	id AA24442; Sat, 22 Aug 92 12:33:57 +0200
Date: Sat, 22 Aug 92 12:33:57 +0200
From: fkappe@fiicmds04.tu-graz.ac.at (Frank Kappe)
Message-Id: <9208221033.AA24442@iicm.tu-graz.ac.at>
To: emv@msen.com
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: Edward Vielmetti's message of Thu, 20 Aug 92 13:17:26 EDT <m0mLG8n-0009bqC@nigel.msen.com>
Subject: web, schmeb, give me a hierarchy

>>>>> On Thu, 20 Aug 92 13:17:26 EDT, Edward Vielmetti <emv@msen.com> said:

Ed> a frustrating experience I want to relate...

Ed> ...

Ed> the www stuff is organized in directories that make some sense.  I
Ed> would like to browse through them that way, ploddingly and
Ed> methodically, just like I can plow through gopherspace and examine
Ed> each document in turn.  I don't see a good way to do that, and it's
Ed> frustrating.

What you tell us is part of the disorientation problem frequently reported by
hypertext users ("lost in hyperspace"). In my opinion, the solution you propose
- adding a hierarchical view of the docuverse like in gopherspace - makes a lot
of sense. Therefore Hyper-G, the hypermedia system that we are currently
developing offers not only a pure hypertext user interface metaphor, but
combines it with a hierarchy of browsable and searchable "collections" and
so-called "guided tours" where you can follow trails you or anybody else has
previously defined.

Greetings,
        Frank



From connolly@pixel.convex.com  Tue Aug 25 01:45:33 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13754; Tue, 25 Aug 92 01:45:33 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22162; Tue, 25 Aug 92 00:46:37 +0200
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26432; Mon, 24 Aug 92 17:44:33 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA08880; Mon, 24 Aug 92 17:44:29 -0500
Message-Id: <9208242244.AA08880@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: anybody using www_and_frame?
Date: Mon, 24 Aug 92 17:44:28 CDT
From: Dan Connolly <connolly@pixel.convex.com>

I thought there was significant interest in the package,
but I haven't heard a word since I uploaded it.

Has anyone had a chance to look at it?

Dan

From mcclanah@dlgeo.cr.usgs.gov  Tue Aug 25 23:12:45 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16555; Tue, 25 Aug 92 23:12:45 MET DST
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16285; Tue, 25 Aug 92 22:13:54 +0200
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA06212; Tue, 25 Aug 92 15:11:53 CDT
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA07756; Tue, 25 Aug 1992 15:13:01 -0500
Date: Tue, 25 Aug 1992 15:13:01 -0500
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9208252013.AA07756@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: www_and_frame


Dan,

Yes I downloaded your stuff 8-20 (or 21).  I am very interested in
it as we use Frame in our office.  Another project has used Maker
Markup Language (MML) to do something similar to what I want
to do and so I am trying to use some of his stuff, change it so
that I am not tied to a proprietary package, and use it in my
current project.  I realize that for the time being  I will be 
dependent on Frame to create HTML documents.  Hopefully there
will be other potential avenues to create HTML documents at
some point i the future.  Or perhaps if CERN provides SGML or
Hy-Time integration then there will be other products that I
can use. Who knows what the future will hold.

I am currently out of the office and so have not tried to play
with your stuff at all.  I got xlisp and compiled and I had sgml
parser but need to compile 0.8.  Will let you know when I get
it all put together.  I am sure I will have some questions when I try to
start using it.

Thanks
Pat

From timbl  Thu Sep 24 15:51:46 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23922; Thu, 24 Sep 92 15:51:46 GMT+0100
Date: Thu, 24 Sep 92 15:51:46 GMT+0100
From: timbl (Tim Berners-Lee)
Message-Id: <9209241451.AA23922@ nxoc01.cern.ch >
To: LAPPA@b.psc.edu
Subject: Re: A few questions about sgml
Cc: www-talk@nxoc01.cern.ch

Joseph,

Thanks for your mail.  It'll be great to see you documents on the web.

let me explain the relationship between SGML and HTML. As you probbly
know, when you use SGML, you must use a particular document type
(DTD). Our HTML is a particular document type -- it includes simple
formatting and hypertext links. We defined it because there was no standard
DTD for hypertext around (there still isn't).

So HTML is SGML but not necessarily the reverse.  If your documents are
in a different documen type then you can do one of two things:
one is to write a server which will take your SGML documents and convert
them into HTML (one th fly, probably) for W3 clients.  This will
probably mean translating some tags.

The second option is to wait until the format negotiation which we
are putting into the protocol comes out. This will anser your second
question too, in that it will allow graphics to be picked up.
The fact of life here is that there are no (or rather, too many)
standrads both for SGML DTDs and for graphics (and sound, video etc)
so futur clients will be configured to know which formats you can
use on your local machine. They will tell the server this, so that the
server can send a document in the "best"format possible.  You could define
your own DTD as a specific document format, and define the software which
you will want to run to handle documents in that format.

Now in parallel wit these developments (the format negotiation runs in
prototype form now), Pei Wei of O'Reilly Assoiciates, the author of the
Viola browser, is putting in generic SGML handling (ie coinfigurable
for many different DTDs) as well as embedded graphics. So his browser,
also currently in prototype form, will do just what you want, I think.

Tim Berners-Lee

	From LAPPA@b.psc.edu Wed Sep 23 22:42:59 1992
	Return-Path: <LAPPA@b.psc.edu>
	Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
		id AA21828; Wed, 23 Sep 92 22:42:55 GMT+0100
	Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
		id AA22588; Wed, 23 Sep 92 22:42:58 +0200
	Date:    Wed, 23 Sep 1992 16:42:24 -0400 (EDT)
	From: LAPPA@b.psc.edu (What's Up?)
	Message-Id: <920923164224.22c0725b@B.PSC.EDU>
	Subject: A few questions about sgml
	To: timbl@nxoc01.cern.ch
	X-Vmsmail-To: SMTP%"timbl@info.cern.ch"

	Hello,

	  My name is Joseph Lappa and I work for the Pittsburgh Supercomputing Center. 
	We are currently evaluating information servers including WWW.  We have decided
	to write all of our documents in SGML and make them available to our users via 
	some protocol/server (WWW, wais, or gopher).


	I have a few questions (and I hope I'm asking the right person :-))


	1) Can WWW read in SGML directly into a document bypassing HMTL?  I was reading
	   one the in documents that SGML was very important to WWW but I'm not sure
	   where SGML fits in.

	2) Is there the capability to retrieve non-hmtl files such as GIF or CGM files
	   that are included within a SGML document.  We are very big on CGM file
	   format and our SGML file viewer allows CGM files to be included as figures
	   or even animations (this would be for viola and other graphic interfaces).  

	3) Do you plan on having a SGML text (like vt100 terminal) viewer in addition 
	   to a X-Windows version such as viola?


	I hope these questions make sense :-)

	Thank You very much,
	Joseph Lappa




From timbl  Mon Sep 28 13:40:33 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04048; Mon, 28 Sep 92 13:40:33 MET
Date: Mon, 28 Sep 92 13:40:33 MET
From: timbl (Tim Berners-Lee)
Message-Id: <9209281240.AA04048@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: www-talk@nxoc01.cern.ch
Subject: Man pages server code, anyone?
Cc: ruth@fnal.fnal.gov


I know I heard of someone with a filter for unix man page to HTML,
but I can't find it.  Does anyone on this list write one?

	Tim BL


From jones@online.cern.ch  Mon Sep 28 13:54:15 1992
Return-Path: <jones@online.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04132; Mon, 28 Sep 92 13:54:15 GMT+0100
Received: from ONLINE.DECnet MAIL11D_V3 by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13989; Mon, 28 Sep 92 13:54:30 +0100
Date: Mon, 28 Sep 92 13:54:29 +0100
Message-Id: <9209281254.AA13989@dxmint.cern.ch>
From: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833)
To: www-talk@nxoc01.cern.ch
Cc: JONES@online.cern.ch
Subject: accessing FrameMaker documents through WWW
X-Mail11-Ostype: VAX/VMS

Tim BL, during a talk at the CHEP'92 conference last week, mentioned that there 
was some software available to make FrameMaker documents accessible from WWW. I 
tried finding any references to this in the web but came home empty-handed. Does 
anyone know if such a beast exists?

Bob Jones.


From mcclanah@dlgeo.cr.usgs.gov  Mon Sep 28 18:16:29 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05325; Mon, 28 Sep 92 18:16:29 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09094; Mon, 28 Sep 92 18:16:45 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA03530; Mon, 28 Sep 92 12:11:45 CDT
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA04307; Mon, 28 Sep 1992 12:16:04 -0500
Date: Mon, 28 Sep 1992 12:16:04 -0500
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9209281716.AA04307@dlgeo.cr.usgs.gov>
To: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833),
        www-talk@nxoc01.cern.ch
Cc: JONES@online.cern.ch
Subject: Re: accessing FrameMaker documents through WWW

I have gotten ahold of the code and messed around with it to some degree
Contact Dan Connolly (connoly@pixel.convex.com) about what you need and
how to get it.

As long as I am on the subject:  I have found Dan's utility to work
pretty much as advertised, a few glitches but its a relatively young
piece of wotk.  Dan has been extremely expedient in responding
to my e-mail questions, and more than patient with my ignorance
about exactly how to use his tool.  I have encouraged Dan to 
continue his work, he has already (or will soon) addressed some
of the problems I have run into.

I think it a tool well worth looking into.  If you use it and find
it worthwhile, please let Dan know and encourage his efforts.

WWW gains another cog in its wheel of completeness!!! (or will it ever
really be complete?)

Pat McClanahan
EROS Data Center
Sioux Falls, South Dakota
USA

From mcclanah@dlgeo.cr.usgs.gov  Mon Sep 28 18:34:10 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05395; Mon, 28 Sep 92 18:34:10 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10712; Mon, 28 Sep 92 18:34:24 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA03717; Mon, 28 Sep 92 12:29:23 CDT
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA04321; Mon, 28 Sep 1992 12:33:44 -0500
Date: Mon, 28 Sep 1992 12:33:44 -0500
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9209281733.AA04321@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: Re: accessing FrameMaker documents through WWW

 
I have gotten ahold of the code and messed around with it to some degree
Contact Dan Connolly (connoly@pixel.convex.com) about what you need and
how to get it.
 
As long as I am on the subject:  I have found Dan's utility to work
pretty much as advertised, a few glitches but its a relatively young
piece of wotk.  Dan has been extremely expedient in responding
to my e-mail questions, and more than patient with my ignorance
about exactly how to use his tool.  I have encouraged Dan to
continue his work, he has already (or will soon) addressed some
of the problems I have run into.
 
I think it a tool well worth looking into.  If you use it and find
it worthwhile, please let Dan know and encourage his efforts.
 
WWW gains another cog in its wheel of completeness!!! (or will it ever
really be complete?)
 
Pat McClanahan
EROS Data Center
Sioux Falls, South Dakota
USA

From putz@parc.xerox.com  Mon Sep 28 18:43:35 1992
Return-Path: <putz@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05452; Mon, 28 Sep 92 18:43:35 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11525; Mon, 28 Sep 92 18:43:50 +0100
Received: from spoggles.parc.xerox.com ([13.2.16.98]) by alpha.xerox.com with SMTP id <11593>; Mon, 28 Sep 1992 10:43:10 PDT
Received: by spoggles.parc.xerox.com id <58401>; Mon, 28 Sep 1992 10:43:04 -0700
Date: 	Mon, 28 Sep 1992 10:42:41 PDT
Sender: Steve Putz <putz@parc.xerox.com>
From: Putz.parc@xerox.com
Subject: Re: Man pages server code, anyone?
In-Reply-To: <9209281240.AA04048@nxoc01.cern.ch>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: www-talk@nxoc01.cern.ch, ruth@fnal.fnal.gov
Message-Id: <92Sep28.104304pdt.58401@spoggles.parc.xerox.com>

Hi Tim,

I don't have a man page to HTML filter, but I did hack together a simple
man page http server implemented in C-shell.  The man pages are just
formatted by the man command (using nroff) and presented as <PLAINTEXT>.
Here is a sample session:

-------------------------------------------------------------------------------
                                                        PARC Unix Manual Search
                                   UNIX HELP
                                       
   Enter keywords to find Unix manual pages
   
   or select a man page[1] by name or return to the PARC Web[2]
     [End]

FIND <keywords>, 1-2, Back, Quit, or Help: f www

-------------------------------------------------------------------------------
                                                         PARC Unix Manuals: www
                                      WWW
                                       
   Select a man page[1] or return to the PARC Web[2] or enter another keyword
   
  viola[3] (1)           X-Windows World-Wide Web (WWW) browser
                         
  www[4] (1)             World-Wide Web line-mode browser
     [End]

FIND <keywords>, 1-4, Back, Quit, or Help: 4

-------------------------------------------------------------------------------
                                                        PARC Unix Manual: 1 www
                                      WWW
                                       
   Enter a keyword or select a man page[1] by name or return to the PARC Web[2]
   


www(1)                   USER COMMANDS                     www(1)

NAME
     www - World-Wide Web line-mode browser

SYNOPSIS
     www [options] [docaddress [keywords]]

DESCRIPTION
     The World-Wide Web line-mode  browser  allows  you  to  find
     information  by  following  references  and/or by using key-
     words.

     References  are  numbers  in  [brackets]  after   particular
     phrases.  Type the number and RETURN for more information on
FIND <keywords>, 1-2, Back, <RETURN> for more, Quit, or Help: q
-------------------------------------------------------------------------------

From rik@daneel.rdt.monash.edu.au  Tue Sep 29 04:47:50 1992
Return-Path: <rik@daneel.rdt.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07069; Tue, 29 Sep 92 04:47:50 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26793; Tue, 29 Sep 92 04:48:01 +0100
Received: by daneel.rdt.monash.edu.au (5.57/Ultrix3.0-C)
	id AA05803; Tue, 29 Sep 92 13:47:20 +1000
Message-Id: <9209290347.AA05803@daneel.rdt.monash.edu.au>
To: www-talk@nxoc01.cern.ch, ruth@fnal.fnal.gov
Subject: Re: Man pages server code, anyone? 
In-Reply-To: Your message of "28 Sep 92 13:40:33 +0100."
             <9209281240.AA04048@ nxoc01.cern.ch > 
Date: Tue, 29 Sep 92 13:47:19 -1000
From: Rik Harris <rik@daneel.rdt.monash.edu.au>
X-Mts: smtp

> I know I heard of someone with a filter for unix man page to HTML,
> but I can't find it.  Does anyone on this list write one?

I'm currently writing one in perl.  It almost does the hypertext links
to the "See Also" manual pages, and anything else that looks like
another man page.  Unfortunately, it will probably have to be
customised to the -man macros that are in use on each system.  Mine is
currently customised for SunOS man pages, but I'm trying to make it
more general.  Sorry I won't give out code at the moment, not until it
works :-)

If anyone's got any great ideas, or suggestions for this, let me
know.

rik.
--
Rik Harris - rik.harris@fcit.monash.edu.au         || Systems Programmer
+61 3 571-2895 (AH & ans.mach) +61 3 573-2679 (BH) || and Administrator
Faculty of Computing and Information Technology,   || Vic. Institute of
Caulfield Campus, Monash University, Australia     || Forensic Pathology

From romig@cis.ohio-state.edu  Tue Sep 29 05:18:19 1992
Return-Path: <romig@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07117; Tue, 29 Sep 92 05:18:19 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04697; Tue, 29 Sep 92 05:18:29 +0100
Received: by brachiosaur.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA01784; Tue, 29 Sep 92 00:17:53 -0400
Date: Tue, 29 Sep 92 00:17:53 -0400
From: Steve Romig <romig@cis.ohio-state.edu>
Message-Id: <9209290417.AA01784@brachiosaur.cis.ohio-state.edu>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch, ruth@fnal.fnal.gov
In-Reply-To: Tim Berners-Lee's message of Mon, 28 Sep 92 13:40:33 MET <9209281240.AA04048@ nxoc01.cern.ch >
Subject: Man pages server code, anyone?

I wrote a simple set of scripts that ran the unformatted man sources
through nroff with a special set of man macros that did away with the
page headings/footings, and converted the formatted ascii output into
html.  I wanted to convert any references to things that look like man
pages (as in "man(1)") to links.  What I really wanted was to put the
man page in a <listing> environment to preserve the formatting, but
you can't embed anchors there.  </LISTING><A ...>...</A><LISTING>
seems to cause paragraph breaks, not quite what I had in mind.  

I finally settled on making a list of the man page references and
turned them into an extra See Also section at the end of the document.
Its ugly, but functional.  I'll clean up the code and make it
available if anyone is interested.

It would be nice if there were a thing like LISTING that allowed
anchors.  Are there any plans for such a thing (or maybe there's a way
to do it now that I don't know about)?  It would make the task of
converting misc text files into HTML much easier.

--- Steve

From connolly@pixel.convex.com  Tue Sep 29 18:25:37 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09698; Tue, 29 Sep 92 18:25:37 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01338; Tue, 29 Sep 92 18:25:39 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA07503; Tue, 29 Sep 92 12:25:00 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20685; Tue, 29 Sep 92 12:24:56 -0500
Message-Id: <9209291724.AA20685@pixel.convex.com>
To: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: accessing FrameMaker documents through WWW 
In-Reply-To: Your message of "Mon, 28 Sep 92 13:54:29 BST."
             <9209281254.AA13989@dxmint.cern.ch> 
Date: Tue, 29 Sep 92 12:24:56 CDT
From: Dan Connolly <connolly@pixel.convex.com>


>Tim BL, during a talk at the CHEP'92 conference last week, mentioned that there 
>was some software available to make FrameMaker documents accessible from WWW. I 
>tried finding any references to this in the web but came home empty-handed. Does 
>anyone know if such a beast exists?
>
try:
www file://info.cern.ch/pub/WWW/src/www_and_frame-README

or
www file://info.cern.ch/pub/incoming/www_and_frame.html

(some of the links in the the html version won't work -- you'll
have to download the distribution and grab the files they point
to.)

Dan


From connolly@pixel.convex.com  Tue Sep 29 18:31:42 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09734; Tue, 29 Sep 92 18:31:42 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02011; Tue, 29 Sep 92 18:31:58 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA07795; Tue, 29 Sep 92 12:31:19 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20953; Tue, 29 Sep 92 12:31:17 -0500
Message-Id: <9209291731.AA20953@pixel.convex.com>
To: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833)
Cc: JONES@pixel.convex.com
Cc: www-talk@nxoc01.cern.ch
Subject: Re: accessing FrameMaker documents through WWW 
In-Reply-To: Your message of "Mon, 28 Sep 92 16:24:25 BST."
             <9209281524.AA27049@dxmint.cern.ch> 
Date: Tue, 29 Sep 92 12:31:17 CDT
From: Dan Connolly <connolly@pixel.convex.com>


>Hi Dan,
>	Robert Cailliau here at CERN told me you had done some work to integrat
e 
>FrameMaker and WWW. We have a fair number of documents written using FrameMake
r 
>which we would like to make available through WWW. Can you give me some detail
s 
>of the work you have done?

I wrote it up in:
www file://info.cern.ch/pub/WWW/src/www_and_frame-README

or you can try the html version with links (most of which point to
files in the distribution that it assumes you have downloaded...)
in:

www file://info.cern.ch/pub/incoming/www_and_frame.html

You might be disappointed: the aim of the project is to be able to
use FrameMaker to work on HTML documents, not to get www to grok
frame files.

Dan


From timbl  Thu Oct  1 09:29:13 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15067; Thu, 1 Oct 92 09:29:13 MET
Date: Thu, 1 Oct 92 09:29:13 MET
From: timbl (Tim Berners-Lee)
Message-Id: <9210010829.AA15067@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833)
Subject: Re: accessing FrameMaker documents through WWW
Cc: www-talk@nxoc01.cern.ch

Sorry, Bob -- the tar file is available by anon ftp on info.cern.ch
as /pub/www/src/www_and_frame*


> Tim BL, during a talk at the CHEP'92 conference last week, mentioned that there 

> was some software available to make FrameMaker documents accessible from WWW. I 

> tried finding any references to this in the web but came home empty-handed. Does 

> anyone know if such a beast exists?
> 

> Bob Jones.



From timbl  Thu Oct  1 11:50:57 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15452; Thu, 1 Oct 92 11:50:57 MET
Date: Thu, 1 Oct 92 11:50:57 MET
From: timbl (Tim Berners-Lee)
Message-Id: <9210011050.AA15452@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: "Phillip M. Hallam-Baker" <HALLAM@zws012.desy.de>
Subject: Re: Setting up WWW at ZEUS, DESY:  Database 
Cc: www-talk@nxoc01.cern.ch


> Date: Mon, 28 Sep 1992 23:27 +0200
> From: "Phillip M. Hallam-Baker" <HALLAM@zws012.desy.de>
>
> Hello,

>	I would like to put the ZEUS online documentation online via WWW.I have
> already got the various sources etc to compile on the DECstation and can run the
>  browser on both VAX and Ultrix OK.

Great!  You might like to link up with Thomas Finnen who has a unix server running
at DESY.

>	What I really want to do is to set up the server on the VAX though. This
>  is where we do all the development etc, the DECstations belong to the offline
>  group and they won't let us get SU privs which are needed to put up daemons. Or
>  rather they might if they didn't suspect me of wanting to put up the TPU editor
>  so that EDT junkies like myself can use the things.

Fine. Lots of people have set up the server under VMS. We haven't incorporated
the changes needed into the distribution, but I'm sure a mail to www-talk would
get replies of people who had done it.  There is a DCL server example in
the W3 deamon documentation. The basic W3 files all compile under VMS, and there
is (in HTFile.c?) a routine to convert unix-style filenames to VMS style.
(The browser actually does that automatically when it runs on VMS, to read local
files).

>	Long term what I would like to do is to get the various RDB and Oracle
>  databases that the ZEUS online system is being reorganized arround up onto a W3
>  server. This would save me the hassle of writting and maintaining browsers etc.

Good idea.  If the code from the generic W3-Oracle gateway can be of use to
you then feel free...see  
http://info.cern.ch/hypertext/WWW/Daemon/Oracle/Overview.html

>	This raises a number of questions, particularly in the area of security.
>  I would like to use an authentication scheme. What I had in mind was that the
>  client making a request requiring validation should recieve back a key which
>  would be encoded at the client end and returned to the server where it would be
>  decoded to see if it matched. The key would be changed on each pass. This would
>  require a list of active keys to be kept in order to allow serving of multiple
>  requests concurrently which would of course make the server non-idempotent.

We have a prototype server running which operates in a similar way, but currently
without encryption: the passwords are simply sent in the clear over the net with
every document retrieval. This is not high security, but it is as high as we
currently have with telnet sessions.  This is being prototyped now.

>	The end product as far as ZEUS would be concerned would be just a single
>  database that could be interrogated via WWW protocols and a number of customized
>  form programs for interrogating it. However since we are using a G"odel
>  synthesizer to produce the servers the project will naturally generate what
>  amounts to a VHLL compiler for WWW compatible database servers.

I don't know about G"odel synthesisers nor VHLL though they both ring a bell...
Obviously it would be a good move to have a rapid customisation system for
producing hypertext views of relational databases. This could be perhaps a report
generator perhaps just producing HTML if it ran fast enough for real-time server
use. (A point-and click graphic view builder would be cool of course!)

>	Another idea I had was to integrate a HTML output window into my TROJAN
>  user interface synthesizer. This is a UIMS which spans Motif, Curses and SMG.
>  Other interfaces (particularly X-Windows related ones) can easily be added..
>  This would allow a fairly nice browser and possibly editor to be written, on the
>  VAX I would connect it to the LinkWorks package which is DECs own Hyper-product
>  which comes bundled in Motif. I suspect other vendors will shortly follow. What
>  I had in mind was a "WWW" output window which use a WWW hypertext link as the
>  linkable object thus allowing the DEC supplied "notepad" editor and cardfiler to
>  be used as a hypertext editor, I'm not clear on the design of this yet.

We have wondered about Linkworks integration, putting a W3 engine on so that
linkworks linsk could be makde to W3 objects, and maybe making a W3 retrieval
client which would use a table to fire up appropriate DEC tools when given
data in particular formats.

>		Phill M. Hallam-Baker

Tim Berners-Lee


From timbl  Fri Oct  2 15:34:18 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20700; Fri, 2 Oct 92 15:34:18 MET
Date: Fri, 2 Oct 92 15:34:18 MET
From: timbl (Tim Berners-Lee)
Message-Id: <9210021434.AA20700@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: accessing FrameMaker documents through WWW 
Cc: jones@online.cern.ch (Bob Jones ECP/DS tel:5014 or 4833),
        www-talk@nxoc01.cern.ch


>Tim BL, during a talk at the CHEP'92 conference last week, mentioned that there 

>was some software available to make FrameMaker documents accessible from WWW. I 

>tried finding any references to this in the web but came home empty-handed. Does 

>anyone know if such a beast exists?
>
I've put Dan's hypertext documentation from the tar file into the web.
at http://info.cern.ch./hypertext/WWW/Frame/fminit2.0/www_and_frame.html

Note there is now a list of tools for information providers
(.../WWW/Tools/Overbiew.html) on the web too.


If anyone has any tools, server scripts, etc which aren't on there then
mail me with the source and I'll put them up as examples and inspiration
to those who follow.

	Tim

From koellner%Csa6.LBL.Gov@lbl.bitnet  Mon Oct  5 16:46:04 1992
Return-Path: <koellner%Csa6.LBL.Gov@lbl.bitnet>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01643; Mon, 5 Oct 92 16:46:04 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10223; Mon, 5 Oct 92 16:46:29 +0100
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 5280; Mon, 05 Oct 92 16:45:59 SET
Received: from Lbl.Bitnet by CEARN.cern.ch (Mailer R2.07B) with BSMTP id 7901;
 Mon, 05 Oct 92 16:45:58 SET
Received: from Csa6.LBL.Gov by Csa3.LBL.Gov via INTERNET ;
          Mon, 5 Oct 92 08:45:07 PDT
Date:    Mon, 5 Oct 92 08:44:42 PDT
From: koellner@csa6.lbl.gov%lbl.bitnet (Werner Koellner, LBL)
Message-Id: <921005084442.2c80272b@csa6.lbl.gov>
Subject: WWW/VIOLA "Memory leak" ?
To: timble@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
X-St-Vmsmail-To: ST%"timble@nxoc01.cern.ch"
X-St-Vmsmail-Cc: ST%"www-talk@nxoc01.cern.ch"

                                         LBL, Physics Division,  5-OCT-1992

    I am running the Viola Version of www on a SUN Sparcstation using
    SunOS 4.1.2.

    Because after some time memory in use approaches the allocated swap
    space, I have kept statistics of memory in use by some partcicular
    processes that I normally start to run in the background. Besides www I
    have watched xrn, with the X11 or MOTIF window managers under both
    X11/R4 and X11/R5.

    I find that memory used by xrn remains about the same over time.

    However, the memory used by viola grows steadily with time even though
    no direct access www is being made.

    I see also some minor increase by X:0.

          I wonder if such apparent "memory leak" has been noticed by
          anyone else? Of, course I would also appreciate suggestions
          for correctiong this problem.

                   Best regards,

                                   Werner

From koellner%Csa6.LBL.Gov@lbl.bitnet  Mon Oct  5 16:54:44 1992
Return-Path: <koellner%Csa6.LBL.Gov@lbl.bitnet>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01706; Mon, 5 Oct 92 16:54:44 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10970; Mon, 5 Oct 92 16:54:32 +0100
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 5320; Mon, 05 Oct 92 16:54:17 SET
Received: from Lbl.Bitnet by CEARN.cern.ch (Mailer R2.07B) with BSMTP id 8003;
 Mon, 05 Oct 92 16:54:11 SET
Received: from Csa6.LBL.Gov by Csa3.LBL.Gov via INTERNET ;
          Mon, 5 Oct 92 08:53:21 PDT
Date:    Mon, 5 Oct 92 08:53:13 PDT
From: koellner@csa6.lbl.gov%lbl.bitnet (Werner Koellner, LBL)
Message-Id: <921005085313.2c80272b@csa6.lbl.gov>
Subject: www/viola "memory leak" on SUN ?
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
X-St-Vmsmail-To: ST%"timbl@nxoc01.cern.ch"
X-St-Vmsmail-Cc: ST%"www-talk@nxoc01.cern.ch"

                                         LBL, Physics Division,  5-OCT-1992

    I am running the Viola Version of www on a SUN Sparcstation using
    SunOS 4.1.2.

    Because after some time memory in use approaches the allocated swap
    space, I have kept statistics of memory in use by some partcicular
    processes that I normally start to run in the background. Besides www I
    have watched xrn, with the X11 or MOTIF window managers under both
    X11/R4 and X11/R5.

    I find that memory used by xrn remains about the same over time.

    However, the memory used by viola grows steadily with time even though
    no direct access www is being made.

    I see also some minor increase by X:0.

          I wonder if such apparent "memory leak" has been noticed by
          anyone else? Of, course I would also appreciate suggestions
          for correctiong this problem.

                   Best regards,

                                   Werner

From mcclanah@dlgeo.cr.usgs.gov  Mon Oct  5 17:12:58 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01822; Mon, 5 Oct 92 17:12:58 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12780; Mon, 5 Oct 92 17:13:25 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA25169; Mon, 5 Oct 92 11:13:33 CDT
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA19647; Mon, 5 Oct 1992 11:12:51 -0500
Date: Mon, 5 Oct 1992 11:12:51 -0500
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9210051612.AA19647@dlgeo.cr.usgs.gov>
To: koellner%csa6.lbl.gov%lbl.BITNET@your_bitnet_relay_goes_here.cern.ch (Werner Koellner, LBL),
        timble@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: WWW/VIOLA "Memory leak" ?

We just installed a piece of software called Purify, that is suppose
to detect memory leaks and some other goodies.  Let me see if I can
figure out how to use this stuff and maybe I can look at the output,
or mail it to you with an explanation about what it says.

Don't get to excited it may take a day or two (or three, or four).

Purify comes from Pure Software Inc, 211 Grant Road Los Altos CA,
94024 (support@pure.com)

Pat McClanahan

From mcclanah@dlgeo.cr.usgs.gov  Mon Oct  5 17:14:54 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01836; Mon, 5 Oct 92 17:14:54 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12961; Mon, 5 Oct 92 17:15:23 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA25229; Mon, 5 Oct 92 11:15:27 CDT
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA19668; Mon, 5 Oct 1992 11:14:45 -0500
Date: Mon, 5 Oct 1992 11:14:45 -0500
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9210051614.AA19668@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: Re: WWW/VIOLA "Memory leak" ?

 
We just installed a piece of software called Purify, that is suppose
to detect memory leaks and some other goodies.  Let me see if I can
figure out how to use this stuff and maybe I can look at the output,
or mail it to you with an explanation about what it says.
 
Don't get to excited it may take a day or two (or three, or four).
 
Purify comes from Pure Software Inc, 211 Grant Road Los Altos CA,
94024 (support@pure.com)
 
Pat McClanahan

From timbl  Thu Oct 15 15:23:13 1992
Return-Path: <timbl>
Received: by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08796; Thu, 15 Oct 92 15:23:13 MET
Date: Thu, 15 Oct 92 15:23:13 MET
From: timbl (Tim Berners-Lee)
Message-Id: <9210151423.AA08796@ nxoc01.cern.ch >
Received: by NeXT Mailer (1.62)
To: Jim Davis <davis@dri.cornell.edu>
Subject: Re: page break in HTML
Cc: www-bug@nxoc01.cern.ch, wei@xcf.berkeley.edu, www-talk@nxoc01.cern.ch

> From: Jim Davis <davis@dri.cornell.edu>
> I would like to be able to keep multiple topics in a single file
> (cross referenced by anchors of course) and also guarentee that the
> user does not see material from the next subject.  I use Viola with
> WWW, and it's distracting to see irrelevant material on the same  
page
> of the window.

Do you really need them in a single document?  Within a document, the  
user metaphor is a scrollable area. The user often has a choice of  
window size on that area.  It is unwise to make assumptions about  
that.

I think you are looking for page jumps, and so logically what you  
wnat is a set of documents.  Now you could of course store these in  
one file and write a little server script which would extract the  
documents from the file. (Note distinction between "document" = unit  
of data carried over the net per fetch, and "file" which is a concept
local to the server.

This is what Mike Sendall has done with his STING glossary, for  
example (I think).

It would also be neat for mailbox files.

	Tim BL

From davis@dri.cornell.edu  Fri Oct 16 17:11:18 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13607; Fri, 16 Oct 92 17:11:18 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09624; Fri, 16 Oct 92 17:12:09 +0100
Received: by willow.tc.cornell.edu id AA06348
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Fri, 16 Oct 1992 12:11:46 -0400
Date: Fri, 16 Oct 1992 12:11:46 -0400
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199210161611.AA06348@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: non-text documents

Can you tell us when WWW and Viola will support non-text
documents?  I would very much like to be able to return
pictures including Postscript.  I know this has been discussed
in the past.

One issue is how will the client know what kind of data
is being returned.  It seems there are several possibilities:

1) Make the client figure it out itself by examining the data (e.g.
for "magic numbers").  Simplest, but makes the client do too much
work.

2) Use typed links.  A server which wishes to return non-text data
first returns a constructed document containing anchors where the link
type somehow encodes the data type.  Benefit here is that it allows
the user to choose the kind of data if there is a choice.

3) the HTTP protocol to allow an HTTP server to inform the client of
the kind of data to be returned, maybe even negotiate about it.

4) Extend HTML to allow embedded non-text data, perhaps by using MIME.
Servers will probabaly construct a new document for each query, using
MIME's external reference feature where possible to avoid copying
large data files.

best wishes

From davis@dri.cornell.edu  Fri Oct 16 17:14:43 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13650; Fri, 16 Oct 92 17:14:43 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09819; Fri, 16 Oct 92 17:15:32 +0100
Received: by willow.tc.cornell.edu id AA06356
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Fri, 16 Oct 1992 12:14:34 -0400
Date: Fri, 16 Oct 1992 12:14:34 -0400
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199210161614.AA06356@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: document caching
Cc: wei@xcf.berkeley.edu

There is something in WWW and/or Viola that I don't understand.
It seems to me that Viola (or WWW) is keeping a cache of
all documents so as to avoid needing to retrieve the same
thing again.  But this is a problem when I am either
 1) actively editing the documents
 2) the documents are dynamic - e.g. computed by a server.
In the latter case I dont want to see the cached version, I
want to see the most recent version. 

Or at least I want a way to flush Viola's cache.

From emv@garnet.msen.com  Fri Oct 16 17:32:10 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13800; Fri, 16 Oct 92 17:32:10 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11601; Fri, 16 Oct 92 17:32:49 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mfuau-00007mC@garnet.msen.com>; Fri, 16 Oct 92 12:31 WET DST
Message-Id: <m0mfuau-00007mC@garnet.msen.com>
To: Jim Davis <davis@dri.cornell.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: non-text documents 
In-Reply-To: Your message of Fri, 16 Oct 92 12:11:46.
             <199210161611.AA06348@willow.tc.cornell.edu> 
Date: Fri, 16 Oct 92 12:31:53 EDT
From: Edward Vielmetti <emv@msen.com>

WWW already supports gateways to two protocols that support typed
links - both WAIS and gopher are capable without too much twisting to
encode the document format in with the access to the file.  (I don't
know if the current WWW libraries will support these links.)

I'm trying to think of gopher servers that have a lot of images in
them that you can play with but I come up blank...

--Ed

From putz@parc.xerox.com  Fri Oct 16 19:12:41 1992
Return-Path: <putz@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14334; Fri, 16 Oct 92 19:12:41 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19264; Fri, 16 Oct 92 19:13:31 +0100
Received: from spoggles.parc.xerox.com ([13.2.16.98]) by alpha.xerox.com with SMTP id <12225>; Fri, 16 Oct 1992 11:12:30 PDT
Received: by spoggles.parc.xerox.com id <58401>; Fri, 16 Oct 1992 11:12:23 -0700
Date: 	Fri, 16 Oct 1992 11:12:04 PDT
Sender: Steve Putz <putz@parc.xerox.com>
From: Putz.parc@xerox.com
Subject: Re: document caching
In-Reply-To: <199210161614.AA06356@willow.tc.cornell.edu>
To: Jim Davis <davis@dri.cornell.edu>
Cc: www-talk@nxoc01.cern.ch
Message-Id: <92Oct16.111223pdt.58401@spoggles.parc.xerox.com>

A work-around for Viola is to click on the document title bar (the area immediately above the document text).  this forces a new retrieval.

-- Steve Putz

From connolly@pixel.convex.com  Fri Oct 16 20:29:37 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14807; Fri, 16 Oct 92 20:29:37 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23927; Fri, 16 Oct 92 20:30:12 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA06628; Fri, 16 Oct 92 14:29:27 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA21965; Fri, 16 Oct 92 14:29:24 -0500
Message-Id: <9210161929.AA21965@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Cc: Jim Davis <davis@dri.cornell.edu>
Subject: Re: non-text documents
In-Reply-To: Your message of "Fri, 16 Oct 92 12:11:46 EDT."
             <199210161611.AA06348@willow.tc.cornell.edu> 
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="8<"
Date: Fri, 16 Oct 92 14:29:23 CDT
From: Dan Connolly <connolly@pixel.convex.com>


--8<

>Can you tell us when WWW and Viola will support non-text
>documents?  I would very much like to be able to return
>pictures including Postscript.  I know this has been discussed
>in the past.

That discussion in the past never really went anywhere. I'm going
over my suggestions, and I'd like to summarize them here and solicit
support.

If we use the semantics of the MIME body part to define a WWW
document, many of these issues have straightforward solutions, and
there is hope of interoperating with other MIME compliant systems.
For example, I also hope WAIS and gopher will use the MIME typing
system.

This means every document has an associated Content-Type and
Content-Transfer-Encoding. The MIME RFC defines content types for
text, image, audio, video, and application data, and two encapsulation
types message and multipart. Text, GIF, postscript, and several other
commonly used data formats are mentioned in the standard. And there is
a well-defined method for adding formats to MIME.

It does _not_ mean that all 8-bit data has to be base64 encoded. 8bit
is a perfectly valid Content-Transfer-Encoding, if you're using FTP or
WAIS or some other 8-bit-clean transport mechanism. But if you're
using email or HTTP, base64 solves the issue quite neatly.

Nor does it mean that all documents look like RFC-822 messages.
Messages is one _type_ of MIME body part. The text/plain type covers
plain text documents. Image/gif is good for lots of pictures.
Application/postscript covers printer-ready stuff. Unknown data can be
tagged application/octet-stream. And you can use types starting with
"x-" for experimental private types.


WWW should use typed links, either implicitly or explicitly. For example,
client software can infer the type of a link to a USENET news article
to be message/rfc-822. But it should not assume that a link to a file
on an FTP server is text! That link should include the type of the
data so that the client software can process it intelligently. There's
already quite a bit of this going on in the WWW browser code. The MIME
semantics are just a way to formalize it with the possibility of
interoperating with other systems.

For example, if an anchor that points to a postscript format document
should look like:

<A href="http://info.cern.ch/hypertext/foo.ps"
type="application/postscript"> here is a postscript file.</A>

I wrote a proposal to recast the whole syntax of URLs so that the
above sample would look more like:

<A><HTTP host="info.cern.ch" path="hypertext/foo.ps"
         type="application" subtype="postscript">
here is a postscript file.</A>

The ideas is that we've already got some sort of SGML parser: why not
let it do the work of parsing the URL too? We could use SGML features
for certain semantics; we could use the SGML numeric character entity
reference (&#123;) in stead of the %FF quoting scheme, and we could
use attribute default values to infer type, subtype, and other
attributes.

I also think we should have optional identity information in the
links. This allows clients to determine whether two links point to the
same information. For example, someone might extend some FTP an WAIS
servers to return the MD5 signature of documents. Then a client could
conclude (with some very high probability) that

<ftp host="cs.utexas.edu" path="contrib" name="x.tar.Z" md5="abcdef">

and

<wais host="quake.think.com" database="software" path="x-2.1.tar.Z"
  md5="abcdef">

refer to the same release of the package.

Thoughts?

Dan

p.s. I've attached the MIME RFC below. If you've got a MIME mail UA,
it should be able to bring up the text. If not, there's enough info
for you to ftp the thing manually.

--8<
Content-Description: RFC1341 MIME  (Multipurpose Internet Mail Extensions)
Content-Type: message/external-body;
	access-type=anon-ftp;
	site="thumper.bellcore.com";
	dir="pub/nsb";
	name="BodyFormats.txt";
	size=214081

Content-Type: text/plain


--8<--

From joe@athena.mit.edu  Sun Oct 18 13:01:17 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18494; Sun, 18 Oct 92 13:01:17 GMT+0100
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA08330; Sun, 18 Oct 92 13:02:11 +0100
Received: from LUBEC.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA01325; Sun, 18 Oct 92 07:59:25 EDT
From: joe@athena.mit.edu
Received: by lubec.MIT.EDU (5.61/4.7) id AA11474; Sun, 18 Oct 92 07:59:19 -0400
Date: Sun, 18 Oct 92 07:59:19 -0400
Message-Id: <9210181159.AA11474@lubec.MIT.EDU>
To: tk-www@athena.mit.edu
Cc: www-talk@nxoc01.cern.ch, www-announce@nxoc01.cern.ch,
        tcl-archive@barkley.berkeley.edu
Subject: Announcing tkWWW release 0.4


tkWWW Version 0.4 alpha (joe@athena.mit.edu)
--------------------------------------------

WHAT IS THIS?
-------------
World Wide Web (WWW) is a hypertext project which seeks to build a
world wide network of hypertext links.  There are several different
browsers for this system including a simple tty interface.  For a 
demo of the terminal browsers for WWW, telnet to the following sites:

 telnet info.cern.ch or telnet 128.141.201.74 (SWISS)
 telnet eies2.njit.edu or telnet 128.235.1.43 (USA [NJ])
 telnet vms.huji.ac.il or telnet 128.139.4.3  (ISRAEL)
 telnet info.funet.fi or telnet 128.214.6.100 (FINLAND)

 and login as "www"

Tk is an interpreted toolkit which allows one to build X11 applications
quickly and easily.

tkWWW is a Tk interface to (WWW), which lets you send embedded buttons,
scrollbars, etc in hypertext written for WWW.

The Tk browser has the following advantages.

1. Since the entire user interface is written in an interpreted 
   language, it should be very easy to make modifications and extensions
   to the system.

2. More important, it is possible to imbed Tk code into hypertext
   documents.  Start up the intro demo files to see the use of this.

WHERE IS THIS?
--------------
tkWWW 0.4 can be anon ftp'ed from
   export.lcs.mit.edu:/contrib/tkWWW-0.4.tar.Z
   barkley.berkeley.edu:/tcl/extensions/tkWWW-0.4.tar.Z
   info.cern.ch:/pub/WWW/src/tkWWW-0.4.tar.Z

IMPROVEMENTS SINCE 0.3
----------------------
MUCH easier installation procedure 
  (if you gave up trying to install 0.3, you might try again with this)
Better default color scheme
Keyboard traversals
History mechanism
Does the right thing DVI and graphics files
Bug fixes

MAILING LIST
------------
There is a mailing list devoted to discussions about tkWWW at 
 
   tk-www@athena.mit.edu

To get on this list, send e-mail to

   tk-www-request@athena.mit.edu

INSTALLATION
------------
The installation procedure has been simplified greatly from version
0.3.  To install this version, you will need only the libraries for 
tk 2.3 which can be anon ftp'ed from sprite.berkeley.edu

1. Edit the file TkWWW/tkWWW.imake and TkWWW/Tcl/config.tcl

2. Type the following commands in the directory TkWWW

    xmkmf
    make world
    make install

3. Run tkWWW and enjoy

WARNING
-------
With tkWWW, you can send imbedded tk commands to the interpreter.
There are lots of security implications of this.  I've tried to get
rid of the most obvious security loopholes but doubtless many remain.
Use at your own risk.


From connolly@pixel.convex.com  Thu Oct 22 02:11:16 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07854; Thu, 22 Oct 92 02:11:16 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28764; Thu, 22 Oct 92 02:11:01 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA07818; Wed, 21 Oct 92 20:09:55 -0500
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA02869; Wed, 21 Oct 92 20:09:36 -0500
Message-Id: <9210220109.AA02869@pixel.convex.com>
To: gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch
Cc: nsb@bellcore.com
Subject: misconceptions about MIME [long]
Summary: MIME body != MIME message, MIME is for 8bit systems too
Content-Type: multipart/mixed; boundary="cut"
Date: Wed, 21 Oct 92 20:09:36 CDT
From: Dan Connolly <connolly@pixel.convex.com>

--cut

I wrote an article a while back called "MIME for global hypertext." It
was about a world where all the information tools on the internet
interoperated, with MIME as the substrate. Since then, I've got a few
words of support, but none from the important people. It seems that
many people have taken a cursory look at MIME and dismissed it as only
relevant to email.


	BODY PARTS AND MESSAGES

There are two misconceptions about MIME that show up frequently in
response to my suggestions. The first is the confusion between a MIME
body part and MIME message.

A MIME body part is just a sequence of bytes with an associated
content-type and content-transfer-encoding -- much like a C variable
is just a piece of memory with an associated type. The default MIME
content-type is text/plain, i.e. a sequence of lines of text.

So all the text files out there in the world already fit the role of a
MIME body part. They don't need any headers, encodings, or anything.
In fact, all the non text files qualify as MIME body parts too, if we
associate them with the application/octet-stream content-type and the
binary content-transfer-encoding.

A MIME message is actually a special case of the body part concept.
Along with the text/plain, image/gif, audio/basic,
application/postscript etc. types, there's a message/rfc-822 type.
That's where the headers and stuff come in.

There's also a multipart/mixed type that encapsulates several body
parts into one. It has some syntax that a lot of folks aren't crazy
about, but it's just _one_type_ of body part.


	EIGHT BIT DATA, ENCODINGS, AND TRANSPORT

The other area of confusion concerns eight bit data. MIME provides
mechanisms for transport of eight bit data across mail transport
agents that only grok limited character sets and line lengths. These
mechanisms obviously increase the size of messages.

But when used with 8-bit-clean transport mechanisms, the encodings are
not necessary, and MIME adds no cost to data transport. From the RFC:

	As of the publication of this document, there are no
	standardized Internet transports for which it is legitimate
        to include unencoded 8-bit or binary data in mail bodies.
        Thus there are no circumstances in which the "8bit" or "binary"
        Content-Transfer-Encoding is actually legal on the Internet.
        However, in the event that 8-bit or binary mail transport
        becomes a reality in Internet mail, or when this document
                                            ^^^^^^^^^^^^^^^^^^^^^
        is used in conjunction with any other 8-bit or binary-capable
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        transport mechanism, 8-bit or binary messages should be labeled
        ^^^^^^^^^^^^^^^^^^^
        as such using this mechanism.

That is, the MIME standard suggests that 8-bit data be labelled as
such, so that gateways between 8-bit and 7-bit systems can recognize
and encode such data.

For example: a WAIS<->email gatway might retrieve a GIF image from a
WAIS server. If the WAIS server stated that the data is type image/gif
and binary encoded, the gateway could base64 encode the data and send
it on its way through SMTP. On the other hand, if the server labelled
the data 7bit text/plain, the gateway could pass it along without
encoding.


	GOPHER SUPPORT FOR MIME

Gopher defines several types of "objects." The basic types are text
files and directories. Other types include various archive formats,
telnet sessions, CSO servers, raw data files, and a few experimental
types.

One of the experimental types is 'M' for MIME messages, that is body
parts of type message/rfc-822. I suppose that much of the opposition
to using the MIME body part to model the Gopher object comes from
folks who think that they'd have to put all their data into
message/rfc-822 format.

But I didn't suggest we use the MIME message/rfc-822 format for all
Gopher objects: just use _some_ MIME format for all gopher objects.
The fact is, their data is already in a MIME format: text/plain. And
the experimental 'g' (GIF) type is already a MIME type: image/gif.

The only Gopher objects that don't fit the MIME system are the ones
that are not data streams at all: telnet sessions, CSO servers, etc. I
don't know how (or if) they fit into the MIME model.

There are some Gopher objects that fit the MIME model but are not part
of the MIME standard (yet). For example, the directory listing that
gopher servers send back could be called application/x-gopher for now,
and eventually application/gopher (when it's spec'd out and registered
with the IANA.)

The gopher protocol can be enhanced one time to support the myriad of
multimedia data formats by including a content-type field in gopher
listings.

The Gopher+ protocol has even more in common with MIME. In Gopher+,
each gopher object has a bunch of ancillary information such as the
maintainer, size, format, etc. A Gopher+ object and its ATTRIBUTES
looks an awful lot like a MIME body part and it's encapsulating
message. It seems a waste to define two competing standards for the
same mechanisms.


	WAIS SUPPORT FOR MIME

A WAIS document looks like a MIME body part too: a sequence of bytes
with a type. The canonical WAIS type is TEXT. And like the type 'M'
support in gopher, somebody hacked in support for a MIME type in WAIS.

Again, I suggest that the MIME typing system be used in stead of,
rather than inside, the WAIS typing system. That is, modify the
Document-id Structure Definition so that

:type <string>

is obsoleted by 

:content-type <string> ;; as defined by RFC-1341

The only two supported types are TEXT and SRC, whic translate neatly
to text/plain and application/x-wais-src.


	WWW SUPPORT FOR MIME

There was a question on www-talk about non-text data in WWW documents.
It seems clear that using MIME body parts to model WWW documents is a
natural step.

The notion of a WWW address should be expanded to what I would call a
reference, which is an address, a content-type, and any identification
information (so that clients can test whether two references point to
the same document.)

The WWW client currently infers the content-type from the address. For
the file: scheme, an .html extension implies HTML format -- other wise
text is assumed. Documents from HTTP servers are HTML, which slams
plain text inside SGML if necessary. Documents from Gopher servers are
either plain text or gopher listings. I don't know what WWW clients do
with WAIS documents that aren't text.


	FROM GLOBAL HYPERTEXT TO GLOBAL HYPERMEDIA

The Internet currently serves as the backbone for a global hypertext.
FTP and email provided a good start, and the gopher, WWW, or WAIS
clients and servers make wide area information browsing simple. These
systems even interoperate, with email servers talking to FTP servers,
WWW clients talking to gopher servers, on and on.

This currently works quite well for text.  But what should WWW clients
do as Gopher and WAIS servers begin to serve up pictures, sounds,
movies, spreadsheet templates, postscript files, etc.? It would be a
shame for each to adopt its own multimedia typing system.

If they all adopt the MIME typing system (and as many other features
from MIME as are appropriate), we can step from global hypertext to
global hypermedia that much easier.


	READ IT YOURSELF

Attached is the text of the MIME RFC. Enjoy.

--cut
Content-Description: RFC1341 MIME  (Multipurpose Internet Mail Extensions)
Content-Type: message/external-body;
        access-type=anon-ftp;
        site="thumper.bellcore.com";
        dir="pub/nsb";
        name="BodyFormats.txt";
        size=214081

Content-Type: text/plain

--cut--

From nsb@thumper.bellcore.com  Thu Oct 22 14:25:25 1992
Return-Path: <nsb@thumper.bellcore.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01397; Thu, 22 Oct 92 14:25:25 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09775; Thu, 22 Oct 92 14:36:57 +0100
Received: from greenbush.bellcore.com by thumper.bellcore.com (4.1/4.7)
	id <AA07296> for www-talk@nxoc01.cern.ch; Thu, 22 Oct 92 09:36:05 EDT
Received: by greenbush.bellcore.com (4.1/4.7)
	id <AA17504> for nsb@bellcore.com; Thu, 22 Oct 92 09:36:03 EDT
Received: from Messages.8.5.N.CUILIB.3.45.SNAP.NOT.LINKED.greenbush.galaxy.sun4.41
          via MS.5.6.greenbush.galaxy.sun4_41;
          Thu, 22 Oct 1992 09:35:59 -0400 (EDT)
Message-Id: <cetesz_0M2Yt53sZli@thumper.bellcore.com>
Date: Thu, 22 Oct 1992 09:35:59 -0400 (EDT)
From: Nathaniel Borenstein <nsb@thumper.bellcore.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
To: gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, Dan Connolly <connolly@pixel.convex.com>
Subject: Re: misconceptions about MIME [long]
Cc: nsb@bellcore.com
In-Reply-To: <9210220109.AA02869@pixel.convex.com>
References: <9210220109.AA02869@pixel.convex.com>

Dan's comments are right on the money.  As an example of how you can
treat non-mail-oriented data as being in MIME format, I've recently
written a script that makes it trivial to set up a MIME-smart mailserver
daemon for, say, everything in your anonymous ftp directory.  This
script -- which will be part of the next metamail release -- accepts
mail requests that give path names relative to the anonymous ftp root,
e.g. "pub/nsb/BodyFormats.txt" and sends the results back as MIME-format
mail.  The neat thing is that the files themselves don't need to be in
MIME format.  The files are assumed to be plain text unless there is a
".ct" file (e.g. "pub/nsb/BodyFormats.txt.ct") in which case that file
is assumed to contain the Content-type information.  Thus if you have a
gif image in file "foo", you can put the text "image/gif" in the file
"foo.ct" and the mailserver will be ready to send the GIF image as
MIME-format mail.  The script is smart enough, using the metamail tools,
to deal with any necessary encoding for mail transport, even though the
raw data is unencoded.

The point is that, as Dan says, the data doesn't need to be explicitly
in MIME format.  MIME body parts are just (possibly encoded) data in
reasonably standard formats.  If you don't enclose it in a mail-ish
thing with a content-type header field, you need some other
"out-of-band" way of providing the type information, but this can be
done in many ways, e.g. the ".ct" files my mailserver uses.  Viewed this
way, all that MIME is really comes down to three things:

1.  A mechanism for encoding arbitrary data for mail transport.  This is
orthogonal to the other parts and can be largely ignored in non-mail
applications.

2.  A mechanism for combining multiple objects in a "multipart" format
defined by MIME.  This doesn't need to be used by non-mail applications,
but a common way of doing this has obvious value.  Why shouldn't
multi-media objects be shared across email, wais, gopher, and www?

3.  A naming convention and a set of standard names for describing data
types such as "image/gif" and "audio/basic".  The common naming
conventions are perhaps the most valuable aspect of MIME for non-mail
applications, as it is pretty obviously silly to give slightly different
names to the same things in different systems.

Anyway, as a principle author of MIME I know I'm not in a great position
to appear to be objective, but I really don't see any good reasons not
to use MIME in applicaitons such as gopher, wais, or www.  -- Nathaniel

From NED@sigurd.innosoft.com  Fri Oct 23 09:48:45 1992
Return-Path: <NED@sigurd.innosoft.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08243; Fri, 23 Oct 92 09:48:45 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12187; Fri, 23 Oct 92 06:40:47 +0100
Received: from SIGURD.INNOSOFT.COM by SIGURD.INNOSOFT.COM (PMDF #1339 ) id
 <01GQ9KR9KTOA9D4EDD@SIGURD.INNOSOFT.COM>; Thu, 22 Oct 1992 22:39:35 PDT
Date: 22 Oct 1992 22:39:33 -0700 (PDT)
From: Ned Freed <NED@sigurd.innosoft.com>
Subject: Re: misconceptions about MIME [long]
To: nsb@thumper.bellcore.com
Cc: nsb@thumper.bellcore.com, masinter@parc.xerox.com,
        gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        connolly@pixel.convex.com, NED@sigurd.innosoft.com,
        www-talk@nxoc01.cern.ch
Message-Id: <01GQ9KR9LCZ09D4EDD@SIGURD.INNOSOFT.COM>
X-Vms-To: IN%"nsb@thumper.bellcore.com"
X-Vms-Cc: 
 IN%"nsb@thumper.bellcore.com",IN%"masinter@parc.xerox.com",IN%"gopher@boombox.micro.umn.edu",
 IN%"wais-talk@quake.think.com",IN%"connolly@pixel.convex.com",IN%NED,IN%"www-talk@nxoc01.cern.ch"
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-Transfer-Encoding: 7BIT

Nathaniel was kind enough to forward your message to me.

> I recall being flamed rather severely by Ned Freed when I suggested
> that MIME was inadequate because the specification of format-types
> such as 'postscript' or 'gif' didn't specify enough about format
> versions, external resources used, etc.

The flaming, if you wish to call it that, was caused by what I saw as a
repeated failure on your part to read the words I was writing. I certainly did
not flame you because of this idea. It isn't a bad idea on the surface; it only
falls apart upon close examination.

>  Many of his arguments were based on the practical difficulties of
> requiring any kind of additional standardization for document format
> versions in a distributed mail application.

My position regarding PostScript is based on three facts:

(1) Mechanisms already exist for imbedding all this information inside
    PostScript objects. This format is readily understandable and easy to
    process.

(2) Generation of this information if it isn't already in a given object isn't
    just hard, it is totally and completely impossible. It is trivial to
    demonstrate that this is equivalent to the halting problem. The notion
    that something "close" the correct could be generated with a little work is
    highly suspect, as are the advantages of producing external labelling that's
    guaranteed to be inaccurate in some cases.

(3) When the external information <> internal information you have a silly
    state. A guiding principle of the working group was to avoid silly
    states whenever possible.

Modulo the notion in (2) these are all facts and not opinions. Based on these
facts I think external format labelling of PostScript is an extremely bad idea.

I am much less familiar with GIF and I have relied on other folks who are
more expert than I to deal with GIF issues.

> Now that MIME is out as a proposal for mail, I still believe that
> these problems should be addressed before MIME is appropriate for
> database, archival and retrieval applications.

As far as PostScript goes I think I have made my position clear. It has not
changed in any way since we last communicated. However, my position on
PostScript does not necessarily apply to other formats. Each format is a
separate beast and must be handled in a manner that matches its nature. Just
because I am opposed to external labelling of PostScript doesn't mean external
labelling of something else is inappropriate. It usually boils down to
examination of three issues:

(1) Is internal labelling feasible? If feasible do applications actually use it?

(2) How hard is it to derive external label information? There are basically
    three possibilities: it is either something you just have to know (like
    the character set), it is always part of the object (like WordPerfect
    version numbers), or it can be produced from analysis of the input.

(3) Is there potential for conflict between internal and external labelling?

The interactions between these things is complex; I have never derived an
explicit cause-and-effect path from these to whether or not an external
label should be used.

> In addition, the current mechanism in MIME for external references suffers the
> same problem that other references mechanisms that are based on
> hostname/pathname have: files move, change in place, host names come and go
> over the years.

I certainly agree that this is a problem. I would love to see it solved, and I
would welcome the introduction of additional parameters to solve it.

However, I don't see any way to solve it without introducing at least one
additional level of indirection. This means some kind of directory service
would have to be deployed. Now, this may be a good idea, in fact it may be a
terrific idea, but it is somewhat beyond MIME's purview to define a directory
service for locating objects.

In other words, I believe the solution to this problem would at a minimum
involve the introduction of some kind of directory service (which could be
accessed via MIME messages but in practice would probably require a direct
protocol connection) and the definition of a new sort of external reference
with parameters appropriate for reaching this service. The difficult parts of
this are the methods you use in the directory to keep existing pointers valid
and the definition of the directory access protocol itself. The extensions to
MIME are the trivial part.

I would welcome further discussion on how we should work towards solving
these problems.

> Both these problems are not trival to solve, but I don't think they
> are unsolvable.

They are extremely difficult problems to solve. However, the first step towards
their solution is to focus on where the problems really are, and I don't think
that's MIME.

				Ned

From alberti@boombox.micro.umn.edu  Fri Oct 23 10:42:29 1992
Return-Path: <alberti@boombox.micro.umn.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08359; Fri, 23 Oct 92 10:42:29 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14351; Thu, 22 Oct 92 21:09:51 +0100
Received: from boombox.micro.umn.edu by mail.unet.umn.edu (5.65c/)
	id AA21084; Thu, 22 Oct 1992 15:08:56 -0500
Received: from eagles.micro.umn.edu by boombox.micro.umn.edu; Thu, 22 Oct 92 15:25:16 CDT
From: "Bob Alberti" <alberti@boombox.micro.umn.edu>
Date: Thu, 22 Oct 92 14:25:39 CST
Message-Id: <51941.alberti@boombox.micro.umn.edu>
X-Popmail-Charset: English
To: nsb@thumper.bellcore.com
Cc: gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, connolly@pixel.convex.com, ned@innosoft.com
Subject: Re: misconceptions about MIME [long]

     Could this argument be taken to a Newsgroup or restricted to a MIME 
mailing list?  Does everyone need to follow it (possibly multiple times) in 
their mailboxes?  Thanks.
-----------------------------------------------------------
Bob Alberti                                       Albatross
U of MN CIS "Team Gopher"                    Metropolis BBS
alberti@boombox.micro.umn.edu                (612) 721-7052                   
Contents: 30% header, 30% quote, 10% content, 30% signature

From emv@garnet.msen.com  Fri Oct 23 10:47:43 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09703; Fri, 23 Oct 92 10:47:43 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA08416; Thu, 22 Oct 92 20:06:37 +0100
Received: from garnet.msen.com by mcsun.EU.net with SMTP
	id AA27631 (5.65b/CWI-2.182); Thu, 22 Oct 1992 20:05:51 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mi7no-00007jC@garnet.msen.com>; Thu, 22 Oct 92 15:02 WET DST
Message-Id: <m0mi7no-00007jC@garnet.msen.com>
To: Larry Masinter <masinter@parc.xerox.com>
Cc: nsb@thumper.bellcore.com, gopher@boombox.micro.umn.edu,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch,
        connolly@pixel.convex.com, nsb@bellcore.com
Subject: Re: misconceptions about MIME [long] 
In-Reply-To: Your message of Thu, 22 Oct 92 11:30:46.
             <92Oct22.113048pdt.101795@poplar.parc.xerox.com> 
Date: Thu, 22 Oct 92 15:02:21 EDT
From: Edward Vielmetti <emv@msen.com>

documents are going to move around on the nets, indefinitely, so long
as they are all "free".  As soon as you give people the opportunity to
sell things (to exchange money in exchange for goods) you will be
quite sure that people will construct document identifiers that do not
move around.

The Sears catalog numbers don't change from week to week cause Sears
has proper incentives for making them work.

--Ed

From nsb@thumper.bellcore.com  Fri Oct 23 10:52:42 1992
Return-Path: <nsb@thumper.bellcore.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10984; Fri, 23 Oct 92 10:52:42 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09586; Thu, 22 Oct 92 20:24:09 +0100
Received: from greenbush.bellcore.com by thumper.bellcore.com (4.1/4.7)
	id <AA14510> for www-talk@nxoc01.cern.ch; Thu, 22 Oct 92 15:23:11 EDT
Received: by greenbush.bellcore.com (4.1/4.7)
	id <AA18177> for ned@innosoft.com; Thu, 22 Oct 92 15:23:10 EDT
Received: from Messages.8.5.N.CUILIB.3.45.SNAP.NOT.LINKED.greenbush.galaxy.sun4.41
          via MS.5.6.greenbush.galaxy.sun4_41;
          Thu, 22 Oct 1992 15:23:05 -0400 (EDT)
Message-Id: <0etjyNa0M2Yt56y3N_@thumper.bellcore.com>
Date: Thu, 22 Oct 1992 15:23:05 -0400 (EDT)
From: Nathaniel Borenstein <nsb@thumper.bellcore.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
To: Larry Masinter <masinter@parc.xerox.com>
Subject: Re: misconceptions about MIME [long]
Cc: gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, connolly@pixel.convex.com,
        Ned Freed <ned@innosoft.com>
In-Reply-To: <92Oct22.113048pdt.101795@poplar.parc.xerox.com>
References: <92Oct22.113048pdt.101795@poplar.parc.xerox.com>

I think Ned (who I just added to the growing distribution list on this
exchange!)'s argument was that formats such as Postscript and Gif have
developed or are developing ways of specifying such things IN-band, that
is, in the actual data stream itself rather than in an out-of-band
location such as the MIME content-type header.  Insofar as this is true,
I think it makes much more sense NOT to further complicate matters by
introducing a way to specify these matters out-of-band.  In other words,
including information in a place like the MIME Content-type header
should only be done if there's no way for including the information in
part of the actual data, that is, the MIME body part.  I think that's
the essential philosophy behind that choice, at any rate.  -- Nathaniel


From masinter@parc.xerox.com  Fri Oct 23 10:57:03 1992
Return-Path: <masinter@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12107; Fri, 23 Oct 92 10:57:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28839; Thu, 22 Oct 92 19:32:16 +0100
Received: from poplar.parc.xerox.com ([13.2.16.165]) by alpha.xerox.com with SMTP id <11774>; Thu, 22 Oct 1992 11:31:04 PDT
Received: by poplar.parc.xerox.com id <101795>; Thu, 22 Oct 1992 11:30:48 -0700
To: nsb@thumper.bellcore.com
Cc: gopher@boombox.micro.umn.edu, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, connolly@pixel.convex.com, nsb@bellcore.com
In-Reply-To: Nathaniel Borenstein's message of Thu, 22 Oct 1992 06:35:59 -0700 <cetesz_0M2Yt53sZli@thumper.bellcore.com>
Subject: Re: misconceptions about MIME [long]
From: Larry Masinter <masinter@parc.xerox.com>
Sender: Larry Masinter <masinter@parc.xerox.com>
Fake-Sender: masinter@parc.xerox.com
Message-Id: <92Oct22.113048pdt.101795@poplar.parc.xerox.com>
Date: 	Thu, 22 Oct 1992 11:30:46 PDT

I recall being flamed rather severely by Ned Freed when I suggested
that MIME was inadequate because the specification of format-types
such as 'postscript' or 'gif' didn't specify enough about format
versions, external resources used, etc.

Many of his arguments were based on the practical difficulties of
requiring any kind of additional standardization for document format
versions in a distributed mail application.

Now that MIME is out as a proposal for mail, I still believe that
these problems should be addressed before MIME is appropriate for
database, archival and retrieval applications. In addition, the
current mechanism in MIME for external references suffers the same
problem that other references mechanisms that are based on
hostname/pathname have: files move, change in place, host names come
and go over the years.

Both these problems are not trival to solve, but I don't think they
are unsolvable.

From rik@daneel.rdt.monash.edu.au  Fri Oct 23 11:42:40 1992
Return-Path: <rik@daneel.rdt.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11463; Fri, 23 Oct 92 11:42:40 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24446; Fri, 23 Oct 92 11:54:08 +0100
Received: from daneel.rdt.monash.edu.au by mcsun.EU.net with SMTP
	id AA11276 (5.65b/CWI-2.182); Fri, 23 Oct 1992 11:52:37 +0100
Received: by daneel.rdt.monash.edu.au (5.57/Ultrix3.0-C)
	id AA03886; Fri, 23 Oct 92 20:51:07 +1000
Message-Id: <9210231051.AA03886@daneel.rdt.monash.edu.au>
To: timbl@nxoc01.cern.ch (Tim Berners-Lee)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Man pages server code, anyone? 
In-Reply-To: Your message of "28 Sep 92 13:40:33 +0100."
             <9209281240.AA04048@ nxoc01.cern.ch > 
Date: Fri, 23 Oct 92 20:51:06 -1000
From: Rik Harris <rik@daneel.rdt.monash.edu.au>
X-Mts: smtp

Almost a month ago, Tim wrote:
> I know I heard of someone with a filter for unix man page to HTML,
> but I can't find it.  Does anyone on this list write one?

OK, I finally have a reasonably nice-looking man converter.  It does
the following things:

* puts section headings in <H2> </H2>'s.
* formats paragraphs with <P>.
* does some special characters.
* hypertext links for references to other manual pages.
* some <HP?> highlighting.

Current problems:

* it's not lightning fast.
* doesn't handle tbl correctly yet.
* it would be nice to put some things in a <DL> type list.
* many of the special characters missing.
* it does some strange spacing sometimes.

The filter is in a number of parts.  The first part is written in perl,
and parses the man page names and gets a list of filenames, which it
pipes to groff.  I have built a special groff filter in perl for the
second part.  This filter takes the groff device-independent intermediate
output, and converts it to HTML.

The code's not too bad, but could do with a bit of cleaning-up,
particularly the tbl handling.  You can play with the filter by connecting
to:

  http://www.vifp.monash.edu.au:5000/MANPAGE

where MANPAGE can just be a name, like 'cat', or it can be a name and
section, like 'cos(3m)'.

Please tell me if you notice anything strange, and I will attempt to
fix it.  I'll give the code to people if they really want it, but as I said
before, I hope to clean it up a little before I release it more
generally.  To run the code, you need groff and perl and you need to be
able to install new drivers for groff (I think there's an option for
groff to look in a different directory for drivers).

This is part of our local help/documentation system, which will
eventually be complete, changing documentation for our computer
systems.  I essentially wanted to be able to direct people to the man
pages when necessary, and I thought it pointless to have man pages if
you couldn't just click on the "See Also"'s  :-)

Have fun, and let me know what you think.

rik.
--
Rik Harris - rik.harris@fcit.monash.edu.au         || Systems Programmer
+61 3 571-2895 (AH & ans.mach) +61 3 573-2679 (BH) || and Administrator
Faculty of Computing and Information Technology,   || Vic. Institute of
Caulfield Campus, Monash University, Australia     || Forensic Pathology

From dagenais@wotan.vlsi.polymtl.ca  Mon Oct 26 14:52:14 1992
Return-Path: <dagenais@wotan.vlsi.polymtl.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00422; Mon, 26 Oct 92 14:52:14 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12963; Mon, 26 Oct 92 15:04:03 +0100
Received: from vlsi.polymtl.ca by charles.cdec.polymtl.ca (AIX 3.1/UCB 5.61/4.04)
          id AA04560; Mon, 26 Oct 92 10:03:21 -0500
Received: from  pollux.vlsi.polymtl.ca (pollux.vlsi.polymtl.ca) by wotan.vlsi.polymtl.ca (4.1/SMI-4.1)
	id AA27730; Mon, 26 Oct 92 08:58:49 EST
Date: Mon, 26 Oct 92 08:58:49 EST
From: dagenais@vlsi.polymtl.ca (Michel Dagenais)
Message-Id: <9210261358.AA27730@wotan.vlsi.polymtl.ca>
Received: by  pollux.vlsi.polymtl.ca (4.1/SMI-4.0)
	id AA04079; Mon, 26 Oct 92 09:09:10 EST
To: rik@daneel.rdt.monash.edu.au
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: Rik Harris's message of Fri, 23 Oct 92 20:51:06 -1000 <9210231051.AA03886@daneel.rdt.monash.edu.au>
Subject: Man pages server code, anyone? 

> > I know I heard of someone with a filter for unix man page to HTML,
> > but I can't find it.  Does anyone on this list write one?
>
> OK, I finally have a reasonably nice-looking man converter.  It does
> the following things:

How about GNU info files. I would love to integrate these into
the user information database along with the man pages.

From evas@cs.few.eur.nl  Mon Oct 26 15:13:28 1992
Return-Path: <evas@cs.few.eur.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00563; Mon, 26 Oct 92 15:13:28 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15032; Mon, 26 Oct 92 15:25:19 +0100
Received: from evas@slc01.cs.few.eur.nl by cs.few.eur.nl (5.67/EUR)
	id AA04309; Mon, 26 Oct 92 15:24:29 +0100
From: Eelco van Asperen <evas@cs.few.eur.nl>
Received: by slc01.cs.few.eur.nl (5.67/EUR/BSD)
	id AA22167; Mon, 26 Oct 92 15:24:24 +0100
Date: Mon, 26 Oct 92 15:24:24 +0100
Message-Id: <9210261424.AA22167@slc01.cs.few.eur.nl>
To: dagenais@vlsi.polymtl.ca
Subject: Re: Man pages server code, anyone?
Cc: www-talk@nxoc01.cern.ch


> How about GNU info files. I would love to integrate these into
> the user information database along with the man pages.

I've done this a while ago; check ftp.cs.few.eur.nl, directory pub/www.
There is a patch for the 4.0 HTTP daemon and two filters that are
called from the daemon to convert GNU info (info2html) and formatted
man pages (man2html) to HTML format. The syntax of the httpd 
configuration file has been extended with a 'convert' line, for
example:
	convert	info	/usr/local/lib/WWW/bin/info2html

Eelco van Asperen.           | Erasmus University Rotterdam
-----------------------------| Department of Computer Science, room H4-32
internet: evas@cs.few.eur.nl | PObox 1738, 3000 DR Rotterdam, The Netherlands

From evas@cs.few.eur.nl  Mon Oct 26 15:18:31 1992
Return-Path: <evas@cs.few.eur.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00600; Mon, 26 Oct 92 15:18:31 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15456; Mon, 26 Oct 92 15:30:18 +0100
Received: from evas@slc01.cs.few.eur.nl by cs.few.eur.nl (5.67/EUR)
	id AA04720; Mon, 26 Oct 92 15:29:24 +0100
From: Eelco van Asperen <evas@cs.few.eur.nl>
Received: by slc01.cs.few.eur.nl (5.67/EUR/BSD)
	id AA22177; Mon, 26 Oct 92 15:29:20 +0100
Date: Mon, 26 Oct 92 15:29:20 +0100
Message-Id: <9210261429.AA22177@slc01.cs.few.eur.nl>
To: www-talk@nxoc01.cern.ch
Subject: Re: Man pages server code, anyone?


> How about GNU info files. I would love to integrate these into
> the user information database along with the man pages.

I've done this a while ago; check ftp.cs.few.eur.nl, directory pub/www.
There is a patch for the 4.0 HTTP daemon and two filters that are
called from the daemon to convert GNU info (info2html) and formatted
man pages (man2html) to HTML format. The syntax of the httpd 
configuration file has been extended with a 'convert' line, for
example:
	convert	info	/usr/local/lib/WWW/bin/info2html

Eelco van Asperen.           | Erasmus University Rotterdam
-----------------------------| Department of Computer Science, room H4-32
internet: evas@cs.few.eur.nl | PObox 1738, 3000 DR Rotterdam, The Netherlands

From masinter@parc.xerox.com  Tue Oct 27 23:27:48 1992
Return-Path: <masinter@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08676; Tue, 27 Oct 92 23:27:48 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AB24654; Tue, 27 Oct 92 23:39:48 +0100
Received: from poplar.parc.xerox.com ([13.2.16.165]) by alpha.xerox.com with SMTP id <11859>; Tue, 27 Oct 1992 14:38:36 PST
Received: by poplar.parc.xerox.com id <101795>; Tue, 27 Oct 1992 14:38:29 -0800
To: NED@sigurd.innosoft.com
Cc: nsb@thumper.bellcore.com, wais-talk@quake.think.com,
        connolly@pixel.convex.com, www-talk@nxoc01.cern.ch
In-Reply-To: Ned Freed's message of Thu, 22 Oct 1992 22:39:33 -0700 <01GQ9KR9LCZ09D4EDD@SIGURD.INNOSOFT.COM>
Subject: Re: misconceptions about MIME [long]
From: Larry Masinter <masinter@parc.xerox.com>
Sender: Larry Masinter <masinter@parc.xerox.com>
Fake-Sender: masinter@parc.xerox.com
Message-Id: <92Oct27.143829pst.101795@poplar.parc.xerox.com>
Date: 	Tue, 27 Oct 1992 14:38:18 PST

I no longer know what forum to address this to, I suppose we've been
asked to remove the discussion from 'gopher@boombox.micro.umn.edu'.

The arguments that in-band designation of document format is better
than out-of-band information may apply in the electronic mail
scenarios, where there is a single sender, multiple recipients, and
the recipient has no control over what the sender might send.

Instead, imagine, if you would, another scenario, of a WAIS or Web or
anonymous FTP archive, which wishes to make available the latest
version of the MIME specification. Let us suppose, in addition, that
the publishing service has three different representations of the
document, one marked "MIME rich-text", one marked "postscript", and
one NetFax.  Furthermore, let us suppose (as has been proposed) that
the document types are marked by their MIME Content-type header
designation.

If I wish to retrieve the document, say to view it, I might want to
choose the available representation that is most appropriate for my
purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
from an anonymous FTP archive, only to discover that it is in the
newly announced Postscript level 4 format, or to try to edit it only
to discover that it is in the (upwardly compatible but not parsable by
my client) version 44 of Rich Text. In each case, the appropriateness
of alternate sources and representations of a document would depend on
information that is currently only available in-band.

I believe that MIME was developed in the context of electronic mail,
but that the usage patterns in space and time of archives, database
services and the like require more careful attention (a) to
out-of-band information about format versions, so that you might know,
before you retrieve a representation, whether you have the capability
of coping with it, and (b) some restriction on those formats which
might otherwise be uncontrollable.

Finally, as much as I've tried to resist, I'll characterize your
description of my response as 'repeated failure on your part to read
the words I was writing' as 'inflammatory hogwash'.

From connolly@pixel.convex.com  Tue Oct 27 23:52:34 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08791; Tue, 27 Oct 92 23:52:34 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25865; Wed, 28 Oct 92 00:04:34 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA23359; Tue, 27 Oct 92 17:03:46 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA18485; Tue, 27 Oct 92 17:03:41 -0600
Message-Id: <9210272303.AA18485@pixel.convex.com>
To: Larry Masinter <masinter@parc.xerox.com>
Cc: NED@sigurd.innosoft.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch
Subject: Re: misconceptions about MIME [long] 
In-Reply-To: Your message of "Tue, 27 Oct 92 14:38:18 PST."
             <92Oct27.143829pst.101795@poplar.parc.xerox.com> 
Date: Tue, 27 Oct 92 17:03:40 CST
From: Dan Connolly <connolly@pixel.convex.com>


>If I wish to retrieve the document, say to view it, I might want to
>choose the available representation that is most appropriate for my
>purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
>from an anonymous FTP archive, only to discover that it is in the
>newly announced Postscript level 4 format, or to try to edit it only
>to discover that it is in the (upwardly compatible but not parsable by
>my client) version 44 of Rich Text. In each case, the appropriateness
>of alternate sources and representations of a document would depend on
>information that is currently only available in-band.

What methodology do you propose to prevent this situation? It looks
like a very hard problem indeed. But MIME makes a good stab at
standardizing practices that are going on now. I think we can prevent
further divergence in the CSCW and global hypermedia communities
by adopting MIME now.

In short: I think MIME will not completely solve the problem you
stated, but it _will_ do more good than harm.


>I believe that MIME was developed in the context of electronic mail,
>but that the usage patterns in space and time of archives, database
>services and the like require more careful attention (a) to
>out-of-band information about format versions, so that you might know,
>before you retrieve a representation, whether you have the capability
>of coping with it, and (b) some restriction on those formats which
>might otherwise be uncontrollable.

The function you describe in (a) above is commonly known as the
halting problem. No can do. Formats mentioned in (b) are called
turing machines: postscript programs, excel macros, etc. And life
gets only a little easier if you get rid of turing machines.

If I understand you correctly, every document must be annotated
with all of the resources it requires. For example:

* TIFF image. 400x760. 16 colors (pantone #416, #450, #23, ...)
zbar compression. 10k compressed. 160k uncompressed.

* postscript document. A4 page size. Peak virtual memory usage: 2.7mb
on a LaswerWriter IINT. Fonts: courier (4-18pt), times, New Century Schoolbook.

* xwd image. 24 bit direct color image. Requires patch #18 on
the RS/6000 X server.

I think MIME starts to look like a _very_ reasonable level of
standardization given the possible spectrum.

Dan


From masinter@parc.xerox.com  Wed Oct 28 00:32:46 1992
Return-Path: <masinter@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09020; Wed, 28 Oct 92 00:32:46 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29051; Wed, 28 Oct 92 00:44:46 +0100
Received: from poplar.parc.xerox.com ([13.2.16.165]) by alpha.xerox.com with SMTP id <11823>; Tue, 27 Oct 1992 15:43:40 PST
Received: by poplar.parc.xerox.com id <101795>; Tue, 27 Oct 1992 15:43:37 -0800
To: connolly@pixel.convex.com
Cc: NED@sigurd.innosoft.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch
In-Reply-To: Dan Connolly's message of Tue, 27 Oct 1992 15:03:40 -0800 <9210272303.AA18485@pixel.convex.com>
Subject: Re: misconceptions about MIME [long] 
From: Larry Masinter <masinter@parc.xerox.com>
Sender: Larry Masinter <masinter@parc.xerox.com>
Fake-Sender: masinter@parc.xerox.com
Message-Id: <92Oct27.154337pst.101795@poplar.parc.xerox.com>
Date: 	Tue, 27 Oct 1992 15:43:32 PST

> What methodology do you propose to prevent this situation?

* TIFF images are frequently restricted by the TIFF class (Class F,
  B, and NetFax) by which recipients. Rather than merely identifying
  the archive as 'tiff' it seems feasible to be more specific.

* If you register a format name, then the name should be linked to a
  well known, published, dated version of the specification of those
  formats, and not to any possible future currently-unspecified even
  if upwardly-compatible extension.  That is, if you insist that the
  format be called 'postscript', then it should be restricted to 
  'postscript' as known at the time of the definition of the standard.
  Perhaps the situation with postscript is hopeless, but it isn't with
  either 'rich text' or 'gif' or a number of 'audio' representations.

Part of the problem is that the very weakness of 'postscript' as an
interchange format is overly influencing your position. It may well be
that carousel will dominate postscript as a printable representation
exactly because Adobe finally is addressing some of the interchange
issues.




From connolly@pixel.convex.com  Wed Oct 28 00:42:47 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09062; Wed, 28 Oct 92 00:42:47 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00481; Wed, 28 Oct 92 00:54:47 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26114; Tue, 27 Oct 92 17:53:57 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23418; Tue, 27 Oct 92 17:53:56 -0600
Message-Id: <9210272353.AA23418@pixel.convex.com>
To: Larry Masinter <masinter@parc.xerox.com>
Cc: NED@sigurd.innosoft.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch
Subject: Re: misconceptions about MIME [long] 
In-Reply-To: Your message of "Tue, 27 Oct 92 15:43:32 PST."
             <92Oct27.154337pst.101795@poplar.parc.xerox.com> 
Date: Tue, 27 Oct 92 17:53:55 CST
From: Dan Connolly <connolly@pixel.convex.com>


>> What methodology do you propose to prevent this situation?
>
>* If you register a format name, then the name should be linked to a
>  well known, published, dated version of the specification of those
>  formats...

You mean like this? from RFC1341:

            7.4.2     The Application/PostScript subtype

            A  Content-Type  of  "application/postscript"  indicates   a
            PostScript    program.    The   language   is   defined   in
            [POSTSCRIPT].

            7.5  The Image Content-Type

            A Content-Type of "image" indicates that the bodycontains an
            image.   The subtype names the specific image format.  These
            names are case insensitive.  Two initial subtypes are "jpeg"
            for the JPEG format, JFIF encoding, and "gif" for GIF format
            [GIF].

...
            [POSTSCRIPT]  Adobe  Systems,  Inc.,   PostScript   Language
            Reference Manual,  Addison-Wesley, 1985.

            [GIF] Graphics Interchange Format (Version 89a), Compuserve,
            Inc., Columbus, Ohio, 1990.

It's tough to keep folks from sticking postscript level-2 stuff in
under the name of application/postscript, but you can't blame
the MIME standard for being ambiguous in any way.

Dan


From dckavan@srv.pacbell.com  Wed Oct 28 00:50:21 1992
Return-Path: <dckavan@srv.pacbell.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09086; Wed, 28 Oct 92 00:50:21 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00621; Wed, 28 Oct 92 01:02:21 +0100
Received: from srv.PacBell.COM (mother.srv.PacBell.COM) by ns.PacBell.COM (4.1/PacBell-10/01/92)
	id AA25793; Tue, 27 Oct 92 16:01:20 PST
Received: from hillary.srv.PacBell.COM by srv.PacBell.COM (4.1/SMI-4.0)
	id AA10342; Tue, 27 Oct 92 16:01:49 PST
Received: by hillary.srv.PacBell.COM (AIX 3.1/UCB 5.61/4.03)
          id AA05614; Tue, 27 Oct 92 16:01:55 -0800
From: dckavan@srv.pacbell.com (Dennis Kavanaugh)
Message-Id: <9210271601.ZM7404@hillary.srv.PacBell.COM>
Date: Tue, 27 Oct 1992 16:01:50 -0800
In-Reply-To: Larry Masinter <masinter@parc.xerox.com>
        "Re: misconceptions about MIME [long]" (Oct 27,  2:38pm)
References: <92Oct27.143829pst.101795@poplar.parc.xerox.com>
X-Mailer: Z-Mail (2.1.0 10/1/92)
To: Larry Masinter <masinter@parc.xerox.com>, NED@sigurd.innosoft.com
Subject: Re: misconceptions about MIME [long]
Cc: nsb@thumper.bellcore.com, wais-talk@quake.think.com,
        connolly@pixel.convex.com, www-talk@nxoc01.cern.ch

This conversation is just a trifle intimidating, but here goes...

I believe some good points are being made here, but not all which can be
associated with a single 'technology', i.e. MIME or WAIS. I believe this is
the natural product of trying to get 'mail' to be all things to all
applications.

Mail as a transport  for information versus mail as the characteristic of
information is what I believe to be partly to blame. When I receive mail (the
characteristic stuff), I may have little control over the content-type, and
therefore may have to take what I get. On the other hand, when I am using mail
(the transport stuff) to request information, I ought to be able to provide
some insight into what I can handle on the receiving end. It would be nice to
be able to tell the world what I would like (e.g. EPS, MIME or ASCII, please)
before I know whether I will ever get mail from them, but this seems excessive
using current technologies.

So as not to wear out my welcome, let me finish by saying that I believe there
are solutions, but they will not be singular; there will be several pieces
that inter-relate such that, when used together, provide what is needed. It
will be much easier to deal with the issues separately, with an understanding
of the inrer-relationship(s), than try and deal with them as one.

As for 'inflammatory hogwash', isn't that how they get pink pigs?




-- 
Dennis Kavanaugh
Senior Systems Analyst
Corporate Office Systems and PB/1

From ottavj@pegase.inria.fr  Wed Oct 28 08:34:52 1992
Return-Path: <ottavj@pegase.inria.fr>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10938; Wed, 28 Oct 92 08:34:52 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12856; Wed, 28 Oct 92 08:46:48 +0100
Received: by pegase.inria.fr
	(5.65c/IDA-1.2.8) id AA11955; Wed, 28 Oct 1992 08:46:54 +0100
Date: Wed, 28 Oct 1992 08:46:54 +0100
From: Luc Ottavj <Luc.Ottavj@sophia.inria.fr>
Message-Id: <199210280746.AA11955@pegase.inria.fr>
To: NED@sigurd.innosoft.com, masinter@parc.xerox.com
Subject: Re: misconceptions about MIME [long]
Cc: connolly@pixel.convex.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, www-talk@nxoc01.cern.ch

>If I wish to retrieve the document, say to view it, I might want to
>choose the available representation that is most appropriate for my
>purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
>from an anonymous FTP archive, only to discover that it is in the
>newly announced Postscript level 4 format, or to try to edit it only
>to discover that it is in the (upwardly compatible but not parsable by
>my client) version 44 of Rich Text. In each case, the appropriateness
>of alternate sources and representations of a document would depend on
>information that is currently only available in-band.

i think you can avoid this if you make your MIME document descriptor
in the following way.
1- an ascii part containing an abstract for the document and
   describing all the document representations (size, real format...)
2- for each representation an external-body ftp part

then the mime document itself is very short and after you read
the ascii part you can decide to transfer( or not )
only the representation that you want


Luc Ottavj                          | Email : ottavj@pegase.inria.fr  
INRIA U.R. de Sophia Antipolis      | Phone : (33) 93 65 77 21       
 2004, Route des Lucioles BP 93     | Telex :      97 00 50 F        
 06902 Sophia Antipolis CEDEX France| Fax   : (33) 93 65 76 02       


From nsb@thumper.bellcore.com  Wed Oct 28 15:31:16 1992
Return-Path: <nsb@thumper.bellcore.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12242; Wed, 28 Oct 92 15:31:16 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA17813; Wed, 28 Oct 92 15:43:12 +0100
Received: from greenbush.bellcore.com by thumper.bellcore.com (4.1/4.7)
	id <AA10855> for www-talk@nxoc01.cern.ch; Wed, 28 Oct 92 09:42:22 EST
Received: by greenbush.bellcore.com (4.1/4.7)
	id <AA24028> for www-talk@nxoc01.cern.ch; Wed, 28 Oct 92 09:42:21 EST
Received: from Messages.8.5.N.CUILIB.3.45.SNAP.NOT.LINKED.greenbush.galaxy.sun4.41
          via MS.5.6.greenbush.galaxy.sun4_41;
          Wed, 28 Oct 1992 09:42:16 -0500 (EST)
Message-Id: <MeveP8m0M2YtJRnHtQ@thumper.bellcore.com>
Date: Wed, 28 Oct 1992 09:42:16 -0500 (EST)
From: Nathaniel Borenstein <nsb@thumper.bellcore.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
To: NED@sigurd.innosoft.com, masinter@parc.xerox.com,
        Luc Ottavj <Luc.Ottavj@sophia.inria.fr>
Subject: Re: misconceptions about MIME [long]
Cc: connolly@pixel.convex.com, wais-talk@quake.think.com,
        www-talk@nxoc01.cern.ch, Larry Masinter <masinter@parc.xerox.com>
In-Reply-To: <199210280746.AA11955@pegase.inria.fr>
References: <199210280746.AA11955@pegase.inria.fr>

I think there's something that people are missing in this discussion
that is basic to the MIME philosophy, so here comes my two cents:

MIME is a standard with a very different philosophy from many other
standards (ODA, etc.).  It has been said, not entirely incorrectly, that
MIME isn't a format standard at all, but rather a standard for labeling
and safely encoding data whose format is described by other standards. 
(Indeed, I think a major reason that text/richtext is the most
controversial content-type is that it almost is the ONLY MIME type of
which this is not true.)  The basic idea of putting the minimum possible
information in the header field is a natural outgrowth of this
philosophy, hence the argument that if the information is in the body,
it should not be duplicated in the headers.  

Larry Masinter has pointed out -- quite correctly -- that there are
situations in which this is undesirable.  I find his anonymous ftp
example quite compelling:  I would prefer not to ftp a 50 megabyte file
only to find out that it is the wrong kind of postscript.  I don't
think, however, that requiring a "full" description of the detailed
format information is necessarily the right solution, largely because
defining "full" for any given format is so problematic, and runs the
danger of being inconsistent with the internal information.

Another part of the MIME philosophy is openness and extensibility.  This
openness, I believe, points the way to a more appropriate resolution of
the problem.  It is worth noting that the MIME standard does not close
the book on additional parameters in the content-type line.  That is,
MIME says that a PostScript body part should be labelled as

Content-type: application/postscript

It also says, I believe, that unrecognized parameters should be ignored.
 This means that a MIME-conformant implementation will treat the above
content-type and the following one as equivalent:

Content-type: application/postscript; foo=bar; FavoriteCheese=muenster

Not a very useful example, I'll admit.  But this opens the door for
communities to experiment with what additional parameters might be
useful.  If the wais, gopher, or www communities decided to use MIME as
the base data representation standard, they could easily specify a few
additional parameters for situations of concern to those communities. 
Indeed, as has been pointed out, if the transport system is other than
mail, there are likely to be some diffferent concerns.  (Larry's
anonymous ftp problem, for example, is arguably central to wais and
relatively peripheral to email.)   So it might simply prove to be more
important to the wais community to have the Postscript Level labeled in
the header data than it was to the mail community.  No big deal.  The
consensus in the mail community (at least as reflected on the ietf-822
mailing list, which devised MIME) was that such a parameter was not
particularly necessary or desirable for email use.  The WAIS community
might reach a diametrically opposite conclusion, and can accordingly
extend MIME to include a few extra parameters, content-types, etc.  The
most useful of these, I conjecture, will eventually find their way back
into the email world.  This kind of evolution is precisely the reason I
always felt so strongly that MIME needed a path for graceful evolution,
including the IANA process for registering new content-types, character
sets, and parameters.

So the bottom line for me is that Larry's concerns have definite merit,
but I think that they can easily be accomodated as minor extensions to
MIME.  My suggested path for making those extensions is to first try to
reach a consensus on what extensions are needed for the wais/www/gopher
communities, and then register those extensions with IANA.  If any of
them prove to be problematic in the sense that they need to be
universally implemented -- as opposed to only being implemented among
cooperating software -- the documents defining them can be submitted to
the IAB standardization process.  However, I suspect that official
standard status will not be necessary in most cases.

I hope that sheds some light on muddy waters...   -- Nathaniel

From timbl@www3.cern.ch  Wed Oct 28 16:30:50 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12487; Wed, 28 Oct 92 16:30:50 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25533; Wed, 28 Oct 92 16:42:44 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00868; Wed, 28 Oct 92 16:40:32 +0100
Date: Wed, 28 Oct 92 16:40:32 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210281540.AA00868@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: dckavan@srv.pacbell.com (Dennis Kavanaugh)
Subject: Re: misconceptions about MIME [long]
Cc: Larry Masinter <masinter@parc.xerox.com>, NED@sigurd.innosoft.com,
        nsb@thumper.bellcore.com, wais-talk@quake.think.com,
        connolly@pixel.convex.com, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



It seems that while Larry makes the point that level 2 postscript
(etc etc etc) should not be confused with MIME's "postscript", he
has not (recently? yet? at all?) objected to the basic MIME labelling method,
simply to an oversimplification of the format designations. These will
have to be exanded with time, anyway.

Would it be reasonable of us to take Dan's cue and change HTTP2 so that
the returned message is a MIME format?  Would MIME in return (a) add
text/SGML/HTML as a MIME format  (who registers DTD names?) and also
use an IETF standard URL a the external reference format?

	Tim



__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155




From nsb@thumper.bellcore.com  Wed Oct 28 16:46:29 1992
Return-Path: <nsb@thumper.bellcore.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12688; Wed, 28 Oct 92 16:46:29 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA27735; Wed, 28 Oct 92 16:58:08 +0100
Received: from greenbush.bellcore.com by thumper.bellcore.com (4.1/4.7)
	id <AA21897> for timbl@nxoc01.cern.ch; Wed, 28 Oct 92 10:57:25 EST
Received: by greenbush.bellcore.com (4.1/4.7)
	id <AA24188> for www-talk@nxoc01.cern.ch; Wed, 28 Oct 92 10:57:24 EST
Received: from Messages.8.5.N.CUILIB.3.45.SNAP.NOT.LINKED.greenbush.galaxy.sun4.41
          via MS.5.6.greenbush.galaxy.sun4_41;
          Wed, 28 Oct 1992 10:57:20 -0500 (EST)
Message-Id: <UevfVUK0M2YtBRnQ1m@thumper.bellcore.com>
Date: Wed, 28 Oct 1992 10:57:20 -0500 (EST)
From: Nathaniel Borenstein <nsb@thumper.bellcore.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
To: dckavan@srv.pacbell.com (Dennis Kavanaugh), timbl@nxoc01.cern.ch
Subject: Re: misconceptions about MIME [long]
Cc: Larry Masinter <masinter@parc.xerox.com>, NED@sigurd.innosoft.com,
        wais-talk@quake.think.com, connolly@pixel.convex.com,
        www-talk@nxoc01.cern.ch
In-Reply-To: <9210281540.AA00868@www3.cern.ch>
References: <9210281540.AA00868@www3.cern.ch>

Excerpts from mail: 28-Oct-92 Re: misconceptions about MI.. Tim
Berners-Lee@www3.cer (894)

> Would MIME in return (a) add
> text/SGML/HTML as a MIME format  (who registers DTD names?) and also
> use an IETF standard URL a the external reference format?

I'm not an expert on any of these formats, but would point out that
syntactically MIME content-types are only a two level hierarchy, but you
could name it something like "text/sgml-html".  Also, if the format
isn't really human-readable, you probably don't want to put it under
"text", but are better off with "application/sgml-html" or something
like that.

Registration is with IANA, the Internet Assigned Numbers (Names?)
Authority.  -- Nathaniel

From connolly@pixel.convex.com  Wed Oct 28 17:46:30 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13165; Wed, 28 Oct 92 17:46:30 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03611; Wed, 28 Oct 92 17:58:29 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA05996; Wed, 28 Oct 92 10:57:42 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA06593; Wed, 28 Oct 92 10:57:39 -0600
Message-Id: <9210281657.AA06593@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: misconceptions about MIME [long] 
In-Reply-To: Your message of "Wed, 28 Oct 92 16:40:32 +0100."
             <9210281540.AA00868@www3.cern.ch> 
Date: Wed, 28 Oct 92 10:57:38 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Would it be reasonable of us to take Dan's cue and change HTTP2 so that
>the returned message is a MIME format?

You mean use MIME content types for HTTP2 format negociation: exactly!

>  Would MIME in return (a) add
>text/SGML/HTML as a MIME format 

Just write a spec for it and register it with the IANA.

> (who registers DTD names?

The ISO grants public text identifiers for DTDs.

> and also
>use an IETF standard URL a the external reference format?

I'm not sure I understand this part. Sure you can have a format
called text/html, and sure you can put URLs in it, but that
doesn't mean URLs have to become part of the MIME standard.

Dan


From timbl@www3.cern.ch  Thu Oct 29 16:29:59 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19500; Thu, 29 Oct 92 16:29:59 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00414; Thu, 29 Oct 92 16:41:15 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA06151; Thu, 29 Oct 92 16:38:18 +0100
Date: Thu, 29 Oct 92 16:38:18 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210291538.AA06151@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: misconceptions about MIME [long] 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>Would it be reasonable of us to take Dan's cue and change HTTP2 so that
>  >the returned message is a MIME format?
>  

>  You mean use MIME content types for HTTP2 format negociation: exactly!


	Sounds reasonable to me in the interest of reasonableness.

>  > and also
>  >use an IETF standard URL a the external reference format?
>  

>  I'm not sure I understand this part. Sure you can have a format
>  called text/html, and sure you can put URLs in it, but that
>  doesn't mean URLs have to become part of the MIME standard.
>  


I mean that there is a clash between the URL/URI work and the MIME
external context format.  For example there are two ways of writing
a reference to an FTP archive. It would be neat to amalgamate them.
I  personally think the MIME format is too longwinded (look at the
ref on the end of your earlier message -- that could have been 1 line).

Of couse a generic URL could be made another specific MIME external
reference format, as FTP is now, which would provide a transistion.

---- by the way...

Data formats:
It is true that a generic system ought to be able to represent the
complexities of reality. But it is also true that if one makes
arbitrary choices and only accomodates those, then reality may in the
end toe the line.  MIME registration will give a lot of weight to
a particular set of paramaters for a data format, and so the
use of arbitrary deviants from the registered formats would tend to
die out.

To a certain extent only, of course. There will always be people
who use weird formats, but then noone will be able to
hear anything of them anyway... ;-)

	Tim



From connolly@pixel.convex.com  Thu Oct 29 17:52:05 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20051; Thu, 29 Oct 92 17:52:05 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09262; Thu, 29 Oct 92 18:03:29 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA27583; Thu, 29 Oct 92 11:02:35 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA16901; Thu, 29 Oct 92 11:02:32 -0600
Message-Id: <9210291702.AA16901@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: misconceptions about MIME [long] 
In-Reply-To: Your message of "Thu, 29 Oct 92 16:38:18 +0100."
             <9210291538.AA06151@www3.cern.ch> 
Date: Thu, 29 Oct 92 11:02:32 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I mean that there is a clash between the URL/URI work and the MIME
>external context format.  For example there are two ways of writing
>a reference to an FTP archive. It would be neat to amalgamate them.
>I  personally think the MIME format is too longwinded (look at the
>ref on the end of your earlier message -- that could have been 1 line).

I don't see that there's a clash. There's a certain redundancy, but
that's nothing new.

If you're using MIME encapsulation techniques to attach an ftp file
to a body part, you use the message/external-body mechanism. But
if you're writing HTML, you put a URL in an anchor.

It might be nice if WWW clients could parse MIME multipart and
message types, but it seems reasonable to just pass them on to
metamail or some such MIME user agent.

On the other hand, a MIME user agent need not grok HTML -- it just
passes it along to the WWW client.

Am I missing something?

Dan


From timbl@www3.cern.ch  Thu Oct 29 18:05:11 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20132; Thu, 29 Oct 92 18:05:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10518; Thu, 29 Oct 92 18:17:13 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA06330; Thu, 29 Oct 92 18:15:07 +0100
Date: Thu, 29 Oct 92 18:15:07 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210291715.AA06330@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Presidential Campain information
Cc: "Phillip M. Hallam-Baker" <HALLAM@zws007.desy.de>
Reply-To: timbl@nxoc01.cern.ch

> From: "Phillip M. Hallam-Baker" <HALLAM@zws007.desy.de>

>	I have just got a note from the Clinton/Gore campaign asking
> me to produce a W3 server for them. I have put it up here for the time
> being and while I was at it pulled together a whole bunch of
> stuff from Perot, opinion polls etc. Nothing from the Bush campaign yet
> but will try. After the election will do a british politics 

> page as well but at the mo will cater to the major interest.

These as well as indexes of speeches by Clinton and Bush are now
linked from

  http://info.cern.ch/hypertext/Products/WAIS/Sources/Political.html

which is a link from the subject page.  I only pass this around while
it is timely.  I don't make any comment on the context!

	Tim BL

From timbl@www3.cern.ch  Thu Oct 29 18:09:08 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20168; Thu, 29 Oct 92 18:09:08 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11063; Thu, 29 Oct 92 18:20:44 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA06343; Thu, 29 Oct 92 18:18:25 +0100
Date: Thu, 29 Oct 92 18:18:25 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210291718.AA06343@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: misconceptions about MIME [long] 
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Date: Thu, 29 Oct 92 11:02:32 CST
> From: Dan Connolly <connolly@pixel.convex.com>
...
> There's a certain redundancy, but that's nothing new.
...
> Am I missing something?

	Alas, no!

Tim

From NED@sigurd.innosoft.com  Thu Oct 29 18:43:29 1992
Return-Path: <NED@sigurd.innosoft.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20444; Thu, 29 Oct 92 18:43:29 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14159; Thu, 29 Oct 92 18:55:30 +0100
Received: from SIGURD.INNOSOFT.COM by SIGURD.INNOSOFT.COM (PMDF #1339 ) id
 <01GQIM2YW0LC91VWYH@SIGURD.INNOSOFT.COM>; Thu, 29 Oct 1992 09:53:10 PDT
Date: 29 Oct 1992 09:53:10 -0700 (PDT)
From: Ned Freed <NED@sigurd.innosoft.com>
Subject: Re: misconceptions about MIME [long]
To: masinter@parc.xerox.com
Cc: nsb@thumper.bellcore.com, wais-talk@quake.think.com,
        connolly@pixel.convex.com, www-talk@nxoc01.cern.ch,
        ned@sigurd.innosoft.com
Message-Id: <01GQIM2YWA8I91VWYH@SIGURD.INNOSOFT.COM>
X-Vms-To: IN%"masinter@parc.xerox.com"
X-Vms-Cc: 
 IN%"nsb@thumper.bellcore.com, wais-talk@quake.think.com,connolly@pixel.convex.com,
 www-talk@nxoc01.cern.ch, ned@sigurd.innosoft.com"
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-Transfer-Encoding: 7BIT

> The arguments that in-band designation of document format is better
> than out-of-band information may apply in the electronic mail
> scenarios, where there is a single sender, multiple recipients, and
> the recipient has no control over what the sender might send.

The argument is identical for most file servers, which have even less control
over the specifics of what files they offer for retrieval. File servers usually
rely on contributed material and only rarely have anything resembling precise
control over the material they offer.

> Instead, imagine, if you would, another scenario, of a WAIS or Web or
> anonymous FTP archive, which wishes to make available the latest
> version of the MIME specification. Let us suppose, in addition, that
> the publishing service has three different representations of the
> document, one marked "MIME rich-text", one marked "postscript", and
> one NetFax.  Furthermore, let us suppose (as has been proposed) that
> the document types are marked by their MIME Content-type header
> designation.

Nothing wrong with this.

> If I wish to retrieve the document, say to view it, I might want to
> choose the available representation that is most appropriate for my
> purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
> from an anonymous FTP archive, only to discover that it is in the
> newly announced Postscript level 4 format, or to try to edit it only
> to discover that it is in the (upwardly compatible but not parsable by
> my client) version 44 of Rich Text. In each case, the appropriateness
> of alternate sources and representations of a document would depend on
> information that is currently only available in-band.

Even if this happens (I have strong doubts that it will since documents made
available for public retrieval tend to converge rapidly to lowest-common
denominator usage) you have failed to propose an alternative that solves this
usefully.

> I believe that MIME was developed in the context of electronic mail,
> but that the usage patterns in space and time of archives, database
> services and the like require more careful attention (a) to
> out-of-band information about format versions, so that you might know,
> before you retrieve a representation, whether you have the capability
> of coping with it, and (b) some restriction on those formats which
> might otherwise be uncontrollable.

And I disagree. You still have failed to explain how to overcome any of my
objections to this approach.

> Finally, as much as I've tried to resist, I'll characterize your
> description of my response as 'repeated failure on your part to read
> the words I was writing' as 'inflammatory hogwash'.

Well, you're doing it again. You have failed to explain you intend to overcome
any of the obstacles I've pointed out, precisely as if you have not bothered to
read any of my previous response. Since one of them is the halting problem in
disguise your method of overcoming it (assuming you have one) will be the
computing news of the century.

I have no intention of answering any further mail from you until you come
to grips with the objections I have laid out for about the tenth time.

Finally, let me point out that I speak as one of the maintainers of one of the
largest archive of TeX material available anywhere. This material has been
available via MIME-compliant mail server (and of course FTP) for over six
months now. This archive contains hundreds of PostScript documents as well
as all sorts of other stuff. The problems you seem to think are endemic to
this sort of services have yet to materialize.

				Ned

From davis@dri.cornell.edu  Thu Oct 29 19:57:52 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20826; Thu, 29 Oct 92 19:57:52 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19462; Thu, 29 Oct 92 20:09:57 +0100
Received: by willow.tc.cornell.edu id AA17963
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Thu, 29 Oct 1992 14:09:05 -0500
Date: Thu, 29 Oct 1992 14:09:05 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199210291909.AA17963@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch, wais-talk@quake.think.com,
        nsb@thumper.bellcore.com
Subject: In-band v.s outband labeling. (was: Misconceptions about MIME [long])


I wish that people would take a less inflammatory tone in
the mail, and try to assume that even if some parties may
be wrong, they are at least possessing good will and a desire
to find solutions that work for all users.

Larry says he has a problem.  As I understand it, his problem 
is that moving data is expensive, so he wants to have more information
available at the client  before retrieving the data.  Why would anyone
object to this?

Does it help to consider that someday, maybe soon, much network data will
be sold for a fee.  Would you object to customers wanting information
about data before paying the price?

If we agree this is a real problem, then we face the problem
of finding a solution that is practical, efficient, compatible,
and so on.

Now, as N Freed points out, no method exists to automatically
compute in the general case the resource requirements of  e.g. PostScript,
that has little bearing.  For one thing, there are many data types
which are not turing complete programs (e.g. GIF files).  For another,
the person who produced the PostScript in the first place probably
knows the measurements.  After all, if I created a .PS file and put
it on the net, I probably displayed it at least once, so I know well
enough that it does halt.  (unless I am malicious.)  And finally,
even if the creator does not tell you, you can still compute it, once,
and then store the results in the file archive, or Wed, or whatever.
 
The fact that a full, general and automatic solution is impossible
does it lessen the value of partial solutions.

So the proposed solution is to have more explicit labeling.  What's
wrong with that?  If you dont use it, it costs nothing.
If you do use it, it makes life easier for people.
 
You can argue that many people are too lazy to provide this information,
and I agree  But  not everyone is lazy.  there will also be people motivated
to expend the trouble to label the data, yes, even to go to the
extent of computing how much main memory you will need to uncompress
and so on.  Why will they be motivated?  Because those  who do will have larger audiences, and that is already a motivation.  And when money starts to
enter the picture, the motivation for market share will be stronger.

There will be a consumer's union and an underwriters laboratory for
information space.  The question is where to put the information, 
the "meta data" if you will.

Best wishes

From emv@garnet.msen.com  Fri Oct 30 06:20:03 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23573; Fri, 30 Oct 92 06:20:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22271; Fri, 30 Oct 92 06:32:08 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mkowZ-00008WC@garnet.msen.com>; Fri, 30 Oct 92 00:30 WET
Message-Id: <m0mkowZ-00008WC@garnet.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: port to bsdi / TOUPPER problem
Date: Fri, 30 Oct 92 00:30:33 EST
From: Edward Vielmetti <emv@msen.com>

Hi.  I am porting WWW to BSDI.  So far mostly so good, here are some
notes.

There are some stray dependencies in the Line Mode makefiles that point
hard coded paths at /tmp for making stuff.  /tmp here is tiny, so I
put the stuff in $(HOME)/tmp, but that didn't quite do the job.

It took some amount of fiddling to get everything to build in the
right place, I hacked at it until it all compiled ok but will have
to go back and see what exactly it was that I did...

HTFile.c didn't compile until I commented out one of the two times 
that "tcp.h" was included - the compiler complained about a duplicate
definition of "struct stat".

After all that it compiles fine and seems to work, and 'www -source'
prints out what looks like real genuine HTML sources.  However, it
appears that there's some critical place where TOUPPER is not working
right, since the lower-case <a href=foo:bar>foobar</a> tags don't
get recognized, and the upper-case <TITLE>foobar</TITLE> tags do.  
This kind of ruins the hypertext effect :)

thanks,

--Ed

From emv@garnet.msen.com  Fri Oct 30 07:02:36 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23636; Fri, 30 Oct 92 07:02:36 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24456; Fri, 30 Oct 92 07:14:39 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mkpcL-00008XC@garnet.msen.com>; Fri, 30 Oct 92 01:13 WET
Message-Id: <m0mkpcL-00008XC@garnet.msen.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: port to bsdi / TOUPPER problem 
In-Reply-To: Your message of Fri, 30 Oct 92 00:30:33.
             <m0mkowZ-00008WC@garnet.msen.com> 
Date: Fri, 30 Oct 92 01:13:42 EST
From: Edward Vielmetti <emv@msen.com>

problem fixed, let me tell you how i did it for a suggested change 
to the library arrangement.

1st, i moved the TOUPPER / TOLOWER code out of tcp.h into HTUtils.h.

2nd, I took out the ifdefs and made it always check whether something
is lowercase before uppercasing it and vice versa.

this seems to have fixed the immediate problems, and should be more
portable to boot.

i think there's a declaration in SGML.c that could be removed too.

--Ed

From timbl@www3.cern.ch  Fri Oct 30 11:51:33 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24395; Fri, 30 Oct 92 11:51:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22086; Fri, 30 Oct 92 12:03:35 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA06754; Fri, 30 Oct 92 12:01:16 +0100
Date: Fri, 30 Oct 92 12:01:16 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210301101.AA06754@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@msen.com>
Subject: port to bsdi / TOUPPER problem
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  Hi.  I am porting WWW to BSDI.  So far mostly so good, here are some
>  notes.

Duuhh. What's BSDI?  {:-O

>  There are some stray dependencies in the Line Mode makefiles that point
>  hard coded paths at /tmp for making stuff.  /tmp here is tiny, so I
>  put the stuff in $(HOME)/tmp, but that didn't quite do the job.

It is a question of changing the ONJ macro to point to somewhere where
there is space. It used to be the source directory, but some people
want to build separately from a read-only source mount. So we put the OBJ
macros in.

>  It took some amount of fiddling to get everything to build in the
>  right place, I hacked at it until it all compiled ok but will have
>  to go back and see what exactly it was that I did...

If you could mail me back the diffs I'll try to get them into
the next version.

>  HTFile.c didn't compile until I commented out one of the two times 

>  that "tcp.h" was included - the compiler complained about a duplicate
>  definition of "struct stat".

Ooops.. sorry, fixed.  I think you mean that <stat.h> was included
explicitly once and once implcitly via  "tcp.h".
  

>  After all that it compiles fine and seems to work, and 'www -source'
>  prints out what looks like real genuine HTML sources.  However, it
>  appears that there's some critical place where TOUPPER is not working
>  right, since the lower-case <a href=foo:bar>foobar</a> tags don't
>  get recognized, and the upper-case <TITLE>foobar</TITLE> tags do.  

>  This kind of ruins the hypertext effect :)

That is official BSD for you: toupper() doesn't work unless the isalpha()
is true. You need to turn on the macros at the bottom of tcp.h
for your platform.  What is the system-specific predefined cpp macro
which we can #ifdef on? So far we have:

	#if defined(pyr) || defined(mips)
	  /* Pyramid and Mips can't uppercase non-alpha */
	#define TOLOWER(c) (isupper(c) ? tolower(c) : (c))
	#define TOUPPER(c) (islower(c) ? toupper(c) : (c))
	#else
	#define TOLOWER(c) tolower(c)
	#define TOUPPER(c) toupper(c)
	#endif /* pyr || mips */


Thanks for the comments....

	Tim

From timbl@www3.cern.ch  Fri Oct 30 12:26:56 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24481; Fri, 30 Oct 92 12:26:56 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26866; Fri, 30 Oct 92 12:38:58 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA06790; Fri, 30 Oct 92 12:36:48 +0100
Date: Fri, 30 Oct 92 12:36:48 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210301136.AA06790@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: port to bsdi / TOUPPER problem 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  problem fixed, let me tell you how i did it for a suggested change 

>  to the library arrangement.
>  

>  1st, i moved the TOUPPER / TOLOWER code out of tcp.h into HTUtils.h.
>  

>  2nd, I took out the ifdefs and made it always check whether something
>  is lowercase before uppercasing it and vice versa.
>  

>  this seems to have fixed the immediate problems, and should be more
>  portable to boot.
>  

>  i think there's a declaration in SGML.c that could be removed too.
>  


All done ... I'll test it with the next release.  Thanks!

	Tim BL
  


From timbl@www3.cern.ch  Fri Oct 30 17:48:25 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA26075; Fri, 30 Oct 92 17:48:25 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04780; Fri, 30 Oct 92 18:00:26 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA07021; Fri, 30 Oct 92 17:58:08 +0100
Date: Fri, 30 Oct 92 17:58:08 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9210301658.AA07021@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: nir@cc.mcgill.ca, wg-isus@rare.nl, uri@bunyip.com, www-talk@nxoc01.cern.ch
Subject: URLs - new document;      URL mail server
Reply-To: timbl@nxoc01.cern.ch


A new URL definition document is available at locations

	ftp://info.cern.ch/pub/ietf/url3.txt
	ftp://info.cern.ch/pub/ietf/url3.ps

The document has a few changes which were mentioned at the Boston
BOF -- please send anything I've forgotten to me ASAP for inclusion
befoer the Washington.

(Note old WWW clients require "file:" prefix instead of "ftp:" prefix
for FTP archive documents, but latest library allows either during transition  
period).
			----------

Documents may be retrieved by URL: by sending mail to 

listserv@info.cern.ch with a line containing the command SEND
followed by the URL of the document. If the document is in hypertext, the URLs  
of linked documents are listed on the end of the reply. If in doubt send  
message HELP to same address.

The software for the mail robot is available in ftp://info.cern.ch/pub/www/src

I won't be in DC but will expect a talk session to be set up with the  
meeting...   :-)


	Tim Berners-Lee

From masinter@parc.xerox.com  Sat Oct 31 00:44:11 1992
Return-Path: <masinter@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28270; Sat, 31 Oct 92 00:44:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14947; Sat, 31 Oct 92 00:56:18 +0100
Received: from poplar.parc.xerox.com ([13.2.16.165]) by alpha.xerox.com with SMTP id <11807>; Fri, 30 Oct 1992 15:55:23 PST
Received: by poplar.parc.xerox.com id <101795>; Fri, 30 Oct 1992 15:55:08 -0800
To: NED@sigurd.innosoft.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, connolly@pixel.convex.com,
        www-talk@nxoc01.cern.ch, ned@sigurd.innosoft.com
In-Reply-To: Ned Freed's message of Thu, 29 Oct 1992 08:53:10 -0800 <01GQIM2YWA8I91VWYH@SIGURD.INNOSOFT.COM>
Subject: Re: misconceptions about MIME [long]
From: Larry Masinter <masinter@parc.xerox.com>
Sender: Larry Masinter <masinter@parc.xerox.com>
Fake-Sender: masinter@parc.xerox.com
Message-Id: <92Oct30.155508pst.101795@poplar.parc.xerox.com>
Date: 	Fri, 30 Oct 1992 15:54:56 PST

>> The arguments that in-band designation of document format is better
>> than out-of-band information may apply in the electronic mail
>> scenarios, where there is a single sender, multiple recipients, and
>> the recipient has no control over what the sender might send.

>The argument is identical for most file servers, which have even less control
>over the specifics of what files they offer for retrieval. File servers usually
>rely on contributed material and only rarely have anything resembling precise
>control over the material they offer.

But we are not discussing 'file servers' in general, but something
more specific and presumably over which we have more control: use of
MIME content identifiers to identify content-type in World-Wide-Web
and WAIS servers. Even in the case of file servers, while you might
not have control over the material offered, you do have control over
the description of that material as to which version of a purported
standard format the material might be in, and even, in some cases,
which profile of that standard might apply.

>> If I wish to retrieve the document, say to view it, I might want to
>> choose the available representation that is most appropriate for my
>> purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
>> from an anonymous FTP archive, only to discover that it is in the
>> newly announced Postscript level 4 format, or to try to edit it only
>> to discover that it is in the (upwardly compatible but not parsable by
>> my client) version 44 of Rich Text. In each case, the appropriateness
>> of alternate sources and representations of a document would depend on
>> information that is currently only available in-band.

>Even if this happens (I have strong doubts that it will since documents made
>available for public retrieval tend to converge rapidly to lowest-common
>denominator usage) you have failed to propose an alternative that solves this
>usefully.

Documents made available for public retrieval do not cannot 'tend to
converge rapidly to lowest-common denominator usage', because *old
documents do not go away*! If there is diversity today in the
available formats for RFCs, tech reports and PhD theses, that
diversity can only get worse! It is foolish to think that the
diversity will diminish any time in the near future; certainly the
number of 'conference proceedings on CD-rom' is increasing, as people
want to share Mathematica documents, various forms of hypertext, audio
content and the like.

As for a proposal that 'solves this usefully', I have a fairly mild
proposal that, while it does not solve all of the problems in
interoperability, does reduce the amount of uncertainty:

I propose (once again) that instead of saying 'application/postscript'
it say, at a minimum, 'application/postscript 1985' vs
'application/postscript 1994' or whatever you would like to designate
as a way to uniquely identify which edition of the Postscript
reference manual you are talking about; instead of being identified as
'image/tiff' the files be identified as 'image/tiff 5.0 Class F' vs
'image/tiff 7.0 class QXB'.

> Finally, let me point out that I speak as one of the maintainers of one of the
> largest archive of TeX material available anywhere. This material has been
> available via MIME-compliant mail server (and of course FTP) for over six
> months now. This archive contains hundreds of PostScript documents as well
> as all sorts of other stuff. The problems you seem to think are endemic to
> this sort of services have yet to materialize.

I think you need to take a longer-term and broader perspective than a
six-month experience with a single representation of document.


We've been developing a document archive service that can cope with 20
years of collected electronic documents. We have not only Postscript 1
and 2, but also several versions of Interpress, and Press format, two
versions of DVI, revisable formats of 20 years of editor development
-- several versions of tex, latex, framemaker, microsoft word, tioga,
globalview, viewpoint, bravo, bravox, tedit, troff, interleaf,
wordperfect, etc, and images in multiple variations of RES, AIS, TIFF,
sun raster, pcx, macpaint, ad nauseum.

In trying to deal with a documents over the longer term, it has become
apparent that merely marking documents with a simple 'format' tag like
'interpress' or 'postscript' or 'tiff' isn't adequate for most
purposes. Standards evolve over as short as a 5 year period; even the
method of internal tagging standard versions changes, and certainly,
it is impossible to rely on in-band version information for all
formats. 

I have more to say about the problem of 'external references' but I'll
save that for another message.

It would be nice to have a calm discussion about possible solutions to
these problems & hope you will forgo future sarcasm.

Thanks,

Larry

From emv@garnet.msen.com  Sun Nov  1 03:23:23 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01639; Sun, 1 Nov 92 03:23:23 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10179; Sun, 1 Nov 92 03:35:31 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mlV92-00008eC@garnet.msen.com>; Sat, 31 Oct 92 21:34 WET
Message-Id: <m0mlV92-00008eC@garnet.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: saving documents, losing links
Date: Sat, 31 Oct 92 21:34:14 EST
From: Edward Vielmetti <emv@msen.com>

it should, at least i think it should, be possible once you have come
across a piece of the web that you're interested in to save it off
to the side (in source form) so that you can look at it again or
add it to your own hoard of stuff.

i went to the 'jargon' section of the web, as served by
iicm.tu-graz.ac.at, to look something up.  (I wanted to see whether
the hacker's dictionary had a definition for 'firmware', since
there's a harangue going on about it in comp.infosystems.  i located
a nice entry on '-ware' which looked pretty interesting and went
to save that to a file (using the command 'source >
$HOME/archives/ware.html' from the line mode browser).

to my slight surprise and dismay, when I went to visit the document
again (using the command 'www ~/archives/ware.html') all of the cross
reference links were just gone.  looking around a little bit I think
that a simple sed command like
	sed -e 's/HREF=A/HREF=http://iicm.tu-graz.ac.at:80\/A/g'
or thereabouts would put things right.

should making a copy of a piece of the web simply be a verbatim
copy of the source, or should it try to make relative links absolute?

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB

From emv@garnet.msen.com  Sun Nov  1 03:51:38 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01692; Sun, 1 Nov 92 03:51:38 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11429; Sun, 1 Nov 92 04:03:48 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mlVaj-00008bC@garnet.msen.com>; Sat, 31 Oct 92 22:02 WET
Message-Id: <m0mlVaj-00008bC@garnet.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: question and answer, style guide?
Date: Sat, 31 Oct 92 22:02:51 EST
From: Edward Vielmetti <emv@msen.com>

Can someone suggest a good style for a 'frequently asked questions,
with answers' document?  I'm using 
	<ul>
	<li>
	<li>
	...
	</ul>
but it's not clear that just putting paragraph marks in is going to do
the trick.

I think I'd like to distinguish the questions from the answers by
indenting, at least in the 24x80 dumb terminal that I'm working with,
but I also want to make sure that things look ok under X.

thanks,

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From joe@athena.mit.edu  Sun Nov  1 05:41:40 1992
Return-Path: <joe@athena.mit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01973; Sun, 1 Nov 92 05:41:40 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19781; Sun, 1 Nov 92 05:53:50 +0100
Received: from MAJOR.MIT.EDU by Athena.MIT.EDU with SMTP
	id AA07360; Sat, 31 Oct 92 18:09:51 EST
Received: by major (5.57/4.7) id AA19876; Sat, 31 Oct 92 18:09:45 -0500
Message-Id: <9210312309.AA19876@major>
To: www-talk@nxoc01.cern.ch
Cc: mory@athena.mit.edu, vonneidt@athena.mit.edu
Subject: Usenet University - New Network Academy (Help needed)
Date: Sat, 31 Oct 92 18:09:43 EST
From: Joseph Wang <joe@athena.mit.edu>

Hello.  I've involved in starting the Usenet University - New Network
Academy initiative.  The purpose of this initiative is to develop a
electronic "University" over internet.  The first phase of this
consists of two parts:

1. Developing a community of consultants who are willing to answer questions
   over Email, and

2. Developing a central repository of freely redistributable hypertext
   information

I'd like to use WWW as a basis for this hypertext library.  My problem
is finding a machine to run a WWW server on.  I was wondering if
anyone in netland who is already running a WWW server, can lend me an
account and some disk space to start this hypertext library.


From timbl@www3.cern.ch  Sun Nov  1 16:56:50 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02791; Sun, 1 Nov 92 16:56:50 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13733; Sun, 1 Nov 92 17:08:55 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00294; Sun, 1 Nov 92 17:06:08 +0100
Date: Sun, 1 Nov 92 17:06:08 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211011606.AA00294@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: question and answer, style guide?
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Can someone suggest a good style for a 'frequently asked questions,
> with answers' document?  


The W3 FAQ have a <UL>...</UL> list of questions which are linked to
a page each of which has a H1 summary heading,
and an H@ "Question" thena a few paragraphs of question and an H2
with a heading appropriate for the answer and n paragraphs of
answer.

If you want to put all the FAQ on one document (will this scale?)
then I would suggest making the questions H2 level headings, and
the text ordinary text. H2 headings are normally bold and bug and  
left-justified on X dipslays.

The advantage with using headings for the questions instead of
DT glossary parts is that that you are free to use glossaries,lists and
examples within the answer.

> I think I'd like to distinguish the questions from the answers by
> indenting, at least in the 24x80 dumb terminal that I'm working with,
> but I also want to make sure that things look ok under X.

Sounds like somone ought to be buying you a workstation for Christmas :-)
But I realize that users tend not to use/have X, even now.

	Tim BL

From raisch@cthulhu.control.com  Mon Nov  2 17:16:41 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06933; Mon, 2 Nov 92 17:16:41 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20261; Mon, 2 Nov 92 17:28:50 +0100
Received: by control.com (4.1/Spike-2.0)
	id AA21422; Mon, 2 Nov 92 11:26:43 EST
Date: Mon, 2 Nov 1992 11:15:18 -0500 (EST)
From: Robert Raisch <raisch@cthulhu.control.com>
Subject: Re: question and answer, style guide?
To: www-talk@nxoc01.cern.ch
In-Reply-To: <9211011606.AA00294@www3.cern.ch>
Message-Id: <Pine.3.03.9211021115.E272-b100000@cthulhu.control.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Sun, 1 Nov 1992, Tim Berners-Lee wrote:

> Sounds like somone ought to be buying you a workstation for Christmas :-)
> But I realize that users tend not to use/have X, even now.
> 

Even now?  Tim, this has been a sore spot with me for quite some years
now, so you'll have to excuse this mild flame.

The assumption that many of the interesting technologies on the Internet
make is that *everyone* has a mega-pel, multi-mip workstation on their
desk.  This is simply not the case.  The vast majority of users on the
Internet have dialin or tty based accounts, and I do not see this trend
changing in the forseeable future.  Any tool which assumes *anything*
about the hardware resources of the user is (IMHO) a bad thing. 

Don't get me wrong, WWW is a marvelous tool, and with the various X-based
client implementations, it is a truely useful and intuitive approach to
the presentation of information.  But I would suggest that X-based
solutions are as useful as a Lamborgini Countach for everyday city driving.

*PLEASE* continue to develop WWW with a keen awareness of the requirements
of the Everyman(person)!

	</rr>
--
Everything is deeply intertwingled.  -Nelson



From NED@sigurd.innosoft.com  Mon Nov  2 21:27:43 1992
Return-Path: <NED@sigurd.innosoft.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08449; Mon, 2 Nov 92 21:27:43 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05198; Mon, 2 Nov 92 21:39:38 +0100
Received: from SIGURD.INNOSOFT.COM by SIGURD.INNOSOFT.COM (PMDF #1339 ) id
 <01GQOCYWZG4W91W1GH@SIGURD.INNOSOFT.COM>; Mon, 2 Nov 1992 12:37:31 PDT
Date: 02 Nov 1992 12:37:29 -0700 (PDT)
From: Ned Freed <NED@sigurd.innosoft.com>
Subject: Re: misconceptions about MIME [long]
To: masinter@parc.xerox.com
Cc: NED@sigurd.innosoft.com, nsb@thumper.bellcore.com,
        wais-talk@quake.think.com, connolly@pixel.convex.com,
        www-talk@nxoc01.cern.ch
Message-Id: <01GQOCYX092Q91W1GH@SIGURD.INNOSOFT.COM>
X-Vms-To: IN%"masinter@parc.xerox.com"
X-Vms-Cc: 
 IN%"NED@SIGURD.INNOSOFT.COM, nsb@thumper.bellcore.com,wais-talk@quake.think.com,
 connolly@pixel.convex.com, www-talk@nxoc01.cern.ch"
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII
Content-Transfer-Encoding: 7BIT

> But we are not discussing 'file servers' in general, but something
> more specific and presumably over which we have more control: use of
> MIME content identifiers to identify content-type in World-Wide-Web
> and WAIS servers. Even in the case of file servers, while you might
> not have control over the material offered, you do have control over
> the description of that material as to which version of a purported
> standard format the material might be in, and even, in some cases,
> which profile of that standard might apply.

I remain extremely skeptical that you can exercise this level of control. I
suspect that if you achieve any control whatsoever it will probably be arranged
along axes that you haven't yet considered. (The most obvious one would be
knowing package that produced the document as well as the version of its
PostScript driver.) I think that if you try to arrange a particular sort of
labelling now you will only find that things don't match up to it.

If in fact you do end up with some degree of control over version-specific
usage it will _then_ be the time to add some additional parameters containing
this information.

>> If I wish to retrieve the document, say to view it, I might want to
>> choose the available representation that is most appropriate for my
>> purpose. Imagine my dismay to retrieve a 50 megabyte postscript file
>> from an anonymous FTP archive, only to discover that it is in the
>> newly announced Postscript level 4 format, or to try to edit it only
>> to discover that it is in the (upwardly compatible but not parsable by
>> my client) version 44 of Rich Text. In each case, the appropriateness
>> of alternate sources and representations of a document would depend on
>> information that is currently only available in-band.

>Even if this happens (I have strong doubts that it will since documents made
>available for public retrieval tend to converge rapidly to lowest-common
>denominator usage) you have failed to propose an alternative that solves this
>usefully.

> Documents made available for public retrieval do not cannot 'tend to
> converge rapidly to lowest-common denominator usage', because *old
> documents do not go away*!

Nonsense. Documents (old or new) get revised when they fail to meet the needs
of lowest-common denominator usage. Let's suppose I put up a document that uses
a bunch of level 2 PostScript extensions. Let's further suppose that I emblazon
it with dozens of labels indicating that this is the case. But all the
labelling in the world will not make this document print on an old LaserWriter.

Regardless of labelling people will want to print the document. Maybe they will
retrieve it and maybe they will not. I seriously doubt that most people will
know what all this version stuff means (try asking the average user of a laser
printer what version of PostScript is supports), so in most cases the labelling
will be wasted effort. But regardless of whether they retrieve the document and
it fails to print or they heed the labels, people will then complain.

As the author of the document I will be "encouraged" to provide a version that
will work properly on the huge installed base of level 1 (or lower) printers. I
then have three choices: (1) Build two documents, one at each level, (2) Build
one document at the lower level, or (3) Build one document that works at either
level. (1) is not useful since it means maintaining two copies of a document in
almost the same format. (2) is totally reasonable, but the PostScript standards
strongly recommend (3) and give numerous examples of how to make (3) happen.

I would therefore claim that the world will rapidly move to using (3), and
makes most sorts of labelling entirely pointless.

> If there is diversity today in the
> available formats for RFCs, tech reports and PhD theses, that
> diversity can only get worse! It is foolish to think that the
> diversity will diminish any time in the near future; certainly the
> number of 'conference proceedings on CD-rom' is increasing, as people
> want to share Mathematica documents, various forms of hypertext, audio
> content and the like.

This supposed diversity is almost entirely illusory. In the early days of
PostScript this was perhaps true, but things have now been worked out to a
point where there's a large consensus behind what is acceptable PostScript
usage and what is not.

In addition, the norms of acceptable PostScript usage are actually somewhat
more restrictive than what appears in the specifications. This is largely due
to the bugs that were present in early PostScript interpreters (problems with
character set vector information come to mind here). This has resulted in a
peculiar mix of feature use and non-use. Fortunately, there are relatively few
glitches of this sort, and this has led to a situation where the problems are
fairly well understood by the driver-writers in the PostScript community.
Nevertheless, I would be the first to support an RFC that describes in some
detail what sorts of PostScript usage are acceptable and what are not.
(I'm more than willing to contribute to such a document; I just don't have
time to write the whole thing myself.)

As part of my daily work I help maintain a portion of our product line that
includes a full PostScript interpreter. As a result I deal with PostScript
problems on a daily basis. And while there are still a couple of notorious
offenders out there, most modern PostScript problems end up either being file
corruption issues or missing header files -- things of this sort. In other
words, the MIME encodings go a long way towards solving most real-world
problems printing PostScript, and driver changes can solve most of the
remaining problems.

> As for a proposal that 'solves this usefully', I have a fairly mild
> proposal that, while it does not solve all of the problems in
> interoperability, does reduce the amount of uncertainty:

> I propose (once again) that instead of saying 'application/postscript'
> it say, at a minimum, 'application/postscript 1985' vs
> 'application/postscript 1994' or whatever you would like to designate
> as a way to uniquely identify which edition of the Postscript
> reference manual you are talking about; instead of being identified as
> 'image/tiff' the files be identified as 'image/tiff 5.0 Class F' vs
> 'image/tiff 7.0 class QXB'.

All my objections still apply (you have yet to respond to a single one of my
earlier points on this matter). I remain totally and completely convinced that
this just causes numerous problems and solves absolutely nothing.

I will spare everyone the repitition of the numerous problems it causes -- they
can get all that out of my earlier mail.

> > Finally, let me point out that I speak as one of the maintainers of one of the
> > largest archive of TeX material available anywhere. This material has been
> > available via MIME-compliant mail server (and of course FTP) for over six
> > months now. This archive contains hundreds of PostScript documents as well
> > as all sorts of other stuff. The problems you seem to think are endemic to
> > this sort of services have yet to materialize.

> I think you need to take a longer-term and broader perspective than a
> six-month experience with a single representation of document.

The archive has been online for about five years. (I just checked and there are
three FTP connections going right now -- fairly light usage for midday.) Mail
service has been available for three years or so. MIME compliance in the mail
service was introduced six months ago. Some of my contribution to the
development of MIME came from the experiences of setting up and maintaining
this archive.

> We've been developing a document archive service that can cope with 20
> years of collected electronic documents. We have not only Postscript 1
> and 2, but also several versions of Interpress, and Press format, two
> versions of DVI, revisable formats of 20 years of editor development
> -- several versions of tex, latex, framemaker, microsoft word, tioga,
> globalview, viewpoint, bravo, bravox, tedit, troff, interleaf,
> wordperfect, etc, and images in multiple variations of RES, AIS, TIFF,
> sun raster, pcx, macpaint, ad nauseum.

Have you deployed it yet? Do you have any operational experience at all?

> In trying to deal with a documents over the longer term, it has become
> apparent that merely marking documents with a simple 'format' tag like
> 'interpress' or 'postscript' or 'tiff' isn't adequate for most
> purposes. Standards evolve over as short as a 5 year period; even the
> method of internal tagging standard versions changes, and certainly,
> it is impossible to rely on in-band version information for all
> formats. 

As I have stated on numerous occasions, my arguments and comments on this
matter are intended _only_ to apply to PostScript. I am fully aware that many
formats do not include version information and this must be provided
externally. There are also formats which provide internal versioning
information but that information is known to be inconsistent. I remain totally
in favor of providing this information externally as needed. But as usual you
persist in trying to apply my comments in a larger context where we both know
they are not valid.

PostScript is a special case -- a very very special case. It is a complete
programming language for starters. This makes it impossible to do anything
resembling a complete analysis of feature utilization. PostScript also is
fairly unique in that it has a comprehensive and extensible internal mechanism
for describing itself.

> I have more to say about the problem of 'external references' but I'll
> save that for another message.

Fine.

> It would be nice to have a calm discussion about possible solutions to
> these problems & hope you will forgo future sarcasm.

I'm going against my better judgement and replying to you despite the fact that
you still have not responded with how you propose to solve any of the issues I
have raised in earlier messages. Rest assured, however, that this is my last
word on the subject until you begin to come to grips with the serious problems
your proposal will cause us all.

				Ned

From emv@garnet.msen.com  Mon Nov  2 22:03:26 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08690; Mon, 2 Nov 92 22:03:26 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06338; Mon, 2 Nov 92 22:15:29 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mm95v-00007uC@garnet.msen.com>; Mon, 2 Nov 92 16:13 WET
Message-Id: <m0mm95v-00007uC@garnet.msen.com>
To: Robert Raisch <raisch@cthulhu.control.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: question and answer, style guide? 
In-Reply-To: Your message of Mon, 02 Nov 92 11:15:18.
             <Pine.3.03.9211021115.E272-b100000@cthulhu.control.com> 
Date: Mon, 02 Nov 92 16:13:40 EST
From: Edward Vielmetti <emv@msen.com>

  > Sounds like somone ought to be buying you a workstation for Christmas :-)
  > But I realize that users tend not to use/have X, even now.
  
  The vast majority of users on the
  Internet have dialin or tty based accounts, and I do not see this trend
  changing in the forseeable future.  Any tool which assumes *anything*
  about the hardware resources of the user is (IMHO) a bad thing. 
  
Then we should be all be designing things that are delivered on paper,
because the vast majority of potential users of the internet in the
next few years are not going to have any network at all or any
hardware at all on which to display user or tutorial or reference
documentation.

W3 is actually as good a first step as any in this direction.  Since
the markup is (at least one step toward) SGML, it is possible to
create documents that are usable within W3 that actually look nice on
paper.  That's a big step forward.  I am not sure yet whether you can
design something that's optimally designed for a 24x80 ascii screen
and also for paper (probably not) but at least it'll be usable in both
contexts.

------

You all should take a look at news:comp.text.sgml, in particular
news:92307.124934U35395@uicvm.uic.edu, which is a trip report by
Charles Sperberg-McQueen on the SGML '92 conference.  Here is an
enlightening perspective on the various roles that tool-builders play
in the publication efforts (are you a scribe, rubricator, or
illuminator?)

       Moving to his main theme, Goldfarb proclaimed the death of the
    "document", which he said may in fact never have been anything more than
    a makeshift to enable the use of computer technology.  The future of
    SGML lies in its use to link both within and between documents.  The
    future of SGML, that is, is HyTime.  He showed medieval pages (from the
    Winchester Bible) and discussed the division of labor among scribes,
    rubricators, illuminators, and applicators of gold leaf, which
    corresponds closely to the division of labor, in presenting a hypermedia
    document today, among the text displayer, the graphics presentation
    software, and other specialized modules.  Hypertext schemes today differ
    from the methods of the past only in incorporating time-based
    information.  The data structure must be highly optimized to make
    possible real-time presentation of time-based data, but logically
    speaking, all that is required are mechanisms for establishing
    (specifying) synchrony among events.  SGML provides a firm basis for
    representing the abstract information structures needed.

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From Paul.Bayton@durham.ac.uk  Tue Nov  3 12:32:27 1992
Return-Path: <Paul.Bayton@durham.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11461; Tue, 3 Nov 92 12:32:27 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29853; Tue, 3 Nov 92 12:44:36 +0100
Received: from ben.uknet.ac.uk by chsun.chuug.ch (5.65c8/1.34)
	id AA04515; Tue, 3 Nov 1992 12:43:08 +0100
Received: from eros.uknet.ac.uk by ben.uknet.ac.uk via UKIP with SMTP (PP) 
          id <sg.12291-0@ben.uknet.ac.uk>; Tue, 3 Nov 1992 11:42:40 +0000
Received: from durham.ac.uk by eros.uknet.ac.uk via JANET with NIFTP (PP) 
          id <2143-0@eros.uknet.ac.uk>; Tue, 3 Nov 1992 11:42:32 +0000
Received: from vega.dur.ac.uk by dur.ac.uk; Tue, 3 Nov 92 11:42:11 GMT
From: Paul Bayton <Paul.Bayton@durham.ac.uk>
Received: from finzi.dur.ac.uk by vega.dur.ac.uk; Tue, 3 Nov 92 11:42:16 GMT
Message-Id: <1197.9211031142@finzi.dur.ac.uk>
Subject: help
To: www-talk@nxoc01.cern.ch
Date: Tue, 3 Nov 92 11:42:46 GMT
Mailer: Elm [revision: 70.30]


From timbl@www3.cern.ch  Tue Nov  3 13:21:12 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11622; Tue, 3 Nov 92 13:21:12 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03412; Tue, 3 Nov 92 13:33:08 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01398; Tue, 3 Nov 92 13:30:15 +0100
Date: Tue, 3 Nov 92 13:30:15 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211031230.AA01398@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: question and answer, style guide? 
Cc: Robert Raisch <raisch@cthulhu.control.com>, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

>  I am not sure yet whether you can
> design something that's optimally designed for a 24x80 ascii screen
> and also for paper (probably not) but at least it'll be usable in both
> contexts.


Do you feel that

 (a) you need more variety of tags, or that
 (b) the 24x80 representation of the existing tags is suboptimal, or that
 (c) the task is impossible by its nature -- you must rewritethe document.

If (a), we should take that into account for HTML extentions.
If (b), you can change the DefaultStyles.c built-in style sheet
If (c), I agree. In principle. But In practice we need to comprompize.

	Tim

From timbl@www3.cern.ch  Tue Nov  3 13:53:10 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11772; Tue, 3 Nov 92 13:53:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05996; Tue, 3 Nov 92 14:05:12 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01434; Tue, 3 Nov 92 14:02:15 +0100
Date: Tue, 3 Nov 92 14:02:15 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211031302.AA01434@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Robert Raisch <raisch@cthulhu.control.com>
Subject: Re: question and answer, style guide?
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

>  *PLEASE* continue to develop WWW with a keen awareness of the requirements
> of the Everyman(person)!

Strangely enough, I am under management pressure here to support X first,
while I know that the largest proportion of users even in High-Energy Physics
labs use terminals (or emulators running on their workstaions).

However when I think of someone whose organisative output is as large as Ed's
not having the most powerful tools to do what he does, I would encourage
Ed himself to get a NeXT and/or X and all the smart tools he can find so
we can all benefit from his productivity.

Rest assured,  the line mode www is always the first to be updated with the
new library and ported around, its support is better than any other W3 product.

Tim BL


__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155




From dagenais@wotan.vlsi.polymtl.ca  Tue Nov  3 15:15:03 1992
Return-Path: <dagenais@wotan.vlsi.polymtl.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12231; Tue, 3 Nov 92 15:15:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14220; Tue, 3 Nov 92 15:27:04 +0100
Received: from vlsi.polymtl.ca by charles.cdec.polymtl.ca (AIX 3.1/UCB 5.61/4.04)
          id AA05708; Tue, 3 Nov 92 10:26:16 -0500
Received: from  pollux.vlsi.polymtl.ca (pollux.vlsi.polymtl.ca) by wotan.vlsi.polymtl.ca (4.1/SMI-4.1)
	id AA05725; Tue, 3 Nov 92 09:21:30 EST
Date: Tue, 3 Nov 92 09:21:30 EST
From: dagenais@vlsi.polymtl.ca (Michel Dagenais)
Message-Id: <9211031421.AA05725@wotan.vlsi.polymtl.ca>
Received: by  pollux.vlsi.polymtl.ca (4.1/SMI-4.0)
	id AA10204; Tue, 3 Nov 92 09:32:17 EST
To: www-talk@nxoc01.cern.ch
In-Reply-To: Tim Berners-Lee's message of Tue, 3 Nov 92 13:30:15 +0100 <9211031230.AA01398@www3.cern.ch>
Subject: question and answer, style guide? 

> Do you feel that
>
> (a) you need more variety of tags, or that
> (b) the 24x80 representation of the existing tags is suboptimal, or that
> (c) the task is impossible by its nature -- you must rewritethe document.

I have been talking to a number of people in the area recently
who want to setup gopher or www information servers for their
users to access both local and external information. In most
cases their first intention is to go for Gopher, because it is
"simpler". When digging more the issue it appears that they just
tried both ASCII clients (gopher and www line-mode) and the
gopher ASCII client is much nicer being based on curses.

Thus, i think that the problem is not with SGML/HTML but simply
with LineMode.

From anthony@yoyo.cc.monash.edu.au  Tue Nov  3 15:37:40 1992
Return-Path: <anthony@yoyo.cc.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12477; Tue, 3 Nov 92 15:37:40 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16113; Tue, 3 Nov 92 15:49:52 +0100
Received: from localhost by yoyo.cc.monash.edu.au (5.65a/1.34)
	id AA03638; Wed, 4 Nov 92 01:48:34 +1100
Message-Id: <9211031448.AA03638@yoyo.cc.monash.edu.au>
To: dagenais@vlsi.polymtl.ca (Michel Dagenais)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: question and answer, style guide? 
In-Reply-To: Your message of "Tue, 03 Nov 92 09:21:30 EST."
             <9211031421.AA05725@wotan.vlsi.polymtl.ca> 
Date: Wed, 04 Nov 92 01:48:34 +1100
From: Anthony Baxter <anthony@yoyo.cc.monash.edu.au>
X-Mts: smtp



In message <9211031421.AA05725@wotan.vlsi.polymtl.ca> you write:
> I have been talking to a number of people in the area recently
> who want to setup gopher or www information servers for their
> users to access both local and external information. In most
> cases their first intention is to go for Gopher, because it is
> "simpler". When digging more the issue it appears that they just
> tried both ASCII clients (gopher and www line-mode) and the
> gopher ASCII client is much nicer being based on curses.
> 
> Thus, i think that the problem is not with SGML/HTML but simply
> with LineMode.

I remember seeing a (development) version of a screenmode client that was
quite nice. I cant find a reference to where it was now, does anyone know
what happened to it? Is it still under development?

I agree, though - a nice curses-type client would be a real bonus.

Anthony
Anthony

From emv@garnet.msen.com  Tue Nov  3 16:35:22 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12841; Tue, 3 Nov 92 16:35:22 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21205; Tue, 3 Nov 92 16:47:07 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mmQSG-00007hC@garnet.msen.com>; Tue, 3 Nov 92 10:45 WET
Date: Tue, 3 Nov 1992 10:37:06 -0500 (EST)
From: Edward Vielmetti <emv@garnet.msen.com>
Subject: Re: question and answer, style guide? 
To: Tim Berners-Lee <timbl@www3.cern.ch>
Cc: Robert Raisch <raisch@cthulhu.control.com>, www-talk@nxoc01.cern.ch
In-Reply-To: <9211031230.AA01398@www3.cern.ch>
Message-Id: <Pine.3.05.9211031003.A20803-b100000@garnet.msen.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

(c) is arguable from a design point of view.  however, since we're dealing
with structured text, it should be possible to structure a document (with
some labor) so that it looks useful in both contexts.

as to (b), the only useful definition of a tag that I have is how it shows
up on the screen.

my biggest argument is for (a).  or more precisely, for tags that are less
of a strict descriptive markup and more of a functional or structural
markup, so that I could mark things up as <question> ... </question> and
<answer> ... </answer> and then go later and define what those mean as far
as on screen presentation.  ideally this might lead to full support for
SGML and DTDs and all of those heavy-weight but powerful constructs.

the real answer might be "edit in a real SGML environment, then edit the
tags so they work with HTML browsers".  in that case what I'm really
asking for is design for a frequently asked questions DTD, and I'm
(currently) sorely lacking the tools needed to experiment my way to an answer.



On Tue, 3 Nov 1992, Tim Berners-Lee wrote:

>  (a) you need more variety of tags, or that
>  (b) the 24x80 representation of the existing tags is suboptimal, or that
>  (c) the task is impossible by its nature -- you must rewritethe document.




From emv@garnet.msen.com  Tue Nov  3 16:42:55 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12880; Tue, 3 Nov 92 16:42:55 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22480; Tue, 3 Nov 92 16:55:08 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mmQaE-00007hC@garnet.msen.com>; Tue, 3 Nov 92 10:54 WET
Date: Tue, 3 Nov 1992 10:50:41 -0500 (EST)
From: Edward Vielmetti <emv@garnet.msen.com>
Subject: Re: question and answer, style guide? 
To: Anthony Baxter <anthony@yoyo.cc.monash.edu.au>
Cc: Michel Dagenais <dagenais@vlsi.polymtl.ca>, www-talk@nxoc01.cern.ch
In-Reply-To: <9211031448.AA03638@yoyo.cc.monash.edu.au>
Message-Id: <Pine.3.05.9211031040.B20803-a100000@garnet.msen.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

there's a nice screen mode browser running. if you follow
	gopher://gopher.msen.com:70/
and go to 'Lots of interesting things', 'Special internet services', it's
in Scott Yanoff's list of things.  Or try
	ftp://rtfm.mit.edu/pub/usenet/alt.internet.services/
which should have a copy to.

i think it's at njit.edu somewhere, but if you chase either of these
pointers you'll find it

--Ed
	
On Wed, 4 Nov 1992, Anthony Baxter wrote:
> 
> I remember seeing a (development) version of a screenmode client that was
> quite nice. I cant find a reference to where it was now, does anyone know
> what happened to it? Is it still under development?
> 



From emv@garnet.msen.com  Tue Nov  3 16:50:32 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12932; Tue, 3 Nov 92 16:50:32 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23115; Tue, 3 Nov 92 17:02:46 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mmQhc-00007mC@garnet.msen.com>; Tue, 3 Nov 92 11:01 WET
Message-Id: <m0mmQhc-00007mC@garnet.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: lamont view servers
Date: Tue, 03 Nov 92 11:01:46 EST
From: Edward Vielmetti <emv@msen.com>

Here's a pointer to some useful code for doing network-based queries
of large numerical datasets.  I would think this would be quite interesting
to the general crowd.

The license agreement, at least last time I read it, made it very difficult
for me sitting at a .com site to play with this stuff.  I will assume for
the sake of argument that anyone anywhere can run a dumb ascii client
against these things to see what they are without needing any licensing.

There is a real gap in the gopher / wais / world wide web paradigm of
network tools that none of them deal well at all with numbers.  If you
have an Oracle db full of stuff that you want to publish, this looks like 
quite a reasonable approach.

--Ed

------- Forwarded Message

	id AA11023; Tue, 3 Nov 92 09:50:44 EST
Date: Tue, 3 Nov 92 09:50:44 EST
From: menke@lamont.ldgo.columbia.edu (bill menke)
Message-Id: <9211031450.AA11023@lamont.ldgo.columbia.edu>
To: emv@msen.com
Subject: Re:  current list of view servers, project overview, etc
Status: RO
X-Status: 

The XGB manual is available by anonymous ftp to lamont.ldgo.columbia.edu
files
	pub/gb_instv3.1.part1.ps.Z and pub/gb_instv3.1.part2.ps.Z

The currect list of view servers is the view view_servers on chaos.ldgo.columbia.edu
and also the file
	pub/view_servers.asc.Z

The XGB system itself is also available by anonymous ftp, as described by
the EOS article.

No mailing lists are available.

View servers are now available for sybase, unify, db_vista and oracle
commercial database managers, plus two binary DBM's that I wrote, plus
ascii files.

The new version of XGB also supports raster servers, that is 'image'
as contrasted to 'parametric' data.  Three raster servers are available,
supporting three different image formats.

Columbia U. is willing to discuss licensing of XGB for commercial purposes.

Good Luck. Menke.

------- End of Forwarded Message


From timbl@www3.cern.ch  Tue Nov  3 17:23:08 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13161; Tue, 3 Nov 92 17:23:08 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26357; Tue, 3 Nov 92 17:35:12 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01616; Tue, 3 Nov 92 17:32:13 +0100
Date: Tue, 3 Nov 92 17:32:13 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211031632.AA01616@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@garnet.msen.com>
Subject: curses browser 
Cc: Anthony Baxter <anthony@yoyo.cc.monash.edu.au>,
        Michel Dagenais <dagenais@vlsi.polymtl.ca>, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


On Wed, 4 Nov 1992, Anthony Baxter wrote:
> 

> I remember seeing a (development) version of a screenmode client that was
> quite nice. I cant find a reference to where it was now, does anyone know
> what happened to it? Is it still under development?
> 


telnet eies2.njit.edu	 (or   telnet 128.235.1.43)   Log in as www. A  
full-screen browser in New Jersey Institute of Technology.  USA.
Jim Whitescarever wrote it, and will release it subject to our getting the
W3 distribution terms sorted out, I think.

The curses browser is in the list of W3 prodcuts now, I shall put a pointer to  
the test site.

From raisch@cthulhu.control.com  Tue Nov  3 18:32:41 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13567; Tue, 3 Nov 92 18:32:41 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01614; Tue, 3 Nov 92 18:44:49 +0100
Received: by control.com (4.1/Spike-2.0)
	id AA04629; Tue, 3 Nov 92 12:42:31 EST
Date: Tue, 3 Nov 1992 12:32:24 -0500 (EST)
From: Robert Raisch <raisch@cthulhu.control.com>
Subject: Re: question and answer, style guide? 
To: Tim Berners-Lee <timbl@www3.cern.ch>
Cc: Edward Vielmetti <emv@msen.com>, www-talk@nxoc01.cern.ch
In-Reply-To: <9211031230.AA01398@www3.cern.ch>
Message-Id: <Pine.3.03.9211031222.O272-b100000@cthulhu.control.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Tue, 3 Nov 1992, Tim Berners-Lee wrote:

> >  I am not sure yet whether you can
> > design something that's optimally designed for a 24x80 ascii screen
> > and also for paper (probably not) but at least it'll be usable in both
> > contexts.
> 
> 
> Do you feel that
> 
>  (a) you need more variety of tags, or that
>  (b) the 24x80 representation of the existing tags is suboptimal, or that
>  (c) the task is impossible by its nature -- you must rewritethe document.
> 
> If (a), we should take that into account for HTML extentions.
> If (b), you can change the DefaultStyles.c built-in style sheet
> If (c), I agree. In principle. But In practice we need to comprompize.
> 
> 	Tim

The main goal of SGML and one which I believe it meets reasonably well is
the seperation of display issues from content issues.

Presentation issues can only be guessed at, never known.

Only by decoupling the presentation of information from it's organisation
can we hope to develop useful tools. (IMHO)

A simple example might be the rendering of a list.  How would you do it?

A "LIST" is nothing more than a collection of items.  There should be no
inherent assumptions as to how it might be rendered.

I could conceive of a block of text containing the first element, and an
indication that there were more elements available (via some user
interaction).

Or even the complete collapse of the list into just an indication of it's
existance, (a "jump").

The point should be (IMHO) that the rendering decision should ALWAYS be
left to the client.  Any rendering-centric portions of HGML should be
replaced by more general constructs.

Perhaps what we need is a WG to design the next generation of HGML?  Is
there such a beast already?

		</rr>
 --
I hate 3 things: Ignorance, Poverty, and Moving.  Well, maybe not in that order.



From connolly@pixel.convex.com  Tue Nov  3 18:37:03 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13584; Tue, 3 Nov 92 18:37:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01837; Tue, 3 Nov 92 18:49:17 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26534; Tue, 3 Nov 92 11:48:26 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA17059; Tue, 3 Nov 92 11:48:23 -0600
Message-Id: <9211031748.AA17059@pixel.convex.com>
To: Edward Vielmetti <emv@garnet.msen.com>
Cc: Tim Berners-Lee <timbl@www3.cern.ch>,
        Robert Raisch <raisch@cthulhu.control.com>, www-talk@nxoc01.cern.ch
Subject: Re: question and answer, style guide? 
In-Reply-To: Your message of "Tue, 03 Nov 92 10:37:06 EST."
             <Pine.3.05.9211031003.A20803-b100000@garnet.msen.com> 
Mime-Version: 1.0
Content-Type: multipart/alternative; boundary="8<"
Date: Tue, 03 Nov 92 11:48:23 CST
From: Dan Connolly <connolly@pixel.convex.com>


--8<

>the real answer might be "edit in a real SGML environment, then edit the
>tags so they work with HTML browsers".  in that case what I'm really
>asking for is design for a frequently asked questions DTD, and I'm
>(currently) sorely lacking the tools needed to experiment my way to an answer.

I suggest the ICA toolset for experimenting your way to an answer.

That's how I came up with the HTML dtd -- or that's where I started.

You can point-and-click your way to a rough grammar, and then tell
it to write an SGML DTD. Then you can look at the DTD and get an
idea of what's going on. Then you hack a little, and voila!

Dan

--8<
Content-Description: archie query for "ICA-.*.tar.Z"
Content-Type: multipart/alternative; boundary="cut-here"

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z";
	SITE="slembe.ifi.uio.no";
	DIRECTORY="/pub/SGML/ICA";
	SIZE=1144389;
	PERMISSION=read-write

Content-Type: application/octet-stream;
	conversions=x-compress;
	type=tar;
	name="ICA-1.5.tar.Z"
X-Last-Modified: 19920720220500Z (1992 Jul 20 22:05:00 GMT)

<FTP host="slembe.ifi.uio.no" dir="/pub/SGML/ICA" name="ICA-1.5.tar.Z"
	 type="application" subtype="octet-stream" bytes="1144389">

slembe.ifi.uio.no:/pub/SGML/ICA/ICA-1.5.tar.Z
file://slembe.ifi.uio.no/pub/SGML/ICA/ICA-1.5.tar.Z
-rw-r--r--  1 ftp 1144389 1992 Jul 20 22:05:00 GMT ICA-1.5.tar.Z

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z";
	SITE="saqqara.cis.ohio-state.edu";
	DIRECTORY="/chameleon";
	SIZE=1144389;
	PERMISSION=read-write

Content-Type: application/octet-stream;
	conversions=x-compress;
	type=tar;
	name="ICA-1.5.tar.Z"
X-Last-Modified: 19920612084600Z (1992 Jun 12 08:46:00 GMT)

<FTP host="saqqara.cis.ohio-state.edu" dir="/chameleon" name="ICA-1.5.tar.Z"
	 type="application" subtype="octet-stream" bytes="1144389">

saqqara.cis.ohio-state.edu:/chameleon/ICA-1.5.tar.Z
file://saqqara.cis.ohio-state.edu/chameleon/ICA-1.5.tar.Z
-rw-r--r--  1 ftp 1144389 1992 Jun 12 08:46:00 GMT ICA-1.5.tar.Z

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z";
	SITE="rs3.hrz.th-darmstadt.de";
	DIRECTORY="/pub/text/sgml/ICA";
	SIZE=1144389;
	PERMISSION=read-write

Content-Type: application/octet-stream;
	conversions=x-compress;
	type=tar;
	name="ICA-1.5.tar.Z"
X-Last-Modified: 19920612144600Z (1992 Jun 12 14:46:00 GMT)

<FTP host="rs3.hrz.th-darmstadt.de" dir="/pub/text/sgml/ICA" name="ICA-1.5.tar.Z"
	 type="application" subtype="octet-stream" bytes="1144389">

rs3.hrz.th-darmstadt.de:/pub/text/sgml/ICA/ICA-1.5.tar.Z
file://rs3.hrz.th-darmstadt.de/pub/text/sgml/ICA/ICA-1.5.tar.Z
-rw-rw-r--  1 ftp 1144389 1992 Jun 12 14:46:00 GMT ICA-1.5.tar.Z

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z";
	SITE="ifi.uio.no";
	DIRECTORY="/pub/SGML/ICA";
	SIZE=1144389;
	PERMISSION=read-write

Content-Type: application/octet-stream;
	conversions=x-compress;
	type=tar;
	name="ICA-1.5.tar.Z"
X-Last-Modified: 19920720220500Z (1992 Jul 20 22:05:00 GMT)

<FTP host="ifi.uio.no" dir="/pub/SGML/ICA" name="ICA-1.5.tar.Z"
	 type="application" subtype="octet-stream" bytes="1144389">

ifi.uio.no:/pub/SGML/ICA/ICA-1.5.tar.Z
file://ifi.uio.no/pub/SGML/ICA/ICA-1.5.tar.Z
-rw-r--r--  1 ftp 1144389 1992 Jul 20 22:05:00 GMT ICA-1.5.tar.Z

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z";
	SITE="archive.cis.ohio-state.edu";
	DIRECTORY="/pub/chameleon";
	SIZE=1144389;
	PERMISSION=read-write

Content-Type: application/octet-stream;
	conversions=x-compress;
	type=tar;
	name="ICA-1.5.tar.Z"
X-Last-Modified: 19920612124600Z (1992 Jun 12 12:46:00 GMT)

<FTP host="archive.cis.ohio-state.edu" dir="/pub/chameleon" name="ICA-1.5.tar.Z"
	 type="application" subtype="octet-stream" bytes="1144389">

archive.cis.ohio-state.edu:/pub/chameleon/ICA-1.5.tar.Z
file://archive.cis.ohio-state.edu/pub/chameleon/ICA-1.5.tar.Z
-rw-r--r--  1 ftp 1144389 1992 Jun 12 12:46:00 GMT ICA-1.5.tar.Z

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z-split";
	SITE="NIC.SURA.NET";
	DIRECTORY="ARCHIE/HOST/ftp.uu.net/pub/text-processing/ICA";
	MODE=DIR;
	SIZE=512;
	PERMISSION=read-write

Content-Type: text/plain
X-Last-Modified: 19920806144700Z (1992 Aug 06 14:47:00 GMT)

<FTP host="NIC.SURA.NET" dir="ARCHIE/HOST/ftp.uu.net/pub/text-processing/ICA" name="ICA-1.5.tar.Z-split"
	 type="text" subtype="plain" bytes="512">

NIC.SURA.NET:ARCHIE/HOST/ftp.uu.net/pub/text-processing/ICA/ICA-1.5.tar.Z-split
file://NIC.SURA.NETARCHIE/HOST/ftp.uu.net/pub/text-processing/ICA/ICA-1.5.tar.Z-split
drwxr-xr-x  1 ftp 512 1992 Aug 06 14:47:00 GMT ICA-1.5.tar.Z-split

--cut-here
Content-Type: message/external-body;
	ACCESS-TYPE=ANON-FTP;
	NAME="ICA-1.5.tar.Z-split";
	SITE="NIC.SURA.NET";
	DIRECTORY="ARCHIE/HOST/unix.hensa.ac.uk/pub/uunet/pub/text-processing/ICA";
	MODE=DIR;
	SIZE=512;
	PERMISSION=read-write

Content-Type: text/plain
X-Last-Modified: 19920813072600Z (1992 Aug 13 07:26:00 GMT)

<FTP host="NIC.SURA.NET" dir="ARCHIE/HOST/unix.hensa.ac.uk/pub/uunet/pub/text-processing/ICA" name="ICA-1.5.tar.Z-split"
	 type="text" subtype="plain" bytes="512">

NIC.SURA.NET:ARCHIE/HOST/unix.hensa.ac.uk/pub/uunet/pub/text-processing/ICA/ICA-1.5.tar.Z-split
file://NIC.SURA.NETARCHIE/HOST/unix.hensa.ac.uk/pub/uunet/pub/text-processing/ICA/ICA-1.5.tar.Z-split
drwxr-xr-x  1 ftp 512 1992 Aug 13 07:26:00 GMT ICA-1.5.tar.Z-split

--cut-here--
--8<--


From timbl@www3.cern.ch  Wed Nov  4 15:34:17 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17858; Wed, 4 Nov 92 15:34:17 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09938; Wed, 4 Nov 92 15:45:48 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02170; Wed, 4 Nov 92 15:42:31 +0100
Date: Wed, 4 Nov 92 15:42:31 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211041442.AA02170@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Robert Raisch <raisch@cthulhu.control.com>
Subject: HTML
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> The point should be (IMHO) that the rendering decision should ALWAYS be
> left to the client.  Any rendering-centric portions of HGML should be
> replaced by more general constructs.

Absolutely. Pei's latest Viola allows ffor example a LISTING section to
be viewed as an embedded scrollable region.  There is nothing rendering-centric
in HTML.

> Perhaps what we need is a WG to design the next generation of HGML?  Is
> there such a beast already?

Those who have been interested in it have aired their views on this list.
Theer haven't been many concrete suggestions for different elements
(except for a fixed width format which allows embedded anchors).

Dan has done a lot of work cleaning it up.
I would like to see separate header and body sections,
so that document-wide info like the title, author, can be found easily
before the body. Of course, if one uses MIME, ther is the
mail header with From: and Subject: fields.
which could be used fro the header, i.e. take teh header out of the
HTML.

From davis@dri.cornell.edu  Wed Nov  4 22:37:10 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20453; Wed, 4 Nov 92 22:37:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA10754; Wed, 4 Nov 92 22:49:28 +0100
Received: by willow.tc.cornell.edu id AA01760
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Wed, 4 Nov 1992 16:48:34 -0500
Date: Wed, 4 Nov 1992 16:48:34 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199211042148.AA01760@willow.tc.cornell.edu>
To: wei@xcf.berkeley.edu, www-talk@nxoc01.cern.ch
Subject: improved printing of WWW files

If you can't quite manage to live without hardcopy, you may
wish sometimes to print WWW files.  I have written a couple
of scripts to do this.  They are particularly useful with
Pei Wei's excellent Viola WWW browser.

A tar archive is available for anonymous FTP:

dri.cornell.edu/pub/davis/print-www.tar

It contains:

README
print-www
print-www.l
html-to-latex
html2latex.sed (modified version of original CERN version)

The hardest part was writing the perl script to obtain documents
via http protocol - turns out you cant just run pipes through telnet.

The conversion from HTML to LaTex is not really robust yet - 
this  is doubly hard since there is no guarentee that the HTML
is legal.  But at least it works for my test cases.  No doubt
it will be improved in time.

best wishes


From timbl@www3.cern.ch  Thu Nov  5 09:46:07 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA22865; Thu, 5 Nov 92 09:46:07 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13262; Thu, 5 Nov 92 09:58:20 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02508; Thu, 5 Nov 92 09:55:34 +0100
Date: Thu, 5 Nov 92 09:55:34 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211050855.AA02508@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Format conversion with NeXTStep 3.0
Reply-To: timbl@nxoc01.cern.ch

Here's an excerpt from the NeXT Nugget news digest, talking about
aspects of NeXTStep 3.0 which developers ought to take into account.
(I don't think WonderFormat is a MIME type ;-)



- Filter services
A Filter service is a new 3.0 type of Service which has no menu item
but supports the ability to convert a piece of data from one type to
another.  Every application can take advantage of filter services
when opening files (via +typesFilterableTo: if it can open a standard
type, like RTF) and when importing data via copy/paste or dragging
(via +imagePasteboardTypes).

Other applications can provide filter services:  for example, if you
have some code which converts your document format [the WonderFormat]
to RTFD, then you should provide this functionality as a filter
service.  Another application which understands RTFD but not
WonderFormat can still import WonderFormat documents and the filter
service will do the work of the conversion.  The other advantage of
providing a filter to ascii is that your documents then become
indexable by Digital Librarian.  See the 3.0 Appkit Release Notes and
the Pasteboard spec sheet for more information on:
+typesFilterableTo:, +newByFilteringFile:, +newByFilteringData:,
+newByFilteringTypesInPasteboard:.


From timbl@www3.cern.ch  Thu Nov  5 11:43:16 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23489; Thu, 5 Nov 92 11:43:16 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24644; Thu, 5 Nov 92 11:55:31 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02662; Thu, 5 Nov 92 11:52:33 +0100
Date: Thu, 5 Nov 92 11:52:33 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211051052.AA02662@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Jim Davis <davis@dri.cornell.edu>
Subject: Re: improved printing of WWW files
Cc: wei@xcf.berkeley.edu, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

>  Date: Wed, 4 Nov 1992 16:48:34 -0500
>  From: Jim Davis <davis@dri.cornell.edu>
>  

>  If you can't quite manage to live without hardcopy, you may
>  wish sometimes to print WWW files.  I have written a couple
>  of scripts to do this.  They are particularly useful with
>  Pei Wei's excellent Viola WWW browser.
>  

>  A tar archive is available for anonymous FTP:
>  

>  dri.cornell.edu/pub/davis/print-www.tar

Also now available as info.cern.ch/pub/www/src/print-www.tar

> ...  

>  The hardest part was writing the perl script to obtain documents
>  via http protocol - turns out you cant just run pipes through telnet.
>
Why not use "www -source" ?

You say, in print-www, that:

# It is intended to
# be used from the Viola WWW browser but might he useful
# elsewhere too

Of course it's great from the line mode browser too, in which you can say

	source | print-www

or just
        setenv WWW_PRINT_COMMAND "print-www '%s' | lpr"

beforehand, and say PRINT in www.
 

Thanks for a cleaning up the .sed file, and doing the thing properly.


From bajan@mocha.cc.mcgill.ca  Mon Nov  9 10:43:44 1992
Return-Path: <bajan@mocha.cc.mcgill.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00359; Mon, 9 Nov 92 10:43:44 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16084; Sat, 7 Nov 92 19:34:54 +0100
Received: from mocha.CC.McGill.CA by kona.cc.mcgill.ca with SMTP (5.65a/IDA-1.4.2b/CC-Guru-2b)
        id AA21181  (mail destined for www-talk@nxoc01.cern.ch) on Sat, 7 Nov 92 13:34:01 -0500
Received: by mocha.cc.mcgill.ca (4.1/SMI-4.1)
	id AA19022; Sat, 7 Nov 92 13:33:53 EST
Message-Id: <9211071833.AA19022@mocha.cc.mcgill.ca>
From: bajan@bunyip.com (Alan Emtage)
Date: Sat, 7 Nov 1992 13:33:53 -0500
X-Mailer: Mail User's Shell (7.2.3 5/22/91)
To: uri@bunyip.com
Subject: URI agenda for Washington
Cc: nir@cc.mcgill.ca, iafa@cc.mcgill.ca, iiir@merit.edu, jkrey@isi.edu,
        rdhobby@ucdavis.edu, wg-isus@rare.nl, www-talk@nxoc01.cern.ch

This is a draft agenda for the newly created joint User Services/Applications
IETF WG on Uniform Resource Identifiers to meet in Washington week after
next. Please send any additions along for inclusion.

Attendees are reminded that this work will be performed in conjunction
with existing and newly created working groups (NIR, IIIR) and will
ultimately be placed on the Standards Track. 

Please recirculate this agenda to groups having an interest in this
discussion.

Personal observation: this should be an "interesting" session :-) 

--------------------------------------------------------
	IETF WG Uniform Resource Identifiers

Co-chairs: Peter Deutsch (peterd@bunyip.com)
	   Alan Emtage (bajan@bunyip.com)

1) Review of current charter making any changes deemed necessary for the
   final version.

2) Review and discussion of Tim Berners-Lee's (timbl@nxoc01.cern.ch)
   document on Uniform Resource Locators. [Note: Tim's announcement for
   this document is included at the end of this message].

3) Discussion of other components of a full URI.
	- The concept of what a URI looks like has been greatly expanded
	  past URI = URL + USRN with recent discussions. 
	- What components make up a URI
	- A lot of work is being done in the Library community and the
	  last thing we need is another standards conflagration. What
	  lines of communication should be established ?
	- Which parts can be tackled now, which should be put off until
	  later? What kind of timetable are we looking at ?
	- Can bodies be assigned to draw up the additional architecture?
	  Who ?

4) Other business

------------
-Alan



Document Availability:

-----------
Date: Fri, 30 Oct 92 17:58:08 +0100
From: Tim Berners-Lee <timbl@nxoc01.cern.ch>
To: nir@cc.mcgill.ca, wg-isus@rare.nl, uri@bunyip.com, www-talk@nxoc01.cern.ch
Subject: URLs - new document;      URL mail server


A new URL definition document is available at locations

	ftp://info.cern.ch/pub/ietf/url3.txt
	ftp://info.cern.ch/pub/ietf/url3.ps

The document has a few changes which were mentioned at the Boston
BOF -- please send anything I've forgotten to me ASAP for inclusion
befoer the Washington.

(Note old WWW clients require "file:" prefix instead of "ftp:" prefix
for FTP archive documents, but latest library allows either during transition  
period).
			----------

Documents may be retrieved by URL: by sending mail to 

listserv@info.cern.ch with a line containing the command SEND
followed by the URL of the document. If the document is in hypertext, the URLs  
of linked documents are listed on the end of the reply. If in doubt send  
message HELP to same address.

The software for the mail robot is available in ftp://info.cern.ch/pub/www/src

The software for the mail robot is available in ftp://info.cern.ch/pub/www/src

I won't be in DC but will expect a talk session to be set up with the  
meeting...   :-)


	Tim Berners-Lee


From davis@dri.cornell.edu  Mon Nov  9 20:56:04 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03652; Mon, 9 Nov 92 20:56:04 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02122; Mon, 9 Nov 92 21:08:46 +0100
Received: by willow.tc.cornell.edu id AA09687
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Mon, 9 Nov 1992 15:08:24 -0500
Date: Mon, 9 Nov 1992 15:08:24 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199211092008.AA09687@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: can an HTTP server determine identity of client?

It is clear that the HTTP protocol per se provides no means
for the server to determine the identity of the user on
the client machine, or even the name of the client machine.
But (I ask in all ignorance of Unix) is there another way
for the server to get this information, perhaps by making
calls to a lower level of the TCP/IP protocol?

I would like to make an HTTP server that provided differing
levels of access to those within and without Cornell.
I regret this must be so because some of the databases
we have here can not be released outside Cornell.

From rik@daneel.rdt.monash.edu.au  Mon Nov  9 23:30:34 1992
Return-Path: <rik@daneel.rdt.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04483; Mon, 9 Nov 92 23:30:34 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09845; Mon, 9 Nov 92 23:43:11 +0100
Received: by daneel.rdt.monash.edu.au (5.57/Ultrix3.0-C)
	id AA22309; Tue, 10 Nov 92 08:42:22 +1000
Message-Id: <9211092242.AA22309@daneel.rdt.monash.edu.au>
To: www-talk@nxoc01.cern.ch
Subject: Re: can an HTTP server determine identity of client? 
In-Reply-To: Your message of "09 Nov 92 15:08:24 EST."
             <199211092008.AA09687@willow.tc.cornell.edu> 
Date: Tue, 10 Nov 92 09:42:21 -1000
From: Rik Harris <rik@daneel.rdt.monash.edu.au>
X-Mts: smtp

> It is clear that the HTTP protocol per se provides no means
> for the server to determine the identity of the user on
> the client machine, or even the name of the client machine.
> But (I ask in all ignorance of Unix) is there another way
> for the server to get this information, perhaps by making
> calls to a lower level of the TCP/IP protocol?
> 
> I would like to make an HTTP server that provided differing
> levels of access to those within and without Cornell.
> I regret this must be so because some of the databases
> we have here can not be released outside Cornell.

I am doing this at the moment at my site.  I have allocated two ports
to http, and allow access to one port from everywhere, and access to
the other only from within my organisation.  The access control is
done with the package log_tcp.  You can get log_tcp to return a
message saying "This is for internal use only", or something like that
on the restricted port.

You can have links back and forward across the two ports, without any
trouble, but only the internal hosts can access the restricted port.

Let me know if you want specific information about configuration
files, etc.

rik.
--
Rik Harris - rik.harris@fcit.monash.edu.au         || Systems Programmer
+61 3 571-2895 (AH & ans.mach) +61 3 573-2679 (BH) || and Administrator
Faculty of Computing and Information Technology,   || Vic. Institute of
Caulfield Campus, Monash University, Australia     || Forensic Pathology

From timbl@www3.cern.ch  Tue Nov 10 14:50:14 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15449; Tue, 10 Nov 92 14:50:14 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04946; Tue, 10 Nov 92 15:02:55 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00461; Tue, 10 Nov 92 14:59:06 +0100
Date: Tue, 10 Nov 92 14:59:06 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211101359.AA00461@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: can an HTTP server determine identity of client?
Reply-To: timbl@nxoc01.cern.ch


Jim,

The server can't access the user name but it can and does know the
host internet address.  This is available in a global string

 extern char * HTClientHost;

if I remember rightly. Any routine in the server can access this.
It's used for logging by the basic daemon with the -l option for example.

The string is a number like "128.141.201.74".  If Cornell has a limited
number of domains then the program could check this string against
a number of templates. Otherwise, you could check the hostname
by doing a gethostbyaddr or whatever call to the nameserver.
There is a trap here in that, although the routine will return fast
for local addresses, it can take a long time for remote addresses.
As you are forced to do the lookup before delivering the data, this
will delay every request.  You could of course keep your own cache
of machine names. But sticking at the number level might be the most
practical way.

The new protocol will have hooks to determine allow the client to specify
a user name, mail address, etc, but of course the internet address
is more reliable than anything inserted by the client.

We have a philosophy that the same doc id should always return the same
document, or an error, no matter who asks. This preserves the usefulness
of quoting the document id. This means that you shouldn't just miss out
links from a document when the person is not allowed to follow them.
It is better to have a note, heading, etc to distinguish private from
public things, and then let an attempt to retrieve private things return
an error.

	Tim





From timbl@www3.cern.ch  Tue Nov 10 16:33:46 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16599; Tue, 10 Nov 92 16:33:46 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA17370; Tue, 10 Nov 92 16:46:27 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00530; Tue, 10 Nov 92 16:42:26 +0100
Date: Tue, 10 Nov 92 16:42:26 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211101542.AA00530@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Strategy for merging NIR applications
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

At the end are some condensed thoughts about directions for merging  
applications.

|  Date: Tue, 03 Nov 92 14:08:54 CST
|  From: Dan Connolly <connolly@pixel.convex.com>
|  

|  >> Dan:
|  >>     Should WAIS clients grok URLs? I don't see any need.  Similarly for
|  >>     gopher clients.
|  > Tim:
|  >	If you want to keep the WAIS and Gopher worlds totally distinct,
|  >	then no.  But who wants to have all these separate clients around?
|  >	Noone: that is the big user puzzlement with NIR now -- why so
|  >	many systems when they all do the same thing? The first step
|  >	toward merging existing systems, *AND* allowing for future systems
|  >	smarter than the ones we have thought of now, is the URL.
|  Dan:
|  Well, you took the bait, but you didn't run with it very far.
|  "The first step towards merging..." -- so you _do_ have a deployment
|  strategy in mind. You just didn't put it in the RFC.

(Can you punt bait?)

The RFC is to define one piece of the whole. It is most important to
keep the peices distinct, or the whole thing will be too rigid. I suppose we  
could propose "All the world should use W3 and we should all discuss what W3  
should be like next" but that would never fly. We see that URLs are essential  
to allow communication between applications and different environments and for  
the introduction of new namespaces.

|  I'd like to see more motivation in the form of a strategy or at
|  least a vision for how this whole thing comes together. I'm trying
|  to piece it together myself, but I'm not having much luck.

That may be because the bits aren't available.  Like a global solid reliable
directory system, for example, and a global payment mechanism or two, and  
athentication systems to support it.  These just aren't globally deployed yet  
so we will have to wait for them and then plug them in.  What we do have is the  
internet, TCP/IP and DNS and we have to put hooks for everything else.

|  For example, I really don't see why different protocols should
|  share addressing schemes, or why the sheme:path syntax should
|  go any further than the WWW project.

It is the scheme:path syntax which allows the bridge. It need not be used
in closed applications, but in open applications it is needed. W3 will be able
to incrementally move to new name spaces. If other apps don't, too bad.
But I think they do.

|  >	Yes. Certainly a useful aspect of URLs. But not the only.
|  >	What about the URL pasteboard type? To allow "cut reference"
|  >	and "paste link" to work between applications?
|  

|  I've been trying to work out a design for this, and URLs don't seem
|  to help much. If you copy a WAIS URL and paste it into another
|  client, that client has to grok WAIS protocol in order to use it.

Or have access to any WAIS engine. There are 100 ways of keeping a
register for a user for what applications can handle what kinds of
namespace.  This will probably be something which is more difficult
to standardize on, as NeXT and Windows and Motif etc will all have different  
schemes for registering application capabilities, and different  
inter-application messaging techniques.

There is some analogy between capabilities to deal with UDIs and capabilities  
to deal with data formats here ... Mark Litwack (are you there, Mark?)
had a scheme in which the two merged.

|  Or it has to use a gateway. If it uses a gateway, it has to translate
|  the WAIS name into something suitable to that gateway, which is
|  something you said you didn't think was practical.

I don't think the client has to translate anything necessarily.
The http protocol allows one to send over a URL including the
prefix, which need not be http:.  For a protocol which does not deal
in generic URLs, some translation would be necessary.

|  Anyway, if you're
|  going to define a gateway system, then define a gateway system, not
|  just an addressing syntax.

The gateway system is a time differential of the set of protocols used.
It will always change to reflect the movements between protocols. I agree
that the HTTP protocol could perhaps have something in the spec to point out  
that the full UDI may be sent to a gateway.

|  I'm trying to figure out how URLs complete the picture, but I don't
|  see it.
|  


There will be a few things in the picture. URLs are the most important next  
step now, a timely requeirement for commonality. That's all. They will not  
solve all the problems.

You want a merging strategy. Suppose it is as follows, off the top of my head.

			  MERGING STRATEGY

The metastrategy fro developing strategies is to first, make a model of
a superset of the functionality of the various systems, then design protocols  
to implement them, then make applications which use both old and new. Beware  
that merging all the applications onto one is only one as seen from the user,  
hopefully there would be separately developed products on there with messaging  
between them. 


	Merging WWW and WAIS and Z39.50:

A new HTTP2 protocol is defined, back-compatible with the current one.
It involves sending a request which is a particular format. There are MIME-like  
formats defined for a simple document request, a basic WAIS-like query, and if  
necessary other Z39.50 queries. This means establishing a mapping between the  
Z39.50 parameters and an ASCII internet-mail-like format. We make the set of  
query types as open as the set of document format types and encoding methods,  
and allow for a registery of names like IANA.  The formats acceptable to the  
client are sent with the request [as mail header lines or in the body?].
The query types acceptable to a server are returned by the server when a  
queryable object is referenced.

We look at the parameters necessary for this process and add them to the WAIS  
protocol, so that Z39.50++ becomes a binary (and therefore perhaps more  
efficient) version of HTTP2. The binary and telnet-style versions run  
side-by-side, with fairly simple table-driven interfaces. The telnet version  
will be useful becasue of all those perl servers which will be eth leading  
edge.

	Merging with SQL:

This model will engulf query/retrieve systems, including e.g. SQL queries,
and allow for upgrade for new ideas of remote operations. In fact, the
query type will generalize to a typed set of input parameters for a arbitrary  
operation [method] on a remote object with the given URL, and so in principle  
can access a globally distributed OODB. In order to get a more manipulable  
version of the results of an SQL query or arbitrary OO operation, we will  
probably need a data tagging system [maybe ASN/1 based?] for structured  
[alpha]numeric data such as SQL handles, but this is just another data format,  
not our problem now. The question of converting data formats on parts of  
multipart messages [structures] will be addressed, nothing uinsurmountable. We  
would obviously like to see a mapping from any OOP's identifier space into URL  
space.

	Merging with Mail and News:

Now look at what we have. The presentation part of the W3 client is just the  
presentation part of MIME, with an added hypertext data class. MIME really  
should have picked HTML instead of text/richtext, but that we can add.
Now we address the intruiging area of the merging of mail, news, and NIR.
The same application must obviously be able to handle all of these, and they  
should all look the same to the user. That is, if you link an article to a list  
of articles, post it to a newsgroup, or mail it to a mailbox, the operation  
(adding message to list of messages) is beasically the same, and should be sen  
as such. Note that MIME has to be augmented with the addition of query type  
registration, there needs to be a format for the summarizing of capabilities  
(mailcap information) in with requests. The mailcap information needs some  
extension. A spinoff is that the HTTP protocol should run over mail too, which  
though excruciatingly slow is neat as a lot of people still use mail servers  
;-).  This occured to me when implementing
the W3 server.

The mechanisms underneath are currently many and varied in order to be optimal  
in the extreme cases of personal messaging, news broadcasting, and archive  
serving. However, as cache coherency protocols are added to HTTP, the functions  
like "give me a list of what is new in the following domain" will approach NNTP  
functions.  Within time it will become a decision made on the fly by the system  
as to whether a document [message, article] is held, sent, or broadcast. So I  
expect the protocols to converge.  An important issue here will be  
charactization of basic operations on sets [maillistarchives, newsgroups,  
directories].  The engines which speak the new combined protocol will have to  
speak the old ones too for back-compatibilty for a few years. This is
a smooth trasnsition strategy. We're not talking about vast librares, just  
supporting SMTP and NNTP and HTTP for a while (they are very similar) as well  
as a superset protocol.

	Stargazing

What else do we want to merge in?  Name servers of course are just HTTP2
servers which return "forward" results. File systems, I expect, too, will veer  
in the general direction. Alex-like systems will map the retrieval subset onto  
the subset. Maybe soft links could generalise to URLs. Maybe some smart  
manufacturers will allow a soft link to be a URL.  If not, file suffix which  
indicates a query or just .MIME would be enough to indicate that the document  
contains type information and could be a pointer or a query. However, there is  
basic functionality which the file sysyem does not support (That is, anything  
other than open, read write and close: no arbitrary methods here) so we will  
never map everything to fopen(). But by that time we'l all be using our  
favorite OO systems anyway. The exciting part will be to see whether the GUI  
builders will get to the point that the whole OO application can by built  
graphically, bridging the gap between the app builders and real programs (Can  
you imagine progamming in perl with a mouse? in Eiffel?)

	Tim
	

__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155




From emv@garnet.msen.com  Tue Nov 10 21:01:29 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18114; Tue, 10 Nov 92 21:01:29 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12927; Tue, 10 Nov 92 21:14:13 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mp1xh-00009MC@garnet.msen.com>; Tue, 10 Nov 92 15:13 WET
Message-Id: <m0mp1xh-00009MC@garnet.msen.com>
To: www-talk@nxoc01.cern.ch
Subject: proposed registration of type 'text/html' for MIME
Date: Tue, 10 Nov 92 15:13:07 EST
From: Edward Vielmetti <emv@msen.com>

Here's the form for registering 'text/html' partly filled in, from RFC
1341.

I don't think this needs a ton of work, just to fill in a few of the
references.  As we get some operations experience with it (and some
applications support!) I could imagine putting more frobs on it.  Not
yet tho.

To: IANA@isi.edu
Subject:  Registration of new MIME content-type/subtype

MIME type name: 
	text
MIME subtype name: 
	html
Required parameters: 
	none
Optional parameters: 
	left open for future study.  

	Any additional parameters should match up with existing HTML
	constructs, so that e.g. the parameter
		title="Making links in the web"
	would be functionally equivalent to an HTML preamble of
		<title>Making links in the web</title>
Encoding considerations:
	HTML text may contain ISO Latin-1 characters or other 8 bit
	values; if so the text should be wrapped with one of the
	standard MIME 8 bit encodings.
Security considerations:
	HTML documents may contain embedded information used to 
	instruct browsers and viewers to execute queries on remote
	databases.  Some HTML browsers have included support for
	embedded command languages.  Such facilities should be used
	with care.
Published specification:
	"The HTTP Protocol as Implemented in W3", avaiable for
	anonymous ftp from ftp://info.cern.ch/pub/doc/www/http.txt.  
	Describes the HTTP interactive access protocol and the tags used
	in HTML documents.

	"The WWW Book", from
	ftp://info.cern.ch/pub/doc/the_www_book.txt.

	"Universal Document Identifiers on the Network", OSI-DS-XXX,
	from XXX.

Person & email address to contact for further information:
	(Tim, you want to be named on this?)

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From connolly@pixel.convex.com  Wed Nov 11 00:26:23 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18947; Wed, 11 Nov 92 00:26:23 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29092; Wed, 11 Nov 92 00:39:08 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA25723; Tue, 10 Nov 92 17:38:21 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA02403; Tue, 10 Nov 92 17:38:20 -0600
Message-Id: <9211102338.AA02403@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: proposed registration of type 'text/html' for MIME 
In-Reply-To: Your message of "Tue, 10 Nov 92 15:13:07 EST."
             <m0mp1xh-00009MC@garnet.msen.com> 
Date: Tue, 10 Nov 92 17:38:19 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Here's the form for registering 'text/html' partly filled in, from RFC
>1341.

I strongly suggest we bring the definition of HTML into conformance
with the SGML standard before we register it with the IANA.

>Published specification:
>	"The HTTP Protocol as Implemented in W3", avaiable for
>	anonymous ftp from ftp://info.cern.ch/pub/doc/www/http.txt.  
>	Describes the HTTP interactive access protocol and the tags used
>	in HTML documents.

This is the HTTP document, not the HTML document:

     This document defines the Hypertext Transfer protocol (HTTP) as
     currently implemented by the WorldWideWeb initaitive software.

The HTML document is: http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html
an old version of which is contained in http.txt.

In any case, both documents mention some relationship between HTML and
SGML which is not formally defined:

   The hypertext mark-up language is an SGML format. This defines the
   basic syntax used. The particular language, the set of tags and the
   rules about their use, and their significance is not part of the
   SGML standard. There being no standard on this, we have adopted a
   set which seems sensible. We call them HTML -- hypertext markup
   language. HTML is not an alternative to SGML, it is a particular
   format within the SGML rules (an SGML "DTD").

The standard is very clear on this kind of thing. [I just got myself a
copy, so I can quote it:]

	4.103 (document) type declaration: A markup declaration that
	contains the formal specification of a document type
	definition.

	4.104 document type delcaration subset: The element, entity,
	and short reference sets occuring within the declaration
	subset of a document type declaration.

	4.105 document (type) definition: Rules, determined by an
	application, that apply SGML to the markup of documents of a
	particular type. A document type definition includes a formal
	specification, expressed in a document type declaration, of
	the element types, element relationships, and attributes, and
	references that can be represented by markup. It thereby
	defines the vocabulary of the markup for which SGML defines
	the syntax.

So it seems that the HTML DTD is missing the "formal specification."
I have written a document type declaration subset that matches HTML as
currently defined and implemented, with a few exceptions (most
importantly, the PLAINTEXT tag). See
http://info.cern.ch/hypertext/WWW/MarkUp/HTML.dtd

Most existing HTML documents need only small modifications to bring
them into conformance (quote attribute values, add the <!DOCTYPE ...>
prologue). And the existing WWW browser parses conforming documents
just fine.

     Currently HTML documents are transmitted without the normal SGML framing
     tags, but if these are included parsers will ignore them.

I don't know what "the normal SGML framing tags" are. An SGML document
has three parts: the SGML declaration, the prologue, and the instance.
It is common in SGML applications to use an implied SGML declaration
and include the prologue by reference (kinda like an #include
directive in C.) but without these "framing tags," it's just not an
SGML document.

Besides, it's very little work to add the line:

<!DOCTYPE HTML SYSTEM>

at the beginning of HTML documents.

More non-conforming stuff in Markup.html:

Plaintext

   This tag indicates that all following text is to be taken litterally, up to
   the end of the file.  Plain text is designed to be represented in the same
   way as example XMP text, with fixed width character and significant line
   breaks. Format:
   

                <PLAINTEXT>

   This tag allows the rest of a file to be read efficiently without parsing.
   Its presence is an optimisation. There is no closing tag.

This should be moved outside the definition of HTML. It should just be
part of the HTTP protocol: if the server starts the response with
<PLAINTEXT>, what you're getting is plain text, not SGML.

Another problem:

Example sections

       The text may contain any ISO Latin printable characters, including the
          tag opener, so long as it does not contain the closing tag in full.

This doesn't fit in SGML. The ETAGO delimiter ("</") ends a CDATA
section.

A clarification:

Paragraph

   This tag indicates a new paragraph. The exact representation of this
   (indentation,  leading, etc) is not defined here, and may be a function of
   other tags, style sheets etc. The format is simply
   

        <P>

   (In SGML terms, paragraph elements are transmitted in minimised form).

The implementation suggests that the <P> tag marks an empty element, a
paragraph separator, rather than allowing minimization in the form of
an omitted end tag, </P>.



We could even go so far as to call WWW an SGML application:

	 4.279 SGML Application: Rules that apply SGML to a text
	 processing application. An SGML application includes a formal
	 specification of the markup constructs used in the
	 application, expressed in SGML. It can also include a
	 non-SGML definition of semantics, application conventions,
	 and/or processing.

	 Note 2 The formal specification of an SGML application
	 constitutes the common portions of the documents processed by
	 th application. These common protions are frequently made
	 available as public text.

In other words, ftp://info.cern.ch/pub/doc/the_www_book.txt would
serve as the "non-SGML definition." [by the way: I could only find
postscript and LaTeX versions of the book: no txt file.] The "common
portion" is html.dtd (we could obtain a public text identifier for
it...).

If we want to do this (define an SGML application) section 15.5
requires this statement to be plastered all over the place:

	 An SGML Application Conforming to International Standard
	 ISO 8879 -- Standard Generalized Markup Language

If we're gonna use SGML, why not do it right?
 
Dan




From emv@garnet.msen.com  Wed Nov 11 00:46:36 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19016; Wed, 11 Nov 92 00:46:36 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29681; Wed, 11 Nov 92 00:59:18 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mp5Tc-00009TC@garnet.msen.com>; Tue, 10 Nov 92 18:58 WET
Message-Id: <m0mp5Tc-00009TC@garnet.msen.com>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: proposed registration of type 'text/html' for MIME 
In-Reply-To: Your message of Tue, 10 Nov 92 17:38:19.
             <9211102338.AA02403@pixel.convex.com> 
Date: Tue, 10 Nov 92 18:58:17 EST
From: Edward Vielmetti <emv@msen.com>

Thanks for the message, Dan.  A few points.

I am not comfortable referencing documents (in an IETF message) that
are available only via the system in which I'm trying to document.
I.e. for the purpose of conveying to the IETF what all we're up to
it would be best to have files in the anonymous FTP area and rendered
in ASCII.  

Calling HTML an "SGML application" is not a bad long term plan.  I
fear there's some risk in ease of implementation from
	Content-type: text/sgml; dtd="(string that identifies html.dtd)"
compared to
	Content-type: text/html
and as such I'd prefer to not haul in all of the SGML standard in the
description of the system, not right up front at least.  Better to
spec something that you can deliver and play with rather than stretch
things out to their limits.  

Dan, if 
	http://info.cern.ch/hypertext/WWW/MarkUp/HTML.dtd
is in fact something that should get a "public text identifier" (some
kind of ISBN number?) then we should do it.  That would be a very
useful document to reference in the comments section.

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From connolly@pixel.convex.com  Wed Nov 11 01:38:10 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19113; Wed, 11 Nov 92 01:38:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07932; Wed, 11 Nov 92 01:50:53 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA28223; Tue, 10 Nov 92 18:50:03 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA13695; Tue, 10 Nov 92 18:50:01 -0600
Message-Id: <9211110050.AA13695@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: proposed registration of type 'text/html' for MIME 
In-Reply-To: Your message of "Tue, 10 Nov 92 18:58:17 EST."
             <m0mp5Tc-00009TC@garnet.msen.com> 
Date: Tue, 10 Nov 92 18:50:01 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Thanks for the message, Dan.  A few points.
>
>I am not comfortable referencing documents (in an IETF message) that
>are available only via the system in which I'm trying to document.
>I.e. for the purpose of conveying to the IETF what all we're up to
>it would be best to have files in the anonymous FTP area and rendered
>in ASCII.  

Point taken. But we can certainly come up with an ASCII version of
http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html . There's no
need to use the HTTP document.

And the HTML DTD is a plain ASCII document as is. I'm not sure
if it's available via ftp, but certainly that's not an insurmountable
obstacle.

>Calling HTML an "SGML application" is not a bad long term plan.  I
>fear there's some risk in ease of implementation from
>	Content-type: text/sgml; dtd="(string that identifies html.dtd)"
>compared to
>	Content-type: text/html
>and as such I'd prefer to not haul in all of the SGML standard in the
>description of the system, not right up front at least.  Better to
>spec something that you can deliver and play with rather than stretch
>things out to their limits.  

Uuugh! Do I have to write a "Misconceptions about SGML" essay? I
never said anything about content-type: text/sgml. I did talk
about hauling the SGML standard in, but that only requires the few
changes I pointed out. There's no need to implement a whole SGML parser.

But I'd say ISO 8879 + html.dtd is a better spec for the syntax of
HTML than any english description we can come up with in the near term.
And the existing WWW code works just fine on conforming documents. [It
also groks non-conforming documents, but I don't see any crime in that.]

After all, I think this is the intent of the designers of HTML:

	HTML is not an alternative to SGML, it is a particular
	format within the SGML rules (an SGML "DTD"). [http.txt]


And, if we start to enforce SGML compliance, we may be able to do things
like using SGML editors, translators, browsers, etc. If we don't enforce
compliance, we might as well not use SGML at all!

>Dan, if 
>	http://info.cern.ch/hypertext/WWW/MarkUp/HTML.dtd
>is in fact something that should get a "public text identifier" (some
>kind of ISBN number?) then we should do it.  That would be a very
>useful document to reference in the comments section.

From what I can tell, there are three kinds of public text identifiers:
ISO ids, registered owner ids, and unregistered owner ids. The first
kind refer to ISO documents. The second category is for documents by
ISO members, I guess. And as far as I can tell, the third category
is anybody's game (kinda like x- identifiers.)

They look like this:

-//unregistered owner//class name//lang

The class is DTD. The lang is probably EN (english). The owner and
name are pretty much up for grabs. Usually the country is included
in the owner, even for unregistered owners.

So here's a stab:

-//USA-IANA//DTD HTML//EN

or, in context:

<!DOCTYPE HTML PUBLIC "-//USA-IANA//DTD HTML//EN">

But perhaps CERN, rather than IANA should be the owner.

Dan


From connolly@pixel.convex.com  Wed Nov 11 02:11:20 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19202; Wed, 11 Nov 92 02:11:20 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16024; Wed, 11 Nov 92 02:24:04 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA29526; Tue, 10 Nov 92 19:23:14 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA14979; Tue, 10 Nov 92 19:23:13 -0600
Message-Id: <9211110123.AA14979@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: indexes as links rather than documents
Date: Tue, 10 Nov 92 19:23:12 CST
From: Dan Connolly <connolly@pixel.convex.com>

I keep running across interesting bits of evidence that tell me that
indexes should be a type of link rather than a type of document.

In the current WWW model, an index is a document with an <ISINDEX>
tag. The browser displays the document, recognizes the <ISINDEX> tag,
and provides a search/find/keyword command. The user invokes the
search command and supplies the seed words. The browser conducts the
search transaction and displays the results. Then the user chooses
from the results.

In the model I prefer (which is used by gopher currently), and index
is an anchor with an INDEX attribute. The user selects the anchor, and
the browser prompts for seed words. The user supplies the seed words,
and the browser conducts the transaction as above.

In the WWW model, I run into lots of documents that just say "this is
a searchable index." Some index documents have instructions and
summaries of contents, but most are generated by gateways.

The WWW model actually fits inside the gopher model: where you would
use a document with an <ISINDEX> tag, use a document with an INDEX
anchor.

But the gopher model is more versatile. You can have one document
point to multiple indexes. You can have one set of instructions for
lots of indexes.

For example:

	WAIS based information

Click here[1] for instructions.

	directory of servers	search[2] describe[3]
	RFC's			search[4] describe[5]
	README's		search[6] describe[7]

which might look like:

<!DOCTYPE HTML SYSTEM>
<TITLE>WAIS based information</TITLE>
<a HREF="wais_help.html">Click here</a> for instructions.
<p>
<dl>
<dt>directory of servers
<dd><a HREF="wais://quake.think.com/INFO" INDEX=1>search</a>
<a HREF="wais://quake.think.com/directory-of-servers.src">describe</a>

...

It's easy enough to support the current model for backwards
compatibility, but I think the concept of an index as a type
of link makes more sense than indexes as a type of document.

Thoughts?

Dan



From emv@garnet.msen.com  Wed Nov 11 04:53:32 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19707; Wed, 11 Nov 92 04:53:32 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA27201; Wed, 11 Nov 92 05:06:15 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mp9KZ-00009JC@garnet.msen.com>; Tue, 10 Nov 92 23:05 WET
Message-Id: <m0mp9KZ-00009JC@garnet.msen.com>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch, wais-talk@quake.think.com
Subject: Re: indexes as links rather than documents 
In-Reply-To: Your message of Tue, 10 Nov 92 19:23:12.
             <9211110123.AA14979@pixel.convex.com> 
Date: Tue, 10 Nov 92 23:05:12 EST
From: Edward Vielmetti <emv@msen.com>

  I keep running across interesting bits of evidence that tell me that
  indexes should be a type of link rather than a type of document.

  <dd><a HREF="wais://quake.think.com/INFO" INDEX=1>search</a>
  <a HREF="wais://quake.think.com/directory-of-servers.src">describe</a>
  
Careful, representing WAIS servers is tricky.  In the gopher world,
the wais .src files are totally hidden from the client, and the links
look just like any other index

Name=Search journalism periodicals
Type=7
Port=70
Path=waissrc:/.wais/journalism.periodicals.src
Host=dewey.lib.ncsu.edu

Whereas in the W3 world the equivalent information would be like

Type=wais
Port=3041
Host=julian.uwo.ca
Path=journalism.periodicals

(e.g) href=wais://julian.uwo.ca:3041/journalism.periodicals?

Which is "better"?  Well, you win and you lose.  The Gopher approach
binds the gateway tightly to the WAIS server, so there's really no way
to see where the service "really" is, and in particular no way to make
sure that a query to a local service doesn't rebound off some machine
a long ways away.  The WWW approach (currently) rebounds everything
off of Switzerland - is anyone else running a WWW_to_WAIS gateway? -
but it leaves open the option to invoke a local WAIS engine.

What happens if (say) the journalism folks at the University of
Western Ontario decide to move their server?  Presumably they update
the directory of servers entry; those sites with gopher-based links
pick up a copy of the new .src file, and other servers with links
don't have to do anything special to make an update.  But those with
WWW links embedded somewhere in their document need to update them
(bad).

I've thought there might be some use to have the common construct
	search the directory of servers for "journalism", then
	search all the sources you get back from that for "watergate"
all nailed down into one reference link and one operation.  I do that
kind of search all the time and it's just not fair that it takes
multiple steps.

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB



From connolly@pixel.convex.com  Wed Nov 11 05:00:58 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19738; Wed, 11 Nov 92 05:00:58 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28940; Wed, 11 Nov 92 05:13:41 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA06889; Tue, 10 Nov 92 22:12:51 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA18354; Tue, 10 Nov 92 22:12:50 -0600
Message-Id: <9211110412.AA18354@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: www-talk@nxoc01.cern.ch, wais-talk@quake.think.com
Subject: Re: indexes as links rather than documents 
In-Reply-To: Your message of "Tue, 10 Nov 92 23:05:12 EST."
             <m0mp9KZ-00009JC@garnet.msen.com> 
Date: Tue, 10 Nov 92 22:12:50 CST
From: Dan Connolly <connolly@pixel.convex.com>


>  I keep running across interesting bits of evidence that tell me that
>  indexes should be a type of link rather than a type of document.
>  
>Careful, representing WAIS servers is tricky.  In the gopher world,
>the wais .src files are totally hidden from the client, and the links
>look just like any other index

I can see how this is relavent to the syntax of WWW addresses for
WAIS indexes, but I don't see how it relates to my argument that
indexes should be links rather than nodes (i.e. being an index should
be an attribute of an anchor element, not of a document).

I didn't mean to suggest any changes in the WWW addressing scheme.
If my examples don't fit the current syntax, just pretend they do.

Dan


From timbl@www3.cern.ch  Wed Nov 11 17:32:44 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01291; Wed, 11 Nov 92 17:32:44 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03644; Wed, 11 Nov 92 17:45:30 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA03391; Wed, 11 Nov 92 17:41:37 +0100
Date: Wed, 11 Nov 92 17:41:37 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211111641.AA03391@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Apologies for down time
Reply-To: timbl@nxoc01.cern.ch



info.cern.ch has been unreachable for large parts of several days  
recently (or, if reachable, it has been unusable). This is because it  
has too much reliance on an ULTRIC file server which has had DEC  
engineers running round trying to find hardware problems. I hope the  
problemis fixed now, but we will take steps to make info less dependent  
on it in the future.

	Tim


__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155




From timbl@www3.cern.ch  Thu Nov 12 17:10:25 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06590; Thu, 12 Nov 92 17:10:25 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06372; Thu, 12 Nov 92 17:23:13 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA03876; Thu, 12 Nov 92 17:19:16 +0100
Date: Thu, 12 Nov 92 17:19:16 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211121619.AA03876@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Edward Vielmetti <emv@msen.com>
Subject: Re: proposed registration of type 'text/html' for MIME
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Here's the form for registering 'text/html' partly filled in, from RFC
> 1341.

> I don't think this needs a ton of work, just to fill in a few of the
> references.  As we get some operations experience with it (and some
> applications support!) I could imagine putting more frobs on it.  Not
> yet tho.

OK, good idea. Here is a 2nd draft.  I have changed:

We restrict it to 7 bit, any 8 bit use is cheating and causes unpredictable  
things to happen. SGML provides for funny character encoding like &eacute; and  
things. We could also make the base character set a parameter (for the Fins).

Should we put a limit on line length? Do we need one to prevent an
encoding system from being mandatory for all HTML documents?

I have put a ref to the HTML spec rather than the HTTP spec. I'll
upgrade that to include the DTD and make it more RFCish (70 characters wide and  
stuff ;-)

_______________________________________________________
To: IANA@isi.edu
Subject:  Registration of new MIME content-type/subtype text/html

MIME type name: 

	text
MIME subtype name: 

	html
Required parameters: 

	none
Optional parameters: 

	left open for future study.  


	Any additional parameters should match up with existing HTML
	constructs, so that e.g. the parameter
		title="Making links in the web"
	would be functionally equivalent to an HTML preamble of
		<title>Making links in the web</title>
Encoding considerations:

	HTML text should be restricted to ASCII printable characters
	unless an extended character set is specfified in an
	optioinal parameter (subject for future study). There is no
	limit on line length.

Security considerations:

	HTML documents may contain embedded information used to 

	instruct browsers and viewers to execute queries on remote
	databases.  Some HTML browsers have included support for
	embedded command languages.  Such facilities should be used
	with care.

Published specification:

	"Hypertext Markup Language", Tim Berners-Lee, CERN, 1992. 

	available as http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html
	or as by anonymous FTP from ftp://info.cern.ch/pub/doc/www/html.txt

  See also:
	
	"The HTTP Protocol as Implemented in W3", avaiable for
	anonymous ftp from ftp://info.cern.ch/pub/doc/www/http.txt.  

	Describes the HTTP interactive access protocol and the tags used
	in HTML documents.
	
	"The WWW Book", from
	ftp://info.cern.ch/pub/doc/the_www_book.txt.

	"Universal Document Identifiers on the Network", OSI-DS-XXX,
	available by anonymous FTP from
	ftp://info.cern.ch/info.cern.ch/pub/www/doc/url3.{txt,ps}.

Person & email address to contact for further information:

	Tim Berners-Lee, CERN, 1211 Geneva 23, Switzerland
	timbl@info.cern.ch


From timbl@www3.cern.ch  Thu Nov 12 18:39:38 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07238; Thu, 12 Nov 92 18:39:38 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14070; Thu, 12 Nov 92 18:52:26 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00296; Thu, 12 Nov 92 18:48:05 +0100
Date: Thu, 12 Nov 92 18:48:05 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211121748.AA00296@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: indexes as links rather than documents
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


> Date: Tue, 10 Nov 92 19:23:12 CST
> From: Dan Connolly <connolly@pixel.convex.com>
> 

> I keep running across interesting bits of evidence that tell me that
> indexes should be a type of link rather than a type of document.
> 

> <dd><a HREF="wais://quake.think.com/INFO" INDEX=1>search</a>
> <a HREF="wais://quake.think.com/directory-of-servers.src">describe</a>
> 


Dan,

If you found that most index documents are empty, then that was probably
because you were in gopherspace -- in waisspace they all have descriptions.

[[even though as Ed points out the description lives in one place and the index  
in another so it is dificult to know which address to use! On that point,
ed, I chose to refer to the index as that is what actually MUST be available,
when the source file is not essential, it is just icing on the cake]].

How about above instead of

> <dd><a HREF="wais://quake.think.com/INFO" INDEX=1>search</a>

using

> <dd><a HREF="wais://quake.think.com/INFO" RELATIONSHIP=SEARCHME>search</a>

This expresses that the type of relationship between the documents is
that when you follow the link you should search the seocnd index. 


An important addition is just a document-wide
<LINK HREF="wais://quake.think.com/INFO" RELATIONSHIP=SEARCHME>
empty element which makes a document searchable, directing seraches
to a given index. Similarly  RELATIONSHIP=GLOSSARY would
allow double-clicked words to be looked up in a remote glossary.

This would solve the problem with WAIS source files, in that their hypertext
representation would have such a link to the index, so the source file itself
appears searchable. There are lots of places where this would be neat.

We have been over this a little before.  Perhaps we should allow either
option, as it is so checken-and-egg as a problem.

The argument for the W3 model is that often the user will want to search
or not search a single index, and he doesn't want two operations: one to
select the fact that he wants to search (click) and one to search
(typetypetyepe return).  He just wants one.   After all,
if he clicks on a gopher index link, what does he get? a serach panel.
And what is the difference between that and a serachable document?
Only speed of display. If the serachable document can come up as fast as
a search panel, then there is no contest. If not, there is.

In the long term the search will become (if my philosophising of
the oher day comes true) an instance of a class of search query, for which
an editor will exist if the client supports it. So searches with
toggle buttons and radio buttons and stuff will be possible,
and a gopher serach and W3 search will be subclasses.

I feel that we are talking about optimising speed when the net is slow
here. In general, I don't want to talk about a dictionary (search[1].
describe[2]) I want to talk about a dictionary[3]. The former seems kinda
messy. It just saves time given a slow network now...

Tim


From davis@dri.cornell.edu  Thu Nov 12 21:28:42 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08307; Thu, 12 Nov 92 21:28:42 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06769; Thu, 12 Nov 92 21:41:34 +0100
Received: by willow.tc.cornell.edu id AA13231
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Thu, 12 Nov 1992 15:40:14 -0500
Date: Thu, 12 Nov 1992 15:40:14 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199211122040.AA13231@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: Re: indexes as links rather than documents


As I understand it, the distinction between an indexed document
and an ordinary one is that an indexed document is really
an abstract document.   Once you provide the index terms,
then it is concrete document.  So a Dictionary is abstract
until I send it a keyword, then I get back a real document,
the definition for the word.

In the case of the dictionary, of course, one could argue
that the Dictionary as a whole is also a concrete document,
since it would be possible to just read it cover to cover.
On the other hand, this makes less sense if the abstract
document is performing some kind of computation on the
search words, for example, running finger, or even adding
something to a database.  Then there is no meaningful document
without the index.

If that's the right way to think, then it makes sense to put
the semantics into the link, because it's more extensible.
In the case of the index, the user is prompted for keywords,
because that's the input to the computation.  But 
there are many kinds of abstract documents, and many possible
computations to yield concrete documents, and for many of
these there will be other kinds of input requirements.
It seems inelegant to support these by having the abstact
document indicate its input requirements by returning a
document with a special purpose tag (eg <ISINDEX>), since
this will mean that every new kind of input will require a new
tag in HTML.

Maybe this can be addressed in HTML2, by some process of negotiation
between server (abstract document) and user/client.  e.g the document
sends something back saying "I will give you a page of text but
first send me at least one line of ascii".  If this is the
right approach, then we need a means of describing data types and prompts.
The negotiation might take several exchanges, or it might be done
by having the server return a small program, something like a decision
tree, to prompt the user for all meaningful values required for
the input.

While I am on the topic, though, the protocol should be designed
such that software agents on the client side can obtain documents
without having to negotiate, if they have all the desired inputs
ready to hand.  I don't want my user agent to have to parse X
windows protocols in order to answer on by behalf.

Best wishes

From connolly@pixel.convex.com  Thu Nov 12 21:29:04 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08313; Thu, 12 Nov 92 21:29:04 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06777; Thu, 12 Nov 92 21:41:53 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA18074; Thu, 12 Nov 92 14:40:47 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23043; Thu, 12 Nov 92 14:41:03 -0600
Message-Id: <9211122041.AA23043@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: indexes as links rather than documents 
In-Reply-To: Your message of "Thu, 12 Nov 92 18:48:05 +0100."
             <9211121748.AA00296@www3.cern.ch> 
Date: Thu, 12 Nov 92 14:41:02 CST
From: Dan Connolly <connolly@pixel.convex.com>


>How about above instead of
>
>> <dd><a HREF="wais://quake.think.com/INFO" INDEX=1>search</a>
>
>using
>
>> <dd><a HREF="wais://quake.think.com/INFO" RELATIONSHIP=SEARCHME>search</a>

Sure... I don't have any strong opinions about the syntax, except that
RELATIONSHIP is longer than 8 characters, and that will be an issue
with some SGML parsers.

This opens up the discussion of link semantics from a while ago. Some
folks suggested a TYPE or ACTION or RELATIONSHIP attribute on anchors:

SEE	(the default) see HREF, i.e. this anchor refers to HREF
INCLUDE	include HREF at this point in the document (for quoting)
REPLACE	replace the anchor text with HREF (another quoting mechanism)
AUGMENT	display HREF along with this document (for figures, etc.)
SEARCH	search HREF and display the results

You could have zillions of options here: DEFINE (HREF defines this anchor),
UPDATE (HREF is a new version of this document), TRANSLATE (HREF is
some converted form of this document). But I suggest we call the attribute
ACTION, and only create a new one when there is a user-interface impact.
So the ACTION attribute is a hint from the author on how to display
the document. That way, all the DEFINE, UPDATE, TRANSLATE, etc fall under
SEE above.

>The argument for the W3 model is that often the user will want to search
>or not search a single index, and he doesn't want two operations: one to
>select the fact that he wants to search (click) and one to search
>(typetypetyepe return).  He just wants one.

But in practice, it's the same: if I quote a wais source from this
mail message, you'll have to 1) traverse the link to the index,
and 2) search the index.


>   After all,
>if he clicks on a gopher index link, what does he get? a serach panel.
>And what is the difference between that and a serachable document?
>Only speed of display. If the serachable document can come up as fast as
>a search panel, then there is no contest. If not, there is.
>
>In the long term the search will become (if my philosophising of
>the oher day comes true) an instance of a class of search query, for which
>an editor will exist if the client supports it. So searches with
>toggle buttons and radio buttons and stuff will be possible,
>and a gopher serach and W3 search will be subclasses.

[Ever seen Dynatext? It supports query dialogs of this sort...]

Ah... this is a perspective that I hadn't thought of: that the
gopher search panel is analagous to the WWW index "cover page."

I was thinking of a model where in stead of a link from document X
to index Y and then another to search results document Z, the link goes
from X to Z, and searching the index is part of traversing the link.

It makes sense to me to have the links mirror protocol transactions.
In other words, if we have a two step protocol:

client: "I want to do a search."
server: "OK... here's the query form."
client: "Here's the filled-out query form."
server: "OK... here are the results."

Then the WWW model of "searchable documents" (query forms) makes sense.

But currently, we just have one step protocols:

client: "I want to do a search. Here's what I'm interested in..."
server: "OK... here are the results..."

So as long as the client can do all the preparation for the query
without help from the server, we should not penalize users with an
extra network round trip.

I don't think the network will ever be a non-issue.

>An important addition is just a document-wide
><LINK HREF="wais://quake.think.com/INFO" RELATIONSHIP=SEARCHME>
>empty element which makes a document searchable, directing seraches
>to a given index. Similarly  RELATIONSHIP=GLOSSARY would
>allow double-clicked words to be looked up in a remote glossary.
>
>This would solve the problem with WAIS source files, in that their hypertext
>representation would have such a link to the index, so the source file itself
>appears searchable. There are lots of places where this would be neat.

Sure... we need to treat <ISINDEX> as shorthand for
<A NAME="k" HREF=_this_document_ ACTION=SEARCH></a>

As for making it global to the document, you could just treat the
first SEARCH anchor as the default index to search. In the linemode
browser, you could type "k words" to search the default index,
or "7 k words" to search the index assocated with anchor 7. In a GUI
browser, you could have a search text area, and a search button. The
search button would be inactive unless there are SEARCH anchors. Then
it would default to the first one, and clicking any other SEARCH anchor
would just "steer" the search button towards that index.

Dan


From connolly@pixel.convex.com  Thu Nov 12 22:07:39 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08527; Thu, 12 Nov 92 22:07:39 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA08315; Thu, 12 Nov 92 22:20:26 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA20012; Thu, 12 Nov 92 15:19:27 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA26490; Thu, 12 Nov 92 15:19:31 -0600
Message-Id: <9211122119.AA26490@pixel.convex.com>
To: Jim Davis <davis@dri.cornell.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: indexes as links rather than documents 
In-Reply-To: Your message of "Thu, 12 Nov 92 15:40:14 EST."
             <199211122040.AA13231@willow.tc.cornell.edu> 
Date: Thu, 12 Nov 92 15:19:30 CST
From: Dan Connolly <connolly@pixel.convex.com>


>As I understand it, the distinction between an indexed document
>and an ordinary one is that an indexed document is really
>an abstract document.   Once you provide the index terms,
>then it is concrete document.  So a Dictionary is abstract
>until I send it a keyword, then I get back a real document,
>the definition for the word.

The most useful definition of a document I've seen is "a unit
of retreival." Since you can't retrieve the index -- only
summaries of the index, query results from the index, etc. --
the index isn't a document by that definition.

>In the case of the dictionary, of course, one could argue
>that the Dictionary as a whole is also a concrete document,
>since it would be possible to just read it cover to cover.

If we had a protocol to do this, yes...

>Maybe this can be addressed in HTML2, by some process of negotiation
>between server (abstract document) and user/client.  e.g the document
>sends something back saying "I will give you a page of text but
>first send me at least one line of ascii".  If this is the
>right approach, then we need a means of describing data types and prompts.
>The negotiation might take several exchanges, or it might be done
>by having the server return a small program, something like a decision
>tree, to prompt the user for all meaningful values required for
>the input.

Clarification: this shouldn't impact HTML significantly. It should
impact HTTP, the protocol. Whether the forms description/query
language should become part of HTML isn't clear. I'd say: no, it
should be a separate beast.

Tim mentioned the same scenario, with servers sending out forms,
clients with "forms editors" and complex queries.

The closest thing I've seen to an implementation of this is the
Dynatext browser. There's some sort of query dialog description
language: I think it's an SGML language. So you describe the dialog
with an SGML document. The browser displays toggle buttons, text
fields etc. The user fills in the fields, clicks OK, and the
query results come up in the table of contents window.

Dan


From davis@dri.cornell.edu  Thu Nov 12 22:21:01 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08571; Thu, 12 Nov 92 22:21:01 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09081; Thu, 12 Nov 92 22:33:51 +0100
Received: by willow.tc.cornell.edu id AA13270
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Thu, 12 Nov 1992 16:32:34 -0500
Date: Thu, 12 Nov 1992 16:32:34 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199211122132.AA13270@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: Re: indexes as links rather than documents

I wrote:
> Maybe this can be addressed in HTML2, by some process of negotiation
> between server (abstract document) and user/client.  
 
Where I should have written HTTP2, since I am talking about
the protocol, not the markup.  Thanks to Dan Connolly for pointing 
this out.
 

From emv@garnet.msen.com  Fri Nov 13 00:33:01 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09090; Fri, 13 Nov 92 00:33:01 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14407; Fri, 13 Nov 92 00:45:48 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mpoDX-00009QC@garnet.msen.com>; Thu, 12 Nov 92 18:44 WET
Message-Id: <m0mpoDX-00009QC@garnet.msen.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: proposed registration of type 'text/html' for MIME 
In-Reply-To: Your message of Thu, 12 Nov 92 17:19:16.
             <9211121619.AA03876@www3.cern.ch> 
Date: Thu, 12 Nov 92 18:44:40 EST
From: Edward Vielmetti <emv@msen.com>

re line length -

html per se has no limit, right?  i think we can punt on that question
and not even mention it, and just let the ordinary MIME things happen
if someone really wants to send a document as a single line 10000
characters long.  (the encoding/decoding should be transparent, or at
least not visible to the user once the document hits the browser)

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From KHOADLEY@ib.rl.ac.uk  Fri Nov 13 11:00:39 1992
Return-Path: <KHOADLEY@ib.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11459; Fri, 13 Nov 92 11:00:39 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15858; Fri, 13 Nov 92 11:13:28 +0100
Received: from CERNVM.cern.ch by CERNVM.CERN.CH (IBM VM SMTP V2R2)
   with BSMTP id 4460; Fri, 13 Nov 92 11:13:41 SET
Received: from UKACRL.BITNET by CERNVM.cern.ch (Mailer R2.08) with BSMTP id
 1219; Fri, 13 Nov 92 11:13:41 SET
Received: from RL.IB by UKACRL.BITNET (Mailer R2.07) with BSMTP id 3430; Fri,
 13 Nov 92 10:12:24 GMT
Received: from RL.IB by UK.AC.RL.IB (Mailer R2.07) with BSMTP id 7759; Fri, 13
 Nov 92 10:09:29 GMT
Via:        UK.AC.RL.IB; 13 NOV 92 10:09:13 GMT
Message-Id: <"13 Nov 92 09:42:56 GMT KHOADLEY"@UK.AC.RL.IB>
Date:       Fri, 13 Nov 92 09:42:56 GMT
From: "KHOADLEY" (KHOADLEY at UKACRL)        <KHOADLEY@ib.rl.ac.uk>
To: www-talk@nxoc01.cern.ch
Subject:    ISINDEX on documents


Somewhat off the current thread, but anyway ...

There seems little reason to me for the ISINDEX tag. Searching consists of
two components: the client constructing a list of queries designed to
retrieve the relevant information, and the server receving and processing
those queries. Once you start to consider a single user initiated search
generated multiple queries there seems to be little point in tieing searches
down to particular tagged documents.
(of course once a search generates multiple queries it can receive multiple
replies. AS these replies could come from different servers it becomes the
responsibility of the client end to aggregate the replies into something
useful to return to the user: a selection panel for instance).

I'd like to see the ISINDEX tag dropped: the client is free to construct
whatever queries they wish, using the existing HTTP query mechanism.

Instead of the ISINDEX tag, I think we need an INPUT tag. ISINDEX is quite
used for purposes other than searching, eg. for "smart" documents or
to calculate square roots ! (an example familiar to those at the HEPix
meeting ...). However using a tag that appears to have been intended for
search purpose for something different is confusing to the end user: ie
the page asks for the value you wish to square root, whilst the client
prompts you for a string to search for ....

Perhaps the following could be useful:
           <INPUT VAR=x>Please enter your name</INPUT>
           <DONEINPUT>
ie a series of input fields with associated labels, and a button to say
you have finished and now send the query. This opens the possibility
of forms based pages generating smart documents. How you send the input is
a different matter; maybe:
    http://somehost.somewhere/some/path?x=xxxx+y=yyyy+z=zzzz

Kevin Hoadley, Rutherford Appleton Lab, khoadley@ib.rl.ac.uk

From timbl@www3.cern.ch  Fri Nov 13 16:56:56 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14421; Fri, 13 Nov 92 16:56:56 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15413; Fri, 13 Nov 92 17:09:20 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01410; Fri, 13 Nov 92 17:04:45 +0100
Date: Fri, 13 Nov 92 17:04:45 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211131604.AA01410@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: OO WWW:  Re: indexes as links rather than documents 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Date: Thu, 12 Nov 92 14:41:02 CST
> From: Dan Connolly <connolly@pixel.convex.com>
> 

> 

> >How about ...using
> >
> >> <dd><a HREF="wais://quake.think.com/INFO" RELATIONSHIP=SEARCHME>search</a>
> 

> Sure... I don't have any strong opinions about the syntax, except that
> RELATIONSHIP is longer than 8 characters, and that will be an issue
> with some SGML parsers.

Of course. We could call it REL.  (That's what you get with IBM-derived  
products ;-)

> This opens up the discussion of link semantics from a while ago. Some
> folks suggested a TYPE or ACTION or RELATIONSHIP attribute on anchors:
> 

> SEE	(the default) see HREF, i.e. this anchor refers to HREF
> INCLUDE	include HREF at this point in the document (for quoting)
> REPLACE	replace the anchor text with HREF (another quoting mechanism)
> AUGMENT	display HREF along with this document (for figures, etc.)
> SEARCH	search HREF and display the results
>
> You could have zillions of options here: DEFINE (HREF defines this anchor),
> UPDATE (HREF is a new version of this document), TRANSLATE (HREF is
> some converted form of this document). But I suggest we call the attribute
> ACTION, and only create a new one when there is a user-interface impact.
> So the ACTION attribute is a hint from the author on how to display
> the document. That way, all the DEFINE, UPDATE, TRANSLATE, etc fall under
> SEE above.

There seem to be two classes of attribute we are talking about here.
Some attributes express a relationship between the documents (or
relationships between objects described by the documents). These are
relationships like

	A	is a previous version of	B
	A	describes the author of		B
	
etc.  These add semantics to the web, allow interesting navigational
functions.

Other attributes are directions to the client app., to so something:

  When you display A, also display B
  When you display A, embed B
  When you print A, also print B
  When you follow this link, embed B
  When you follow this link, search B
  

Let's bear in mind the idea of moving toward arbitrary objects.
The OO paradigm (the current one, not the only possible one)
has objects which each have a class, which has a set of
methods, each of which has a set of parameters, each of which
has a class. Ok?

Suppose documents are objects. We have two methods now,

	render()  	returning HTML
	search(text)    returning HTML

each taking the object ID as an implicit parameter. That's OK.
These are neat functions. Suppose we generalize.

First generalization: the render():HTML is only one of many functions
which the object supports. The format negotiation says
"I want render()* where * is preferably ....".

In this context the <ISINDEX> tag means "The class of this object
supports search(text):HTML method".  The SEARCHME link
looks more like some advance notice type information [[yuk -- I hate
having info in two places... links can get out of date -- but never mind]]

	"The object references supports search()"
	
plus also the client advice 


  "When you follow this link, search B"

I would separate these two things, personally myself. the first is useful
for deciding on the icon to display, without the second which coud
independently be any of the other client hints mentioned above.

In this light, it would seem there are some obvious extentions!
Let's skip the debate about whether you want the client advice attribute
to make an automatic search (OK, let's put it in, no harm in it)
and focus on the type declaration. Whether it is declariung stuff
about the document itself or a related document is a trivial difference,
the difference between the LINK and the A tags, in fact.

So lets generalize ISINDEX. We have a choice. We can declare the class
(or any superclass) of an object. Or we can declare a method. In fact,
in the multiple inheritance view, these are very similar as you can
imagine a class which only supports one method, and then construct
classes out of inheritance only from those classes. So declaring a
class (set of methods) is more general than declaring a method.

An immediate application of this will be declaring things like
Z39.50 objects which support various search methods with all kinds
of different input parameters.  But one wouldn't of couse stop there....

Classes, like representations, would have to be registered. Either registered
or defined in a suitable language by a document. Ha! we know how to handle  
that.. we don't even have to worry about the class description language
because we can apply format negotiation to that.  In fact, registreation
of a class with IANA would involve storing the class description in a document  
was in a well-defined place, and of which everyone would take copies.
I mean like maybe even at compile time for classic classes.
(I would expect that a convention for getting an icon graphic from
the same directory as the class description would be kinda nice.)

So a document start with information about itself

    <!doctype HTML USDN=x.500:/ch/cern/cn/92/tbl
	URL=http://info.cern.ch/tbl/mydoc.html>
	URL=ftp://info.cern.ch/pub/www/doc/mydoc.html>

    <type USDN=x.500:/internet/iana/www/textindex
	URL=http://www.iana.net/class/www/textindex.asn1
	ACTION=textsearch>

    Hi this is an index of all the widgets in the wdgetbox.

We need one (1) language to start with for defining the classes.
ASN/1 or a SGML version of ASN/1? So long as it can include
inheritance from other classes using a hypertext reference.

We still require all documents to be renderable, which just means
that all objects support render() returning either HTML or
ascii.


> >The argument for the W3 model is that often the user will want to search
> >or not search a single index, and he doesn't want two operations: one to
> >select the fact that he wants to search (click) and one to search
> >(typetypetyepe return).  He just wants one.
> 

> But in practice, it's the same: if I quote a wais source from this
> mail message, you'll have to 1) traverse the link to the index,
> and 2) search the index.

Like with the chicken and the egg, it depends when you start counting the
clicks.

> 




> It makes sense to me to have the links mirror protocol transactions.
> In other words, if we have a two step protocol:
> 

> client: "I want to do a search."
> server: "OK... here's the query form."
> client: "Here's the filled-out query form."
> server: "OK... here are the results."

Isn't that slower? In fact what happens is the user thinks like
that, but the client, knowing that a search is possible, happens
to put up the search panel.  Could we in fact use a 

"when you display A, display B too" link, here?


>... 

> I don't think the network will ever be a non-issue.
> 

I agree. Speed of light, for one thing.


> Sure... we need to treat <ISINDEX> as shorthand for
> <A NAME="k" HREF=_this_document_ ACTION=SEARCH></a>
> 

> As for making it global to the document, you could just treat the
> first SEARCH anchor as the default index to search.

I would prefer to use a document-wide LINK element
in the header as a document-wide analogue of the A element
but that's a detail.

	Tim
	


From timbl@www3.cern.ch  Mon Nov 16 15:09:49 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25427; Mon, 16 Nov 92 15:09:49 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22703; Mon, 16 Nov 92 15:22:41 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02518; Mon, 16 Nov 92 15:18:18 +0100
Date: Mon, 16 Nov 92 15:18:18 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211161418.AA02518@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: "KHOADLEY" (KHOADLEY at UKACRL) <KHOADLEY@ib.rl.ac.uk>
Subject: Re: ISINDEX on documents
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  Date:       Fri, 13 Nov 92 09:42:56 GMT
>  From: "KHOADLEY" (KHOADLEY at UKACRL)        <KHOADLEY@ib.rl.ac.uk>
...
>  There seems little reason to me for the ISINDEX tag. Searching consists of
>  two components: the client constructing a list of queries designed to
>  retrieve the relevant information, and the server receving and processing
>  those queries. Once you start to consider a single user initiated search
>  generated multiple queries there seems to be little point in tieing searches
>  down to particular tagged documents.
>  (of course once a search generates multiple queries it can receive multiple
>  replies. AS these replies could come from different servers it becomes the
>  responsibility of the client end to aggregate the replies into something
>  useful to return to the user: a selection panel for instance).

Every seach needs to search SOMETHING.  Like it has to search a particular  
database or index.  Some servers support thousands of "virtual" indexes. How  
can you express this in a search? The answer is that indexes are names just  
like documents. we then have a convention that if you try to retrieve an index  
as a document, you get back a description of it. This latter is something  
missing for example from WAIS where you have to look up the SOURCE file for a  
database in a totally differents server which may be out of sync (and, being  
centralized, doesn't scale).

If you regard a query as something which is just thrown at the server, then you  
can't allow a ruch enough world of virtual search servers. This was a problem  
with the gopher protocol which causes the Gopher guys to make a  
non-back-compatible sudden change in the protocol spec to introduce an index  
name. 


>  I'd like to see the ISINDEX tag dropped: the client is free to construct
>  whatever queries they wish, using the existing HTTP query mechanism.
>  

>  Instead of the ISINDEX tag, I think we need an INPUT tag. ISINDEX is quite
>  used for purposes other than searching, eg. for "smart" documents or
>  to calculate square roots ! (an example familiar to those at the HEPix
>  meeting ...). However using a tag that appears to have been intended for
>  search purpose for something different is confusing to the end user: ie
>  the page asks for the value you wish to square root, whilst the client
>  prompts you for a string to search for ....
>  

>  Perhaps the following could be useful:
>             <INPUT VAR=x>Please enter your name</INPUT>
>             <DONEINPUT>
>  ie a series of input fields with associated labels, and a button to say
>  you have finished and now send the query. This opens the possibility
>  of forms based pages generating smart documents. How you send the input is
>  a different matter; maybe:
>      http://somehost.somewhere/some/path?x=xxxx+y=yyyy+z=zzzz

This is the tip of the iceberg.  I think the onlywy to do it generally is (see  
my previous message) to have typed queries, and generic editors for them.
The case above would become something like
<ISINDEX TYPE="iana:/www/classes/query/personalinfo">
The type would also be retrievable like a document, and if you had a generic
query language language, you would get back a description of the query language  
supported. A generic client could use that to generate the form to be filled in  
by a user.

>  Kevin Hoadley, Rutherford Appleton Lab, khoadley@ib.rl.ac.uk
>  


Tim Berners-Lee

From marca@wintermute.ncsa.uiuc.edu  Tue Nov 17 03:08:03 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29396; Tue, 17 Nov 92 03:08:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02217; Tue, 17 Nov 92 03:21:00 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA01883
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Mon, 16 Nov 92 20:20:12 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA03160; Mon, 16 Nov 92 20:21:23 -0800
Date: Mon, 16 Nov 92 20:21:23 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211170421.AA03160@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: html & emacs

Anyone written code to construct HTML files in Emacs?  I'm hacking
something up; let me know if you're interested....

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From connolly@pixel.convex.com  Tue Nov 17 03:21:23 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29448; Tue, 17 Nov 92 03:21:23 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05521; Tue, 17 Nov 92 03:34:19 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA08673; Mon, 16 Nov 92 20:33:15 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA17244; Mon, 16 Nov 92 20:33:08 -0600
Message-Id: <9211170233.AA17244@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: html & emacs 
In-Reply-To: Your message of "Mon, 16 Nov 92 20:21:23 PST."
             <9211170421.AA03160@wintermute.ncsa.uiuc.edu> 
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="cut-here"
Date: Mon, 16 Nov 92 20:33:08 CST
From: Dan Connolly <connolly@pixel.convex.com>


--cut-here

>Anyone written code to construct HTML files in Emacs?  I'm hacking
>something up; let me know if you're interested....

I use sgml-mode to verify HTML documents and WWW to see how
they format. So every once in a while I do C-c C-v to call
the sgml parser and verify the document, and I use compile
mode to run www and "preview" the document.

If you come up with something more WYSIWIG, I'd like to
see it.

Dan

--cut-here
Content-Description: SGML mode by James Clark (jjc@jclark.com)
Content-Type: application/octet-stream; type="elisp"

;; SGML mode.
;; Copyright (C) 1992 James Clark (jjc@jclark.com)
;; Parts derived from blink-matching-open in simple.el, which is
;; Copyright (C) 1985, 1986, 1987 Free Software Foundation, Inc.

;; This file is not yet part of GNU Emacs.

;; GNU Emacs is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 1, or (at your option)
;; any later version.

;; GNU Emacs is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs; see the file COPYING.  If not, write to
;; the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

;; Some suggestions for your .emacs file:
;;
;; (autoload 'sgml-mode "sgml-mode" "SGML mode" t)
;;
;; (setq auto-mode-alist
;;       (append (list (cons "\\.sgm$" 'sgml-mode)
;;                     (cons "\\.sgml$"  'sgml-mode)
;;                     (cons "\\.dtd$" 'sgml-mode))
;;               auto-mode-alist))

(provide 'sgml-mode)
(require 'compile)

;;; sgmls is a free SGML parser available from
;;; ftp.uu.net:pub/text-processing/sgml
;;; Its error messages can be parsed by next-error.
;;; The -s option suppresses output.

(defconst sgml-validate-command
  "sgmls -s"
  "*The command to validate an SGML document.
The file name of current buffer file name will be appended to this,
separated by a space.")

(defvar sgml-saved-validate-command nil
  "The command last used to validate in this buffer.")

(defvar sgml-mode-map nil "Keymap for SGML mode")

(if sgml-mode-map
    ()
  (setq sgml-mode-map (make-sparse-keymap))
  (define-key sgml-mode-map ">" 'sgml-close-angle)
  (define-key sgml-mode-map "/" 'sgml-slash)
  (define-key sgml-mode-map "\C-c\C-v" 'sgml-validate))

(defun sgml-mode ()
  "Major mode for editing SGML.
Makes > display the matching <.  Makes / display matching /.
Use \\[sgml-validate] to validate your document with an SGML parser."
  (interactive)
  (kill-all-local-variables)
  (setq local-abbrev-table text-mode-abbrev-table)
  (use-local-map sgml-mode-map)
  (setq mode-name "SGML")
  (setq major-mode 'sgml-mode)
  (make-local-variable 'paragraph-start)
  ;; A start or end tag by itself on a line separates a paragraph.
  ;; This is desirable because SGML discards a newline that appears
  ;; immediately after a start tag or immediately before an end tag.
  (setq paragraph-start
	"^[ \t\n]\\|\
\\(</?\\([A-Za-z]\\([-.A-Za-z0-9= \t\n]\\|\"[^\"]*\"\\|'[^']*'\\)*\\)?>$\\)")
  (make-local-variable 'paragraph-separate)
  (setq paragraph-separate
	"^[ \t\n]*$\\|\
^</?\\([A-Za-z]\\([-.A-Za-z0-9= \t\n]\\|\"[^\"]*\"\\|'[^']*'\\)*\\)?>$")
  (make-local-variable 'sgml-saved-validate-command)
  (set-syntax-table text-mode-syntax-table)
  (make-local-variable 'comment-start)
  (setq comment-start "<!-- ")
  (make-local-variable 'comment-end)
  (setq comment-end " -->")
  (make-local-variable 'comment-indent-hook)
  (setq comment-indent-hook 'sgml-comment-indent)
  (make-local-variable 'comment-start-skip)
  ;; This will allow existing comments within declarations to be
  ;; recognized.
  (setq comment-start-skip "--[ \t]*")
  (run-hooks 'text-mode-hook 'sgml-mode-hook))

(defun sgml-comment-indent ()
  (if (and (looking-at "--")
	   (not (and (eq (char-after (1- (point))) ?!)
		     (eq (char-after (- (point) 2)) ?<))))
      (progn
	(skip-chars-backward " \t")
	(max comment-column (1+ (current-column))))
    0))

(defconst sgml-start-tag-regex
  "<[A-Za-z]\\([-.A-Za-z0-9= \n\t]\\|\"[^\"]*\"\\|'[^']*'\\)*"
  "Regular expression that matches a non-empty start tag.
Any terminating > or / is not matched.")

(defvar sgml-mode-markup-syntax-table nil
  "Syntax table used for scanning SGML markup.")

(if sgml-mode-markup-syntax-table
    ()
  (setq sgml-mode-markup-syntax-table (make-syntax-table))
  (modify-syntax-entry ?< "(>" sgml-mode-markup-syntax-table)
  (modify-syntax-entry ?> ")<" sgml-mode-markup-syntax-table)
  (modify-syntax-entry ?- "_ 1234" sgml-mode-markup-syntax-table)
  (modify-syntax-entry ?\' "\"" sgml-mode-markup-syntax-table))

(defconst sgml-angle-distance 4000
  "*If non-nil, is the maximum distance to search for matching <
when > is inserted.")

(defun sgml-close-angle (arg)
  "Insert > and display matching <."
  (interactive "p")
  (insert-char ?> arg)
  (if (> arg 0)
      (let ((oldpos (point))
	    (blinkpos))
	(save-excursion
	  (save-restriction
	    (if sgml-angle-distance
		(narrow-to-region (max (point-min)
				       (- (point) sgml-angle-distance))
				  oldpos))
	    ;; See if it's the end of a marked section.
	    (and (> (- (point) (point-min)) 3)
		 (eq (char-after (- (point) 2)) ?\])
		 (eq (char-after (- (point) 3)) ?\])
		 (re-search-backward "<!\\[\\(-?[A-Za-z0-9. \t\n&;]\\|\
--\\([^-]\\|-[^-]\\)*--\\)*\\["
				     (point-min)
				     t)
		 (let ((msspos (point)))
		   (if (and (search-forward "]]>" oldpos t)
			    (eq (point) oldpos))
		       (setq blinkpos msspos))))
	    ;; This handles cases where the > ends one of the following:
	    ;; markup declaration starting with <! (possibly including a
	    ;; declaration subset); start tag; end tag; SGML declaration.
	    (if blinkpos
		()
	      (goto-char oldpos)
	      (condition-case ()
		  (let ((oldtable (syntax-table))
			(parse-sexp-ignore-comments t))
		    (unwind-protect
			(progn
			  (set-syntax-table sgml-mode-markup-syntax-table)
			  (setq blinkpos (scan-sexps oldpos -1)))
		      (set-syntax-table oldtable)))
		(error nil))
	      (and blinkpos
		   (goto-char blinkpos)
		   (or
		    ;; Check that it's a valid delimiter in context.
		    (not (looking-at
			  "<\\(\\?\\|/?[A-Za-z>]\\|!\\([[A-Za-z]\\|--\\)\\)"))
		    ;; Check that it's not a net-enabling start tag
		    ;; nor an unclosed start-tag.
		    (looking-at (concat sgml-start-tag-regex "[/<]"))
		    ;; Nor an unclosed end-tag.
		    (looking-at "</[A-Za-z][-.A-Za-z0-9]*[ \t]*<"))
		   (setq blinkpos nil)))
	    (if blinkpos
		()
	      ;; See if it's the end of a processing instruction.
	      (goto-char oldpos)
	      (if (search-backward "<?" (point-min) t)
		  (let ((pipos (point)))
		    (if (and (search-forward ">" oldpos t)
			     (eq (point) oldpos))
			(setq blinkpos pipos))))))
	  (if blinkpos
	      (progn
		(goto-char blinkpos)
		(if (pos-visible-in-window-p)
		    (sit-for 1)
		  (message "Matches %s"
			   (buffer-substring blinkpos
					     (progn (end-of-line)
						    (point)))))))))))

;;; I doubt that null end tags are used much for large elements,
;;; so use a small distance here.
(defconst sgml-slash-distance 1000
  "*If non-nil, is the maximum distance to search for matching /
when / is inserted.")

(defun sgml-slash (arg)
  "Insert / and display any previous matching /.
Two /s are treated as matching if the first / ends a net-enabling
start tag, and the second / is the corresponding null end tag."
  (interactive "p")
  (insert-char ?/ arg)
  (if (> arg 0)
      (let ((oldpos (point))
	    (blinkpos)
	    (level 0))
	(save-excursion
	  (save-restriction
	    (if sgml-slash-distance
		(narrow-to-region (max (point-min)
				       (- (point) sgml-slash-distance))
				  oldpos))
	    (if (and (re-search-backward sgml-start-tag-regex (point-min) t)
		     (eq (match-end 0) (1- oldpos)))
		()
	      (goto-char (1- oldpos))
	      (while (and (not blinkpos)
			  (search-backward "/" (point-min) t))
		(let ((tagend (save-excursion
				(if (re-search-backward sgml-start-tag-regex
							(point-min) t)
				    (match-end 0)
				  nil))))
		  (if (eq tagend (point))
		      (if (eq level 0)
			  (setq blinkpos (point))
			(setq level (1- level)))
		    (setq level (1+ level)))))))
	  (if blinkpos
	      (progn
		(goto-char blinkpos)
		(if (pos-visible-in-window-p)
		    (sit-for 1)
		  (message "Matches %s"
			   (buffer-substring (progn
					       (beginning-of-line)
					       (point))
					     (1+ blinkpos))))))))))

(defun sgml-validate (command)
  "Validate an SGML document.
Runs COMMAND, a shell command, in a separate process asynchronously
with output going to the buffer *compilation*.
You can then use the command \\[next-error] to find the next error message
and move to the line in the SGML document that caused it."
  (interactive
   (list (read-string "Validate command: "
		      (or sgml-saved-validate-command
			  (concat sgml-validate-command
				  " "
				  (let ((name (buffer-file-name)))
				    (and name
					 (file-name-nondirectory name))))))))
  (setq sgml-saved-validate-command command)
  (compile1 command "No more errors"))

--cut-here
Content-Type: message/external-body;
        ACCESS-TYPE=ANON-FTP;
        NAME="sgmls-0.8.tar";
        SITE="ifi.uio.no";
        DIRECTORY="/pub/SGML/SGMLS";
        SIZE=1116160;
        PERMISSION=read-write

Content-Type: application/octet-stream;
        type=tar;
        name="sgmls-0.8.tar"
X-Last-Modified: 19920514010000Z (1992 May 14 01:00:00 GMT)

ifi.uio.no:/pub/SGML/SGMLS/sgmls-0.8.tar
file://ifi.uio.no/pub/SGML/SGMLS/sgmls-0.8.tar
-r--r--r--  1 ftp 1116160 1992 May 14 01:00:00 GMT sgmls-0.8.tar


--cut-here--


From TONYJ@scs.slac.stanford.edu  Tue Nov 17 03:51:09 1992
Return-Path: <TONYJ@scs.slac.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29544; Tue, 17 Nov 92 03:51:09 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13116; Tue, 17 Nov 92 04:04:08 +0100
Date: Mon, 16 Nov 1992 19:03 PDT
From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: MidasWWW - Motif based WWW browser now available.
To: www-talk@nxoc01.cern.ch
Message-Id: <6A3AA851802028DA@SCS.SLAC.STANFORD.EDU>
X-Envelope-To: www-talk@nxoc01.CERN.CH
X-Vms-To: in%"www-talk@nxoc01.CERN.CH"
X-Vms-Cc: TONYJ

The first public release of MidasWWW - A Motif/X based WWW browser -  is now 
available. This browser has been in use at SLAC for a couple of months. It 
features:

  1) Multifont hypertext display
  2) Extensive online HELP
  3) Source code viewer
  4) Motif Style Guide compatibilty
  5) Runs under UNIX and VMS

Future versions will hopefully also support graphics and allow editing of 
HTML text. If you try it please let me know what you think :-)

It is currently available from 

freehep.scri.fsu.edu (in freehep/networking_news_email/midaswww as 
midaswww_1.0.tar.Z)

or as a VMS backup file from

SLACVX::DISK$SLD_FAC0:[EXPORT]MIDASWWW_1_0.BCK

Installation instructions are in the README file included.

Tony Johnson (Tony_Johnson@slac.stanford.edu)

From K.Hoadley@directory.rl.ac.uk  Tue Nov 17 09:26:33 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00830; Tue, 17 Nov 92 09:26:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29801; Tue, 17 Nov 92 09:39:30 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <07636-0@directory.rl.ac.uk>; Tue, 17 Nov 1992 08:28:08 +0000
Date: Mon, 16 Nov 1992 15:13:24 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Sender: K.Hoadley@directory.rl.ac.uk
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: RE: ISINDEX on documents
To: timbl@www3.cern.ch
Cc: www-talk@nxoc01.cern.ch
Message-Id: <Ximap.721989487.7590.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

From Tim Berners-Lee
>Every seach needs to search SOMETHING.  Like it has to search a particular

Of course. But searches are based upon the document the user was reading
when they initiated the search. Dropping the ISINDEX tag simply allows
searchs STARTING at any document - ie. all documents have the ISINDEX tag.

Perhaps what I dislike is that ISINDEX is a boolean - either you have it
or you don't. Instead what I (think !) I want is:
    To the end user everything is searchable.
    Simple user agents can defer as much as possible to the server:
        ie I just pass a search string to the server and let it sort
        everything out.
    Sophisticated user agents can check a documents class to determine
    what sort of searching makes sense, then can frame a "sensible"
    set of queries.
--> ie no specific ISINDEX tagging. Instead merely tag with the class,
and give the user agent freedom to decide whether or not it wishes to use
the information it can derive from the class.

What I think I am going to implement (within the current WWW framework) is
an extension to the httpd configuration file that maps documents names
to search method.ie as well as
      map /* /usr/local/lib/WWW/*
I have:
      search /* wais <some parameters>
so that searches initiated from a particular document or zone of the
document space can be searched by a particular method. This gives me
the ability for do such things as sectional indices and multiple
search methods within a single server.

>> Instead of the ISINDEX tag, I think we need an INPUT tag. ISINDEX is quite

>This is the tip of the iceberg.I think the onlywy to do it generally is (see
>my previous message) to have typed queries, and generic editors for them.
>The case above would become something like
><ISINDEX TYPE="iana:/www/classes/query/personalinfo">
>The type would also be retrievable like a document, and if you had a generic
>query language language, you would get back a description of the query language
>supported. 
I agree this is the tip of the iceberg.
The point I was trying to make is that smart documents are conceptually
very different from searchable documents, and thus there should be a way 
of implementing smart docs without overloading ISINDEX.
I'm not sure about keeping this in document class. How useful is a class
that only has one instance ? (assuming that forms are generally one offs)
I'm inclined to prefer an in-line representation: just as I can currently
mark a point where text should be highlighted within a document, so I 
should be able to mark a point where text should be inputted.

Kevin Hoadley, Rutherford Appleton Lab, khoadley@ib.rl.ac.uk

From timbl@www3.cern.ch  Tue Nov 17 09:36:22 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00930; Tue, 17 Nov 92 09:36:22 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00645; Tue, 17 Nov 92 09:49:11 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02857; Tue, 17 Nov 92 09:44:20 +0100
Date: Tue, 17 Nov 92 09:44:20 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211170844.AA02857@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: 3D graphics?
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>  Date: Mon, 16 Nov 92 13:21:52 -0800
>  From: marca@ncsa.uiuc.edu (Marc Andreessen)
>  

>  Hi, I've been browsing through www and associated libraries and
>  clients... seems to be very impressive.  Do you know of any 3D clients
>  (e.g. Silicon Graphics-based) under development anywhere yet?
>  

>  Marc

Can't say I do, but I mail this to the list in case someone is working on it  
quietly.  


When we get this famous format negotiation out then you will be able to launch  
other applications from the WWW client to handle strange new things.

>  

>  --
>  Marc Andreessen
>  Software Development Group
>  National Center for Supercomputing Applications
>  marca@ncsa.uiuc.edu
>  



From timbl@www3.cern.ch  Tue Nov 17 09:43:04 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01023; Tue, 17 Nov 92 09:43:04 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01696; Tue, 17 Nov 92 09:54:57 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02864; Tue, 17 Nov 92 09:49:25 +0100
Date: Tue, 17 Nov 92 09:49:25 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211170849.AA02864@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Re: html & emacs
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  Date: Mon, 16 Nov 92 20:21:23 -0800
>  From: marca@ncsa.uiuc.edu (Marc Andreessen)
>  

>  

>  Anyone written code to construct HTML files in Emacs?  I'm hacking
>  something up; let me know if you're interested....

	There has been a lot of enquiries for an emacs HTML editor,
	but I don't know anyone has done it.
	I am sure anything you do will be really appreciated.
	Whenever you have something, (and basic documentation on it),
	mail it to the list and I'll put it in the archive.
	
	BTW -- There is a server with Gnu TexInfo material
	converted into hypertext at http://ftp.cwi.nl/pub/www/default.html
	
	Tim
	
>  Marc
>  

>  --
>  Marc Andreessen
>  Software Development Group
>  National Center for Supercomputing Applications
>  marca@ncsa.uiuc.edu
>  



From connolly@pixel.convex.com  Tue Nov 17 15:41:00 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02789; Tue, 17 Nov 92 15:41:00 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA04380; Tue, 17 Nov 92 15:54:00 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA07993; Tue, 17 Nov 92 08:53:09 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA07331; Tue, 17 Nov 92 08:53:07 -0600
Message-Id: <9211171453.AA07331@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: www-talk@nxoc01.cern.ch
Subject: SGML Cop backs off
        [was Re: proposed registration of type 'text/html' for MIME ]
In-Reply-To: Your message of "Tue, 10 Nov 92 15:13:07 EST."
             <m0mp1xh-00009MC@garnet.msen.com>
Date: Tue, 17 Nov 92 08:53:07 CST
From: Dan Connolly <connolly@pixel.convex.com>

I've reconsidered my position on the "framing tags" in HTML after
a more careful consideration of the SGML standard, and after
receiving the O'Reilly/HaL DocBook materials and the MidasWWW
browser.
 
To refresh your memory...
 
>     Currently HTML documents are transmitted without the normal SGML framing
>     tags, but if these are included parsers will ignore them.
>
>I don't know what "the normal SGML framing tags" are. An SGML document
>has three parts: the SGML declaration, the prologue, and the instance.
>It is common in SGML applications to use an implied SGML declaration
>and include the prologue by reference (kinda like an #include
>directive in C.) but without these "framing tags," it's just not an
>SGML document.
 
The SGML standard is big on the distinction between Entities and
everything else; that is, the physical breakup of an SGML document
into storage units such as files, directories, MIME body parts,
collectively "entities" is pretty much arbitrary (you can't break
<TITLE> between <TI and TLE>,, but other than that,
it's pretty much fair game.)
 
So it appears that it's not necessary or even wise to model the HTML
data format as an SGML document entity, but rather an SGML text
entity.  That is, the way to validate/parse an HTML document is not to
sick the parser on the text/html body part itself, but on a document
consisting of two entities: the HTML DTD entity, and the text/html
body part.
 
If we were talking about a text/c-program content type, what I
was suggesting would be like putting the line:
 
#include <stdlib.h>
 
at the top of every text/c-program body part. What I'm suggesting
now is like assuming every text/c-program gets stdlib.h prepended
before compiling.
 
This makes an assumption that text/html data has this HTML DTD
entity in front of it all the time, but that assumption has always
been there.
 
Besides, forcing text/html parser to grok SGML document entities
creates some sticky issues -- we'd have to limit the prologue
to the simple <!DOCTYPE HTML SYSTEM>, and that's not really legal.
You're supposed to be able to do things like:
 
<!DOCTYPE HTML SYSTEM [
<!ENTITY smiley ":-)"> <!-- add my own "macro" -->
]>
<HTML><TITLE>The history of the smiley: &smiley;</TITLE>
...
 
If we adopt this change of perspective, we should make it clear
in the HTML specification that for the purposes of SGML, a text/html
body part is not an SGML document entity, but an SGML text
entity. The html.dtd entity and the text/html body part text entity
comprise an SGML document. I need to update html.dtd, fix-html.pl,
and the www_and_frame materials to reflect this change of
perspective.
 
By the way: this change makes it more staightforward to use an
SGML declaration other than the default, e.g. to increase NAMELEN
to allow tags larger than 8 characters. Should we do that while
we're at it?
 
Dan
 
p.s. Check out the MidasWWW browser. It's long overdue in the WWW
project, but it's worth the wait!

From mcclanah@dlgeo.cr.usgs.gov  Tue Nov 17 17:32:59 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03557; Tue, 17 Nov 92 17:32:59 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16646; Tue, 17 Nov 92 17:45:50 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA22181; Tue, 17 Nov 92 10:42:50 CST
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA05696; Tue, 17 Nov 1992 10:45:38 -0600
Date: Tue, 17 Nov 1992 10:45:38 -0600
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9211171645.AA05696@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: Midas


I just downloaded Midas, compiled it and have played with it all
morning.  It is really nice and is a definite step forward in
the WWW world.  I appreciated it partly because it is done in Motif,
which is what our project is using and it will be a lot easier
to possibly integrate something already written in motif into our
project.

Keep up the good work Tony.

Pat McClanahan

From putz@parc.xerox.com  Tue Nov 17 21:01:51 1992
Return-Path: <putz@parc.xerox.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05007; Tue, 17 Nov 92 21:01:51 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07223; Tue, 17 Nov 92 21:14:54 +0100
Received: from spoggles.parc.xerox.com ([13.2.16.98]) by alpha.xerox.com with SMTP id <12249>; Tue, 17 Nov 1992 12:13:34 PST
Received: by spoggles.parc.xerox.com id <58401>; Tue, 17 Nov 1992 12:13:23 -0800
Date: 	Tue, 17 Nov 1992 12:13:13 PST
Sender: Steve Putz <putz@parc.xerox.com>
From: Putz.parc@xerox.com
Subject: RE: ISINDEX on documents
In-Reply-To: <Ximap.721989487.7590.khoadley@danton>
To: K.Hoadley@directory.rl.ac.uk
Cc: www-talk@nxoc01.cern.ch
Message-Id: <92Nov17.121323pst.58401@spoggles.parc.xerox.com>

I like the idea of your suggested INPUT tag.  It seems like a logical extension of the current protocol, and I can think of many uses for it, including form-based queries and maybe even a server-based Hypertext editor running on a very simple generic client.

Steve Putz
Xerox PARC

From marca@wintermute.ncsa.uiuc.edu  Wed Nov 18 02:11:38 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06574; Wed, 18 Nov 92 02:11:38 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29817; Wed, 18 Nov 92 02:24:36 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA05259
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 17 Nov 92 19:23:48 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA05780; Tue, 17 Nov 92 19:24:59 -0800
Date: Tue, 17 Nov 92 19:24:59 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211180324.AA05780@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: html-mode.el

OK, here's a first pass at an html-mode for Emacs.  Comments, bug
reports, and enhancements are welcome; the latest version will always
be on ftp.ncsa.uiuc.edu in /outgoing/marca as html-mode.el.

(Somebody already sent me an smgl-mode.el, so I expect I'll add
features from that pretty quickly.)

Enjoy,

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


;;; --------------------------------------------------------------------------
;;; HTML mode, based on text mode.
;;; Copyright (C) 1985 Free Software Foundation, Inc.
;;; Copyright (C) 1992 National Center for Supercomputing Applications.
;;; NCSA modifications by Marc Andreessen (marca@ncsa.uiuc.edu).
;;;
;;; This program is free software; you can redistribute it and/or
;;; modify it under the terms of the GNU General Public License as
;;; published by the Free Software Foundation; either version 1, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;; General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with GNU Emacs; see the file COPYING.  If not, write to the
;;; Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
;;;
;;; -------------------------------- CONTENTS --------------------------------
;;;
;;; html-mode: Major mode for editing HTML hypertext documents.
;;; $Revision: 1.11 $
;;; $Date: 1992/11/18 03:20:43 $
;;;
;;; Canonical list of features:
;;;   See below.
;;;
;;; ------------------------------ INSTRUCTIONS ------------------------------
;;;
;;; Load html-mode.el before editing HTML documents.  html-mode will
;;; detect the ``.html'' suffix and activate itself appropriately.
;;;
;;; You are assumed to be at least somewhat familiar with HTML format.
;;; If you aren't, read about it first (see below).
;;;
;;; Here are key sequences and corresponding commands (in order of
;;; their key sequences):
;;;
;;; C-c a         html-add-address
;;;   Open an address element.
;;;
;;; C-c d         html-add-definition-list
;;;   Open a definition list.  The initial entry is created for you.
;;;   To create subsequent entries, use 'C-c e'.
;;;
;;; C-c e         html-add-definition-entry
;;;   Add a new definition entry in a definition list.  You are
;;;   assumed to be inside a definition list (specifically, at the end
;;;   of another definition entry).
;;;
;;; C-c h         html-add-header
;;;   Add a header.  You are prompted for size (1 is biggest, 2 is
;;;   next biggest) and header contents.
;;;
;;; C-c i         html-add-list-or-menu-item
;;;   Add a new list or menu item in a list or menu.  You are assumed
;;;   to be inside a list or menu (specifically, at the end of another
;;;   item).
;;;
;;; C-c l         html-add-normal-link
;;;   Add a link.  You will be prompted for the link (any string;
;;;   e.g., http://foo.bar/argh/blagh).  The cursor will be left where
;;;   you can type the text that will represent the link in the
;;;   document.
;;;
;;; C-c m         html-add-menu
;;;   Open a menu.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c p         html-add-paragraph-separator
;;;   Use this command at the end of each paragraph.
;;;
;;; C-c s         html-add-list
;;;   Open a list.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c t         html-add-title
;;;   Add a title to the document.  You will be prompted for the
;;;   contents of the title.  If a title already exists at the very
;;;   top of the document, the existing contents will be replaced.
;;;
;;; C-c x         html-add-plaintext
;;;   Add plaintext.  The cursor will be positioned where you can type
;;;   plaintext (or insert another file, or whatever).
;;;
;;; < > &
;;;   These are overridden to output &lt;, &gt;, and &amp;
;;;   respectively.  The real characters <, >, and & can be entered
;;;   into the text either by prepending 'C-c' to the character or by
;;;   using the Emacs quoted-insert (C-q) command.
;;;
;;; C-c <, C-c >, C-c &
;;;   See '< > &' above.
;;;
;;; ---------------------------- ADDITIONAL NOTES ----------------------------
;;;
;;; If you are running Epoch or Lucid Emacs, highlighting will be used
;;; to deemphasize HTML message elements as they are created.  You can
;;; turn this off; see the source code.
;;;
;;; -------------------------------- GOTCHAS ---------------------------------
;;;
;;; HTML documents can be tricky.  html-mode is not smart enough to
;;; enforce correctness or sanity, so you have to do that yourself.
;;;
;;; In particular, html-mode is smart enough to generate unique
;;; numeric NAME id's for all links that were (1) created via an
;;; html-mode command or (2) present in the file when it was loaded.
;;; Any other links (e.g. links added via Emacs cut and paste) may
;;; have ID's that conflict with ID's html-mode generates.  You must
;;; watch for this and fix it when appropriate; otherwise, your
;;; hypertext document will not work correctly.
;;;
;;; ------------------------- WHAT HTML-MODE IS NOT --------------------------
;;;
;;; html-mode is not a mode for *browsing* HTML documents.  In
;;; particular, html-mode provides no hypertext capabilities.  There
;;; is a clear need for an HTML browser; if you write one, let me
;;; know.
;;;
;;; ------------------------------ WHAT HTML IS ------------------------------
;;;
;;; HTML (HyperText Markup Language) is a format for hypertext
;;; documents.  For more information on HTML, telnet to info.cern.ch.
;;;
;;; --------------------------------------------------------------------------
;;; LCD Archive Entry:
;;; html-mode|Marc Andreessen|marca@ncsa.uiuc.edu|
;;; Major mode for editing HTML hypertext files.|
;;; $Date: 1992/11/18 03:20:43 $|$Revision: 1.11 $|~/modes/html-mode.el.Z|
;;; --------------------------------------------------------------------------

(provide 'html-mode)

;;; ------------------------------- variables --------------------------------

(defvar html-use-highlighting t
  "*Flag to use highlighting for HTML directives in Epoch or Lucid Emacs; 
if non-NIL, highlighting will be used.")

(defvar html-deemphasize-color "grey80"
  "*Color for de-highlighting HTML directives in Epoch or Lucid Emacs.")

(defvar html-emphasize-color "yellow"
  "*Color for highlighting HTML something-or-others in Epoch or Lucid Emacs.")

;;; --------------------------------- setup ----------------------------------

(defvar html-mode-syntax-table nil
  "Syntax table used while in html mode.")

(defvar html-mode-abbrev-table nil
  "Abbrev table used while in html mode.")
(define-abbrev-table 'html-mode-abbrev-table ())

(if html-mode-syntax-table
    ()
  (setq html-mode-syntax-table (make-syntax-table))
  (modify-syntax-entry ?\" ".   " html-mode-syntax-table)
  (modify-syntax-entry ?\\ ".   " html-mode-syntax-table)
  (modify-syntax-entry ?' "w   " html-mode-syntax-table))

(defvar html-mode-map nil "")
(if html-mode-map
    ()
  (setq html-mode-map (make-sparse-keymap))
  (define-key html-mode-map "\t" 'tab-to-tab-stop)
  (define-key html-mode-map "\C-ca" 'html-add-address)
  (define-key html-mode-map "\C-cd" 'html-add-definition-list)
  (define-key html-mode-map "\C-ce" 'html-add-definition-entry)
  (define-key html-mode-map "\C-ch" 'html-add-header)
  (define-key html-mode-map "\C-ci" 'html-add-list-or-menu-item)
  (define-key html-mode-map "\C-cl" 'html-add-normal-link)
  (define-key html-mode-map "\C-cm" 'html-add-menu)
  (define-key html-mode-map "\C-cp" 'html-add-paragraph-separator)
  (define-key html-mode-map "\C-cs" 'html-add-list)
  (define-key html-mode-map "\C-ct" 'html-add-title)
  (define-key html-mode-map "\C-cx" 'html-add-plaintext)
  (define-key html-mode-map "<" 'html-less-than)
  (define-key html-mode-map ">" 'html-greater-than)
  (define-key html-mode-map "&" 'html-ampersand)
  (define-key html-mode-map "\C-c<" 'html-real-less-than)
  (define-key html-mode-map "\C-c>" 'html-real-greater-than)
  (define-key html-mode-map "\C-c&" 'html-real-ampersand)
)

;;; --------------------------- buffer-local vars ----------------------------

(defvar html-link-counter-default 0)
(defvar html-link-counter nil)
(make-variable-buffer-local 'html-link-counter)
(setq-default html-link-counter html-link-counter-default)

;;; ------------------------------ highlighting ------------------------------

(defvar html-running-lemacs (string-match "Lucid" emacs-version)
  "Non-nil if running Lucid Emacs.")

(defvar html-running-epoch (boundp 'epoch::version)
  "Non-nil if running Epoch.")

(if (and html-running-epoch html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-style))
      (set-style-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-style))
      (set-style-foreground html-emphasize-style html-emphasize-color)))

(if (and html-running-lemacs html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-face 'html-deemphasize-face))
      (set-face-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-face 'html-emphasize-face))
      (set-face-foreground html-emphasize-style html-emphasize-color)))

(if html-use-highlighting
    (progn
      (if html-running-lemacs
          (defun html-add-zone (start end style)
            "Add a Lucid Emacs extent from START to END with STYLE."
            (let ((extent (make-extent start end)))
              (set-extent-face extent style)
              (set-extent-data extent 'html-mode))))
      (if html-running-epoch
          (defun html-add-zone (start end style)
            "Add an Epoch zone from START to END with STYLE."
            (let ((zone (add-zone start end style)))
              (epoch::set-zone-data zone 'html-mode))))))

(defun html-maybe-deemphasize-region (start end)
  "Maybe deemphasize a region of text.  Region is from START to END."
  (and (or html-running-epoch html-running-lemacs)
       html-use-highlighting
       (html-add-zone start end html-deemphasize-style)))

;;; ----------------------------- link commands ------------------------------

(defun html-add-link (link-object)
  "Add a link."
  (let ((start (point)))
    (setq html-link-counter (1+ html-link-counter))
    (insert "<A NAME=" (format "%d" html-link-counter) 
            " HREF=" link-object ">")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "</A>")
    (push-mark)
    (forward-char -4)
    (html-maybe-deemphasize-region (1+ (point)) (+ (point) 4))))

(defun html-add-normal-link (link)
  "Make a link.  There is no completion of any kind yet."
  (interactive "sLink to: ")
  (html-add-link link))

;;; --------------------------- document elements ----------------------------

(defun html-add-title (title)
  "Add or modify a title."
  (interactive "sTitle: ")
  (save-excursion
    (goto-char (point-min))
    (if (and (looking-at "<TITLE>")
             (save-excursion
               (forward-char 7)
               (re-search-forward "[^<]*" 
                                  (save-excursion (end-of-line) (point)) 
                                  t)))
        ;; Plop the new title in its place.
        (replace-match title t)
      (insert "<TITLE>")
      (html-maybe-deemphasize-region (point-min) (1- (point)))
      (insert title)
      (insert "</TITLE>")
      (html-maybe-deemphasize-region (- (point) 7) (point))
      (insert "\n"))))

(defun html-add-header (size header)
  "Add a header."
  (interactive "sSize (1 or 2): \nsHeader: ")
  (let ((start (point)))
    (insert "<H" size ">")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert header)
    (setq start (point))
    (insert "</H" size ">\n")
    (html-maybe-deemphasize-region (1+ start) (1- (point)))))

(defun html-add-paragraph-separator ()
  "Add a paragraph separator."
  (interactive)
  (let ((start (point)))
    (insert "  <P>\n\n")
    (html-maybe-deemphasize-region (+ start 2) (- (point) 2))))

(defun html-add-definition-list ()
  "Add a definition list."
  (interactive)
  (let ((start (point)))
    (insert "<DL>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<DT> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n<DD> \n")
      (setq start (point))
      (insert "</DL>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-definition-entry ()
  "Add a definition entry.  Assume we're at the end of a previous
entry."
  (interactive)
  (let ((start (point)))
    (insert "\n<DT> ")
    (save-excursion
      (insert "\n<DD> "))))

(defun html-add-plaintext ()
  "Add plaintext."
  (interactive)
  (let ((start (point)))
    (insert "<XMP>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</XMP>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; This doesn't work.
      (push-mark))))

(defun html-add-list-internal (type)
  (let ((start (point)))
    (insert "<" type ">\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<LI> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</" type ">\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-list ()
  "Add a list."
  (interactive)
  (html-add-list-internal "UL"))

;; Is this correct?  Viola doesn't seem to do anything with it.
(defun html-add-menu ()
  "Add a menu."
  (interactive)
  (html-add-list-internal "MENU"))

(defun html-add-list-or-menu-item ()
  "Add a list or menu item.  Assume we're at the end of the
last item."
  (interactive)
  (let ((start (point)))
    (insert "\n<LI> ")))

(defun html-add-address ()
  "Add an address."
  (interactive)
  (let ((start (point)))
    (insert "<ADDRESS> ")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (setq start (point))
      (insert "  </ADDRESS>\n")
      (html-maybe-deemphasize-region (+ start 2) (1- (point)))
      ;; Obviously this doesn't work here, so I don't
      ;; see why you're being an idiot and still doing it
      ;; like this....
      (push-mark))))

(defun html-less-than ()
  (interactive)
  (insert "&lt;"))

(defun html-greater-than ()
  (interactive)
  (insert "&gt;"))

(defun html-ampersand ()
  (interactive)
  (insert "&amp;"))

(defun html-real-less-than ()
  (interactive)
  (insert "<"))

(defun html-real-greater-than ()
  (interactive)
  (insert ">"))

(defun html-real-ampersand ()
  (interactive)
  (insert "&"))

;;; ------------------------------- html-mode --------------------------------

(defun html-mode ()
  "Major mode for editing HTML hypertext documents.  Special commands:\\{html-mode-map}
Turning on html-mode calls the value of the variable html-mode-hook,
if that value is non-nil."
  (interactive)
  (kill-all-local-variables)
  (use-local-map html-mode-map)
  (setq mode-name "Html")
  (setq major-mode 'html-mode)
  (setq local-abbrev-table html-mode-abbrev-table)
  (set-syntax-table html-mode-syntax-table)
  (run-hooks 'html-mode-hook))

;;; ------------------------------- our hooks --------------------------------

(defun html-find-file-hook ()
  "Hook called from find-file-hooks.  Set html-link-counter to 
the highest link value in the document (the next link created will
be one greater than that) to insure unique (numeric) link ID's."
  (save-excursion
    (goto-char (point-min))
    (while (re-search-forward "<A NAME=" (point-max) t)
      (let ((subst (buffer-substring (match-end 0)
                                     (save-excursion
                                       (re-search-forward " " (point-max) t)
                                       (match-beginning 0)))))
        (and subst
             (> (string-to-int subst) html-link-counter)
             (setq html-link-counter (string-to-int subst)))))))

;;; ------------------------------- hook setup -------------------------------

;; Author: Daniel LaLiberte (liberte@cs.uiuc.edu).
(defun html-postpend-unique-hook (hook-var hook-function)
  "Postpend HOOK-VAR with HOOK-FUNCTION, if it is not already an element.
hook-var's value may be a single function or a list of functions."
  (if (boundp hook-var)
      (let ((value (symbol-value hook-var)))
        (if (and (listp value) (not (eq (car value) 'lambda)))
            (and (not (memq hook-function value))
                 (set hook-var (append value (list hook-function))))
          (and (not (eq hook-function value))
               (set hook-var (append value (list hook-function))))))
    (set hook-var (list hook-function))))

(postpend-unique-hook 'find-file-hooks 'html-find-file-hook)

;;; ------------------------------ final setup -------------------------------

(or (assoc "\\.html$" auto-mode-alist)
    (setq auto-mode-alist (cons '("\\.html$" . html-mode) auto-mode-alist)))


From marca@wintermute.ncsa.uiuc.edu  Wed Nov 18 02:16:30 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06596; Wed, 18 Nov 92 02:16:30 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00960; Wed, 18 Nov 92 02:29:29 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA05417
  (5.65a/IDA-1.4.2 for timbl@nxoc01.cern.ch); Tue, 17 Nov 92 19:28:42 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA05841; Tue, 17 Nov 92 19:29:52 -0800
Date: Tue, 17 Nov 92 19:29:52 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211180329.AA05841@wintermute.ncsa.uiuc.edu>
To: timbl@nxoc01.cern.ch
Cc: marca@ncsa.uiuc.edu (Marc Andreessen), www-talk@nxoc01.cern.ch
Subject: 3D graphics?
In-Reply-To: <9211170844.AA02857@www3.cern.ch>
References: <9211170844.AA02857@www3.cern.ch>

Tim Berners-Lee writes:
> When we get this famous format negotiation out then you will be able
> to launch other applications from the WWW client to handle strange
> new things.

A couple more questions, since I'm starting the game late...

(1) Has anyone done work wrt adding real data (in whatever format) to
    www?

(2) Is there a consensus on supporting MIME in HTML and vice versa?
    If not, what are the objections and what are the alternatives?

Thanks,

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From marca@wintermute.ncsa.uiuc.edu  Wed Nov 18 04:39:33 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07014; Wed, 18 Nov 92 04:39:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01470; Wed, 18 Nov 92 04:52:37 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA10236
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 17 Nov 92 21:51:49 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA06110; Tue, 17 Nov 92 21:52:57 -0800
Date: Tue, 17 Nov 92 21:52:57 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211180552.AA06110@wintermute.ncsa.uiuc.edu>
To: salil@eitech.com (Salil Deshpande)
Cc: www-talk@nxoc01.cern.ch
Subject: Stupid typo #1 in html-mode.el
In-Reply-To: <9211180220.AA09908@eitech.com>
References: <9211180220.AA09908@eitech.com>

Salil Deshpande writes:
> Someone probably told you this already, but
> 
>    (postpend-unique-hook 'find-file-hooks 'html-find-file-hook)
> 
> should be
> 
>    (html-postpend-unique-hook 'find-file-hooks 'html-find-file-hook)

WHOOOOOOOOOOOOOPS!

Thanks,

Marc


From connolly@pixel.convex.com  Wed Nov 18 07:56:06 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07559; Wed, 18 Nov 92 07:56:06 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03449; Wed, 18 Nov 92 08:09:10 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09379; Wed, 18 Nov 92 00:09:40 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA13640; Tue, 17 Nov 92 22:20:45 -0600
Message-Id: <9211180420.AA13640@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: www_and_frame release 0.2
Date: Tue, 17 Nov 92 22:20:45 CST
From: Dan Connolly <connolly@pixel.convex.com>

I just uploaded www_and_frame-0.2.tar.Z to info.cern.ch in
pub/incoming.

Changes:

* HTML files are now treated as text entities and thus don't
require the <!DOCTYPE HTML SYSTEM> "framing tags."

* Quotes and other Frame characters are converted to something
sane

* Named anchors convert nicely.

In general, it's possible to grab the source of a web document,
save it in an .html file, fire up framemaker, edit it, save it
back out, and browse it with www again. (be careful with relative
anchors...)

It's also possible to develop a whole local web of Frame documents
and then save them as HTML and put them on a server (you have to
stick to the HTML tags... can't use just any old frame files). It makes
a nice compliment to the MidasWWW browser.

Have fun!

Dan


From connolly@pixel.convex.com  Wed Nov 18 08:58:59 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07730; Wed, 18 Nov 92 08:58:59 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07574; Wed, 18 Nov 92 09:11:58 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09383; Wed, 18 Nov 92 00:09:44 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA10572; Tue, 17 Nov 92 20:14:31 -0600
Message-Id: <9211180214.AA10572@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: Re: 3D graphics? 
In-Reply-To: Your message of "Tue, 17 Nov 92 19:29:52 PST."
             <9211180329.AA05841@wintermute.ncsa.uiuc.edu> 
Date: Tue, 17 Nov 92 20:14:31 CST
From: Dan Connolly <connolly@pixel.convex.com>


>(1) Has anyone done work wrt adding real data (in whatever format) to
>    www?

No, but I think there's some stuff on gopher and WAIS servers that
you might be able to get at.

>(2) Is there a consensus on supporting MIME in HTML and vice versa?

There's a growing consensus.

The strategy isn't to shoehorn MIME inside HTML, though we are
shoehorning HTML inside MIME, i.e. there will soon be a text/html
MIME content type.

The strategy is to treat the current data format as a special case of
the more general MIME body part scheme.  Currently, www clients expect
text/html or text/plain body parts, and it uses things like filename
suffixes to tell the difference. If you point www at

ftp://ftp.ora.com/pub/davenport/Xhelp/Xhelp_Sept_11.ps

It will gladly fill your screen with unintelligible postscript code.

The strategy is that WWW clients will be able to negotiate various
formats with servers, and the client will know what format the
data is in before it comes over the wire. The other MIME types
will be alternatives to text/html, not enclosures within it.

For protocols like FTP, we need to have type information in
the links, like:

<a HREF="ftp://info.cern.ch/pub/www/NextBrowser.tiff"
	type="image/x-tiff">The NeXT browser in action</a>

the the client would know better than to try to display the
contents of the tiff file in a text window. The easiest thing
to do is to pass it off to

% metamail -b -c "image/x-tiff" /tmp/www_ftp.4322

and let metamail to the rest.

For WAIS, the type information is in the protocol. For gopher, it
mostly is. For HTTP, the client and the server are supposed to
negotiate the format based on compute resources required for the
conversion, network transmission time, distortion/loss of data,
etc.

That's my two cents, anyway.

Dan


From K.Hoadley@directory.rl.ac.uk  Wed Nov 18 13:28:18 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08640; Wed, 18 Nov 92 13:28:18 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28165; Wed, 18 Nov 92 12:08:54 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <09533-0@directory.rl.ac.uk>; Wed, 18 Nov 1992 10:56:46 +0000
Date: Wed, 18 Nov 1992 10:04:15 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: Smart server or smart client ?
To: www-talk@nxoc01.cern.ch
In-Reply-To: Putz.parc@xerox.com's message of Tue, 17 Nov 1992 12:13:13 PST: <92Nov17.121323pst.58401@spoggles.parc.xerox.com>
Message-Id: <Ximap.722084834.9952.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Steve Putz wrote:
>I like the idea of your suggested INPUT tag.  It seems like a logical
>extension of the current protocol, and I can think of many uses for it,
>including form-based queries and maybe even a server-based Hypertext editor
                                               =============================
>running on a very simple generic client.
>
>Steve Putz
>Xerox PARC
>
>
This raises the question of smart servers vs smart clients.

How much does the client need to know about format conversion ? The client
knows what formats it understands (maybe extensible through a system like
a MIME mailcap), but does it need to know about how to convert between
different formats ? Adding format conversion into the clients will make
them much more complicated, which is usually not a good thing (witness
the success of POP over IMAP in the PC mail market: POP is simple minded,
easy to implement and as a result widespread; IMAP is a rather nice protocol,
fairly powerful, but more difficult to implement (though not THAT difficult).
RESULT: though IMAP is technically far superior to POP, POP is winning
the war.)

Thus I think it would be a good idea to keep the clients simple, shunt
the complexity where possible into the server (it doesnt matter much if
ther are only one or two server implementations; it matters a great deal
however if the clients are only limited to certain Unix boxes).

I think we can learn from the way the DNS works. The are two types of DNS
queries: iterative and recursive. With an iterative query, the client
(resolver) sends a query to one server. From the result it may be referred
to another server, which it then queries and so on until it reaches a 
conclusion. With a recursive query, the resolver (a stub resolver) sends
the initial query (with the RR bit set) to a local server, which then does
all the work. The protocol remains the same in both cases, the actual
procedure of lookup remains the same, they differ only in whether the local
resolver does all the work or simply punts it to a local server.

The best way to support small machines such as PCs, Macs, Amigas etc
within the WWW would seem to me to support the concept of a stub client
that merely throws everything at the server and leaves it to sort out the
mess. When the stub client connects to the server it informs the server
what formats it understands (lists out its wwwcap ?). Compatibility with
existing clients can be maintained in that if a client doesn't inform the
server of the formats it knows, we can asssume a minimum (HTML + plain
text ?).

This can be extended further... consider a site running a firewall,
limiting access to the outside to a few selected hosts (poor misguided
people !). If I'm sitting on a PC and I'm reading a document with a link
to another document outside my site, that link is useless to me because
I cant access the outside world. On the other hand a central site server
might have external access, thus if I can punt the query to the server
and say "you go fetch this for me" everything is hunkydory. The underlying
protocol doesn't change, all that happens is that I can ask any server
to get me the answer, rather than just the right one.

Again look at the DNS. The great advantage of stub resolver is that they
lead to a centralised cache at the local server. If we punt www queries
to a local server we get the same: the ability to build a cache of the
information regularly used by the locals (I'm writing from a research lab
with a heavy slant towards high energy physics - thus there is likely
to a slant in the documents that users around here want; cacheing this
working set would be a big win.)
(For this cacheing to work well we'd need to associate a time to live
with each document - again like the DNS).
It should be possible to cache format conversions as well.

Anyway, these are just some ideas, maybe useful maybe not.

Kevin Hoadley, Rutherford Appleton Laboratory, khoadley@ib.rl.ac.uk



From davis@dri.cornell.edu  Wed Nov 18 14:06:19 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08881; Wed, 18 Nov 92 14:06:19 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05803; Wed, 18 Nov 92 14:18:38 +0100
Received: by willow.tc.cornell.edu id AA19290
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Wed, 18 Nov 1992 08:17:00 -0500
Date: Wed, 18 Nov 1992 08:17:00 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199211181317.AA19290@willow.tc.cornell.edu>
To: www-talk@nxoc01.cern.ch
Subject: a Gateway to the U Mich Geography server


Here is a quickly hacked up Gateway from WWW to the University
of Michigan Geography server.  It expects one argument, a 
WWW doc id.  It ignores the "pathname", extracts the search words,
then passes those to the server.  It does NOT parse the data
returned by the server (that is an improvment yet to be done)
but you can understand the output.

To use this, you would need to have an HTTP server running
someplace where you can attach this gateway.  I can provide
the very simple HTTP server I use here, but this subject
is already documented in the WWW online documentation.

Best wishes

#!/usr/local/bin/perl
# Gateway from WWW to the Geography server at U Michigan
# Copyright 1992 Xerox.  All rights reserved.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# Jim Davis, Nov 17 1992

# To do:
# 1) Parse the returned info so as to display more neatly.
#    (See documentation at end of file its format.)
# 2) Handle case where multiple places match supplied name
# 3) Handle case where no place matches supplied name.

# This expects one argument, a document ID.  The search keywords
# are sent to the Geography server, the "pathname" is ignored.
# e.g. /geography/ignored/whocares?ithaca,ny => ithaca,ny
# As an extra bonus feature, if the first arg has no question marks
# then the entire arg line is passed to the server.  This is
# convenient when you call this from the shell rather than from WWW.

if ($#ARGV == -1) {
 die "Usage: geography-gateway [WWW-DOCUMENT-ID | location]\
An example WWW document id is /geography?washington,dc
If calling from shell, omit the /geography? part.\nStopped";}

$usage =  "<ISINDEX>\n\
<TITLE>Geography Server</TITLE>\n\
<h2>Type geographic name in Index.</h2>\n\
";

# for debugging
# print "<LISTING>\n";
# print "ARGV =  $#ARGV\n";
# for ($i = 0; $i < $#ARGV+1; $i++) {
#   print "Arg $i is $ARGV[$i]\n";}
# print "</LISTING>";
# exit;


@parts=split('/', $ARGV[0]);  # separate pathname from keywords.
$last = $parts[$#parts];      # the last path component has keys
$i=index($last,"?");          # are there any keywords in there?
if ($i == -1)
   {@keywords = @ARGV;}          # none, probably called from shell
 else
   {@keywords=split('\?', substr($last,$i));
    $parts[$#parts] = substr($last,0,$i);}


# if no keywords, tell user how to type them.

if ($#keywords == -1) {
  print $usage;
  exit;
  };


# debugging
# print "<LISTING>\n
# parts are @parts\n
# keywords are @keywords\n
# </LISTING>\n";
# exit;

# otherwise contact the server

$host = "martini.eecs.umich.edu";
$port = 3000;

$sockaddr = 'S n a4 x8';         # packing format

$hostname = `hostname`;          # where I am calling from
chop($hostname);                 # get rid of trailing CR
($name, $aliases, $type, $len, $myaddr) = gethostbyname($hostname);
$here = pack($sockaddr, 2, 0, $myaddr);

($name, $aliases, $type, $len, $destaddr) = gethostbyname($host);

#print ("Name = ", $name ," " addr = ", $destaddr, "\n");
if ($destaddr eq "") {die "No such host: $host. Stopped";}

$there= pack($sockaddr, 2, $port, $destaddr);

($name, $aliases, $protocol) = getprotobyname('tcp');
socket($S, 2, 1, $protocol) || die "socket: $!";
bind ($S, $here) || die "bind: $!";
connect ($S, $there) || die "connect: $!";


select($S);
$| = 1;           # force output
print (@keywords ,"\n");
print "quit\n";
select(STDOUT);
print "<LISTING>\n";
while (<$S>) { print;}
print "</LISTING>\n";
select($S);
exit;

# This is the format of info returned by the geo server.
# in case you decide you want to parse it.

# 0 <city name>
# 1 <county FIPS code> <county name>
# 2 <state/province abbreviation> <state/province name>
# 3 <nation abbreviation> <nation name>
# A <telephone area code>
# E <elevation in feet above mean sea level>
# F <feature code> <feature name>
# L <latitude DD MM SS X> <longitude DDD MM SS X>
# P <1980 census population>
# R <remark>
# T <time zone>
# Z <postal ("ZIP") code>

# Example
# 0 Ithaca
# 1 36109 Tompkins
# 2 NY New York
# 3 US United States
# R county seat
# F 45 Populated place
# L 42 26 26 N  76 29 49 W
# P 28732
# E 814
# Z 14850 14851 14852 14853 14882
# 
# .

From libert@citi.umich.edu  Wed Nov 18 20:46:02 1992
Return-Path: <libert@citi.umich.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10527; Wed, 18 Nov 92 20:46:02 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA26525; Wed, 18 Nov 92 20:58:35 +0100
Received: from citi.umich.edu by mcsun.EU.net with SMTP
	id AA18211 (5.65b/CWI-2.187); Wed, 18 Nov 1992 20:58:20 +0100
Message-Id: <9211181958.AA18211@mcsun.EU.net>
From: Tom Libert <libert@citi.umich.edu>
To: davis@dri.cornell.edu
Cc: www-talk@nxoc01.cern.ch
Date: Wed, 18 Nov 92 14:57:21 EST
Subject: Re: a Gateway to the U Mich Geography server

Saw your recent posting regarding a gateway between WWW and my Geographic
Name Server.  Nice!  Something on my TODO list (well down,
unfortunately).  I want to let you know that some significant
enhancements are underway, and the server protocol will very likely be
changing within the next few months.  I'll be providing significantly
more data, and will provide global coverage.  I'll try to stay in
touch with you regarding these changes.  In any case, feel free to
contact me directly if you have any questions or suggestions about
the service.

Tom Libert
Center for Information Technology Integration
University of Michigan

From marca@wintermute.ncsa.uiuc.edu  Thu Nov 19 01:04:10 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11871; Thu, 19 Nov 92 01:04:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA03808; Thu, 19 Nov 92 01:16:39 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA04329
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 18 Nov 92 18:16:22 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA08693; Wed, 18 Nov 92 18:17:33 -0800
Date: Wed, 18 Nov 92 18:17:33 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211190217.AA08693@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: hangs/multiple servers

More questions.....

I've noticed occasionally that trying to contact an http server that
seems to be down (at least with ViolaWWW & MidasWWW) will result in
hangs (or very very long pauses).  Shouldn't a 30-second timeout or
something similar be in effect at all times?

Also, is there any way to specify backup servers?  Does anyone else
think this would be useful?

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From rik@daneel.rdt.monash.edu.au  Thu Nov 19 01:28:45 1992
Return-Path: <rik@daneel.rdt.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12004; Thu, 19 Nov 92 01:28:45 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA08822; Thu, 19 Nov 92 01:41:09 +0100
Received: by daneel.rdt.monash.edu.au (5.57/Ultrix3.0-C)
	id AA26900; Thu, 19 Nov 92 10:40:43 +1000
Message-Id: <9211190040.AA26900@daneel.rdt.monash.edu.au>
To: www-talk@nxoc01.cern.ch
Subject: Re: hangs/multiple servers 
In-Reply-To: Your message of "18 Nov 92 18:17:33 PST."
             <9211190217.AA08693@wintermute.ncsa.uiuc.edu> 
Date: Thu, 19 Nov 92 11:40:42 -1000
From: Rik Harris <rik@daneel.rdt.monash.edu.au>
X-Mts: smtp

Marc Andreessen wrote:

> Also, is there any way to specify backup servers?  Does anyone else
> think this would be useful?

After the problems with info.cern.ch, I'd say yes, it would be useful.
The main problems I see:

a) If the backup is done in the document, the HTML format would need
to change. I'll leave this issue to others.

b) Keeping the data up-to-date, and consistent could be difficult.  For
example, all documents must be relatively addressed to be able to move
them between systems.  This is not always possible, for example, if
different ``schemes'' are used, or if different ports are used on the
same machine, then I believe the whole machine name needs to be
respecified.  This problem could be partially solved by doing a
``search-and-replace'' on all addresses as the document is moved.

One possible way to implement backups is to have the client do it (makes
the client too clever?).  The client could have a list of hosts, and for
each one, have a list of backup servers, to try if the main server is
down.  The problem with this is that the list is much more difficult
to maintain, if everyone needs a copy, and only the clients that have
implemented this would benefit.

Just some random thoughts,
rik.
--
Rik Harris - rik.harris@fcit.monash.edu.au         || Systems Programmer
+61 3 571-2895 (AH & ans.mach) +61 3 573-2679 (BH) || and Administrator
Faculty of Computing and Information Technology,   || Vic. Institute of
Caulfield Campus, Monash University, Australia     || Forensic Pathology

From TONYJ@scs.slac.stanford.edu  Thu Nov 19 03:39:27 1992
Return-Path: <TONYJ@scs.slac.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12609; Thu, 19 Nov 92 03:39:27 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07965; Thu, 19 Nov 92 03:51:55 +0100
Date: Wed, 18 Nov 1992 18:51 PDT
From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: Re: hangs/multiple servers
To: marca@ncsa.uiuc.edu
Cc: www-talk@nxoc01.cern.ch
Message-Id: <FAE954AE90203760@SCS.SLAC.STANFORD.EDU>
X-Envelope-To: www-talk@nxoc01.CERN.CH
X-Vms-To: IN%"marca@ncsa.uiuc.edu"
X-Vms-Cc: TONYJ, in%"www-talk@nxoc01.CERN.CH"

>I've noticed occasionally that trying to contact an http server that
>seems to be down (at least with ViolaWWW & MidasWWW) will result in
>hangs (or very very long pauses).  Shouldn't a 30-second timeout or
>something similar be in effect at all times?

The way I would like MidasWWW to work is that it would try to connect for about 
2 seconds, after which a dialog box would pop up looking something like:

                  ------------------------------------
                  |    Connecting to XXX.XXX.XXX...  |
                  |                                  |
                  |            -----------           | 
                  |            | Abort!  |           |
                  ------------------------------------

Where you click on abort if you get tired of waiting.

Only problem is that I don't know how to achieve this, since the Unix "connect"
routine I use to connect to the remote server is synchronous. If anyone has
an example of a portable way to asnychronously connect over TCPIP I would be
happy to incoportate it. (In fact I don't even know how to set the timeout
period). 

>Also, is there any way to specify backup servers?  Does anyone else
>think this would be useful?

Yes this would be very useful, especially for the "master indexes" such as 
"academic information" at CERN. Probably not so easy to provide though...

Tony

From marca@wintermute.ncsa.uiuc.edu  Thu Nov 19 04:29:11 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12795; Thu, 19 Nov 92 04:29:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20231; Thu, 19 Nov 92 04:41:41 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA11904
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 18 Nov 92 21:41:25 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA09366; Wed, 18 Nov 92 21:42:37 -0800
Date: Wed, 18 Nov 92 21:42:37 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211190542.AA09366@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: html-mode.el update

Following is the latest html-mode -- a few bugs have been fixed, and
some new features added.  If you use this, send me a note; if you have
ideas on how it could specifically be made to be smarter and more
helpful, let me know; if you don't think I should be mailing this to
everyone on www-talk, let me know that too (there was quite a bit of
initial interest in an html mode, so that's why I'm mailing it out
now).

Cheers,
Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu

;;; --------------------------------------------------------------------------
;;; HTML mode, based on text mode.
;;; Copyright (C) 1985 Free Software Foundation, Inc.
;;; Copyright (C) 1992 National Center for Supercomputing Applications.
;;; NCSA modifications by Marc Andreessen (marca@ncsa.uiuc.edu).
;;;
;;; This program is free software; you can redistribute it and/or
;;; modify it under the terms of the GNU General Public License as
;;; published by the Free Software Foundation; either version 1, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;; General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with GNU Emacs; see the file COPYING.  If not, write to the
;;; Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
;;;
;;; -------------------------------- CONTENTS --------------------------------
;;;
;;; html-mode: Major mode for editing HTML hypertext documents.
;;; $Revision: 1.18 $
;;; $Date: 1992/11/19 05:39:25 $
;;;
;;; Canonical list of features:
;;;   See below.
;;;
;;; ------------------------------ INSTRUCTIONS ------------------------------
;;;
;;; Load html-mode.el before editing HTML documents.  html-mode will
;;; detect the ``.html'' suffix and activate itself appropriately.
;;;
;;; You are assumed to be at least somewhat familiar with HTML format.
;;; If you aren't, read about it first (see below).
;;;
;;; Here are key sequences and corresponding commands:
;;;
;;; NORMAL COMMANDS:
;;;
;;; C-c a         html-add-address
;;;   Open an address element.
;;;
;;; C-c d         html-add-definition-list
;;;   Open a definition list.  The initial entry is created for you.
;;;   To create subsequent entries, use 'C-c e'.
;;;
;;; C-c e         html-add-definition-entry
;;;   Add a new definition entry in a definition list.  You are
;;;   assumed to be inside a definition list (specifically, at the end
;;;   of another definition entry).
;;;
;;; C-c h         html-add-header
;;;   Add a header.  You are prompted for size (1 is biggest, 2 is
;;;   next biggest) and header contents.
;;;
;;; C-c i         html-add-list-or-menu-item
;;;   Add a new list or menu item in a list or menu.  You are assumed
;;;   to be inside a list or menu (specifically, at the end of another
;;;   item).
;;;
;;; C-c l         html-add-normal-link
;;;   Add a link.  You will be prompted for the link (any string;
;;;   e.g., http://foo.bar/argh/blagh).  The cursor will be left where
;;;   you can type the text that will represent the link in the
;;;   document.
;;;
;;; C-c m         html-add-menu
;;;   Open a menu.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c p         html-add-paragraph-separator
;;;   Use this command at the end of each paragraph.
;;;
;;; C-c s         html-add-list
;;;   Open a list.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c t         html-add-title
;;;   Add a title to the document.  You will be prompted for the
;;;   contents of the title.  If a title already exists at the very
;;;   top of the document, the existing contents will be replaced.
;;;
;;; C-c x         html-add-plaintext
;;;   Add plaintext.  The cursor will be positioned where you can type
;;;   plaintext (or insert another file, or whatever).
;;;
;;; COMMANDS THAT OPERATE ON THE CURRENT REGION:
;;;
;;; C-c C-r l     html-add-normal-link-to-region
;;;   Add a link that will be represented by the current region.  You
;;;   will be prompted for the link (any string, as with
;;;   html-add-normal-link).
;;;
;;; C-c C-r r     html-add-reference-to-region
;;;   Add a reference (a link that does not reference anything) that
;;;   will be represented by the current region.  You will be prompted
;;;   for the name of the link; if you just press RET, a numeric name
;;;   will be created for you.
;;;
;;; SPECIAL COMMANDS:
;;;
;;; <, >, &
;;;   These are overridden to output &lt;, &gt;, and &amp;
;;;   respectively.  The real characters <, >, and & can be entered
;;;   into the text either by prepending 'C-c' to the character or by
;;;   using the Emacs quoted-insert (C-q) command.
;;;
;;; C-c <, C-c >, C-c &
;;;   See '< > &' above.
;;;
;;; NOTE: The key bindings above are what I find to be useful and easy
;;; to remember.  If you have ideas on how to make them easier to
;;; handle for yourself or other people, please let me know.
;;; (Ideally, these commands all go in menus; to that end, someday
;;; soon I'll add a Lucid Emacs menu to html-mode.)
;;;
;;; ---------------------------- ADDITIONAL NOTES ----------------------------
;;;
;;; If you are running Epoch or Lucid Emacs, highlighting will be used
;;; to deemphasize HTML message elements as they are created.  You can
;;; turn this off; see the source code.
;;;
;;; To reorder all of the link NAME fields in your message (in order
;;; of their occurrence in the text), use:
;;;
;;; html-reorder-numeric-names
;;;   Reorder the NAME fields for links in the current buffer.  The
;;;   new ordering starts at 1 and increases monotonically through the
;;;   buffer.  If optional arg REORDER-NON-NUMERIC is non-nil, then
;;;   non-numeric NAME's will also be numbered, else they won't.
;;;
;;; -------------------------------- GOTCHAS ---------------------------------
;;;
;;; HTML documents can be tricky.  html-mode is not smart enough to
;;; enforce correctness or sanity, so you have to do that yourself.
;;;
;;; In particular, html-mode is smart enough to generate unique
;;; numeric NAME id's for all links that were (1) created via an
;;; html-mode command or (2) present in the file when it was loaded.
;;; Any other links (e.g. links added via Emacs cut and paste) may
;;; have ID's that conflict with ID's html-mode generates.  You must
;;; watch for this and fix it when appropriate; otherwise, your
;;; hypertext document will not work correctly.
;;;
;;; html-reorder-numeric-names can be used to reset all of the NAME
;;; id's in a document to an ordered sequence; this will also give
;;; html-mode a chance to look over the document and figure out what
;;; new links should be named to be unique.
;;;
;;; ------------------------- WHAT HTML-MODE IS NOT --------------------------
;;;
;;; html-mode is not a mode for *browsing* HTML documents.  In
;;; particular, html-mode provides no hypertext capabilities.  There
;;; is a clear need for an HTML browser; if you write one, let me
;;; know.
;;;
;;; ------------------------------ WHAT HTML IS ------------------------------
;;;
;;; HTML (HyperText Markup Language) is a format for hypertext
;;; documents.  For more information on HTML, telnet to info.cern.ch.
;;;
;;; --------------------------------------------------------------------------
;;; LCD Archive Entry:
;;; html-mode|Marc Andreessen|marca@ncsa.uiuc.edu|
;;; Major mode for editing HTML hypertext files.|
;;; $Date: 1992/11/19 05:39:25 $|$Revision: 1.18 $|~/modes/html-mode.el.Z|
;;; --------------------------------------------------------------------------

;; TODO:
;; sgml-mode stuff.

(provide 'html-mode)

;;; ------------------------------- variables --------------------------------

(defvar html-use-highlighting t
  "*Flag to use highlighting for HTML directives in Epoch or Lucid Emacs; 
if non-NIL, highlighting will be used.")

(defvar html-deemphasize-color "grey80"
  "*Color for de-highlighting HTML directives in Epoch or Lucid Emacs.")

(defvar html-emphasize-color "yellow"
  "*Color for highlighting HTML something-or-others in Epoch or Lucid Emacs.")

;;; --------------------------------- setup ----------------------------------

(defvar html-mode-syntax-table nil
  "Syntax table used while in html mode.")

(defvar html-mode-abbrev-table nil
  "Abbrev table used while in html mode.")
(define-abbrev-table 'html-mode-abbrev-table ())

(if html-mode-syntax-table
    ()
  (setq html-mode-syntax-table (make-syntax-table))
  (modify-syntax-entry ?\" ".   " html-mode-syntax-table)
  (modify-syntax-entry ?\\ ".   " html-mode-syntax-table)
  (modify-syntax-entry ?' "w   " html-mode-syntax-table))

(defvar html-mode-map nil "")
(if html-mode-map
    ()
  (setq html-mode-map (make-sparse-keymap))
  (define-key html-mode-map "\t" 'tab-to-tab-stop)
  (define-key html-mode-map "\C-ca" 'html-add-address)
  (define-key html-mode-map "\C-cd" 'html-add-definition-list)
  (define-key html-mode-map "\C-ce" 'html-add-definition-entry)
  (define-key html-mode-map "\C-ch" 'html-add-header)
  (define-key html-mode-map "\C-ci" 'html-add-list-or-menu-item)
  (define-key html-mode-map "\C-cl" 'html-add-normal-link)
  (define-key html-mode-map "\C-cm" 'html-add-menu)
  (define-key html-mode-map "\C-cp" 'html-add-paragraph-separator)
  (define-key html-mode-map "\C-cs" 'html-add-list)
  (define-key html-mode-map "\C-ct" 'html-add-title)
  (define-key html-mode-map "\C-cx" 'html-add-plaintext)
  (define-key html-mode-map "<" 'html-less-than)
  (define-key html-mode-map ">" 'html-greater-than)
  (define-key html-mode-map "&" 'html-ampersand)
  (define-key html-mode-map "\C-c<" 'html-real-less-than)
  (define-key html-mode-map "\C-c>" 'html-real-greater-than)
  (define-key html-mode-map "\C-c&" 'html-real-ampersand)
  (define-key html-mode-map "\C-c\C-rl" 'html-add-normal-link-to-region)
  (define-key html-mode-map "\C-c\C-rr" 'html-add-reference-to-region)
)

;;; --------------------------- buffer-local vars ----------------------------

(defvar html-link-counter-default 0)
(defvar html-link-counter nil)
(make-variable-buffer-local 'html-link-counter)
(setq-default html-link-counter html-link-counter-default)

;;; ------------------------------ highlighting ------------------------------

(defvar html-running-lemacs (string-match "Lucid" emacs-version)
  "Non-nil if running Lucid Emacs.")

(defvar html-running-epoch (boundp 'epoch::version)
  "Non-nil if running Epoch.")

(if (and html-running-epoch html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-style))
      (set-style-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-style))
      (set-style-foreground html-emphasize-style html-emphasize-color)))

(if (and html-running-lemacs html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-face 'html-deemphasize-face))
      (set-face-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-face 'html-emphasize-face))
      (set-face-foreground html-emphasize-style html-emphasize-color)))

(if html-use-highlighting
    (progn
      (if html-running-lemacs
          (defun html-add-zone (start end style)
            "Add a Lucid Emacs extent from START to END with STYLE."
            (let ((extent (make-extent start end)))
              (set-extent-face extent style)
              (set-extent-data extent 'html-mode))))
      (if html-running-epoch
          (defun html-add-zone (start end style)
            "Add an Epoch zone from START to END with STYLE."
            (let ((zone (add-zone start end style)))
              (epoch::set-zone-data zone 'html-mode))))))

(defun html-maybe-deemphasize-region (start end)
  "Maybe deemphasize a region of text.  Region is from START to END."
  (and (or html-running-epoch html-running-lemacs)
       html-use-highlighting
       (html-add-zone start end html-deemphasize-style)))

;;; ----------------------------- link commands ------------------------------

(defun html-add-link (link-object)
  "Add a link."
  (let ((start (point)))
    (setq html-link-counter (1+ html-link-counter))
    (insert "<A NAME=" (format "%d" html-link-counter) 
            " HREF=" link-object ">")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "</A>")
    (push-mark)
    (forward-char -4)
    (html-maybe-deemphasize-region (1+ (point)) (+ (point) 4))))

(defun html-add-normal-link (link)
  "Make a link.  There is no completion of any kind yet."
  (interactive "sLink to: ")
  (html-add-link link))

(defun html-add-normal-link-to-region (link start end)
  "Make a link that applies to the current region.  Again,
no completion."
  (interactive "sLink to: \nr")
  (save-excursion
    (goto-char end)
    (save-excursion
      (goto-char start)
      (setq html-link-counter (1+ html-link-counter))
      (insert "<A NAME=" (format "%d" html-link-counter)
              " HREF=" link ">")
      (html-maybe-deemphasize-region start (1- (point))))
    (insert "</A>")
    (html-maybe-deemphasize-region (- (point) 3) (point))))

(defun html-add-reference-to-region (name start end)
  "Add a reference point (a link with no reference of its own) to
the current region."
  (interactive "sName (or RET for numeric): \nr")
  (and (string= name "")
       (progn
         (setq html-link-counter (1+ html-link-counter))
         (setq name (format "%d" html-link-counter))))
  (save-excursion
    (goto-char end)
    (save-excursion
      (goto-char start)
      (insert "<A NAME=" name ">")
      (html-maybe-deemphasize-region start (1- (point))))
    (insert "</A>")
    (html-maybe-deemphasize-region (- (point) 3) (point))))

;;; --------------------------- document elements ----------------------------

(defun html-add-title (title)
  "Add or modify a title."
  (interactive "sTitle: ")
  (save-excursion
    (goto-char (point-min))
    (if (and (looking-at "<TITLE>")
             (save-excursion
               (forward-char 7)
               (re-search-forward "[^<]*" 
                                  (save-excursion (end-of-line) (point)) 
                                  t)))
        ;; Plop the new title in its place.
        (replace-match title t)
      (insert "<TITLE>")
      (html-maybe-deemphasize-region (point-min) (1- (point)))
      (insert title)
      (insert "</TITLE>")
      (html-maybe-deemphasize-region (- (point) 7) (point))
      (insert "\n"))))

(defun html-add-header (size header)
  "Add a header."
  (interactive "sSize (1 or 2): \nsHeader: ")
  (let ((start (point)))
    (insert "<H" size ">")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert header)
    (setq start (point))
    (insert "</H" size ">\n")
    (html-maybe-deemphasize-region (1+ start) (1- (point)))))

(defun html-add-paragraph-separator ()
  "Add a paragraph separator."
  (interactive)
  (let ((start (point)))
    (insert "  <P>\n\n")
    (html-maybe-deemphasize-region (+ start 2) (- (point) 2))))

(defun html-add-definition-list ()
  "Add a definition list."
  (interactive)
  (let ((start (point)))
    (insert "<DL>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<DT> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n<DD> \n")
      (setq start (point))
      (insert "</DL>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-definition-entry ()
  "Add a definition entry.  Assume we're at the end of a previous
entry."
  (interactive)
  (let ((start (point)))
    (insert "\n<DT> ")
    (save-excursion
      (insert "\n<DD> "))))

(defun html-add-plaintext ()
  "Add plaintext."
  (interactive)
  (let ((start (point)))
    (insert "<XMP>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</XMP>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; This doesn't work.
      (push-mark))))

(defun html-add-list-internal (type)
  (let ((start (point)))
    (insert "<" type ">\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<LI> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</" type ">\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-list ()
  "Add a list."
  (interactive)
  (html-add-list-internal "UL"))

;; Is this correct?  Viola doesn't seem to do anything with it.
(defun html-add-menu ()
  "Add a menu."
  (interactive)
  (html-add-list-internal "MENU"))

(defun html-add-list-or-menu-item ()
  "Add a list or menu item.  Assume we're at the end of the
last item."
  (interactive)
  (let ((start (point)))
    (insert "\n<LI> ")))

(defun html-add-address ()
  "Add an address."
  (interactive)
  (let ((start (point)))
    (insert "<ADDRESS> ")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (setq start (point))
      (insert "  </ADDRESS>\n")
      (html-maybe-deemphasize-region (+ start 2) (1- (point)))
      ;; Obviously this doesn't work here, so I don't
      ;; see why you're being an idiot and still doing it
      ;; like this....
      (push-mark))))

(defun html-less-than ()
  (interactive)
  (insert "&lt;"))

(defun html-greater-than ()
  (interactive)
  (insert "&gt;"))

(defun html-ampersand ()
  (interactive)
  (insert "&amp;"))

(defun html-real-less-than ()
  (interactive)
  (insert "<"))

(defun html-real-greater-than ()
  (interactive)
  (insert ">"))

(defun html-real-ampersand ()
  (interactive)
  (insert "&"))

;;; ----------------------- html-reorder-numeric-names -----------------------

(defun replace-string-in-buffer (start end newstring)
  (save-excursion
    (goto-char start)
    (delete-char (1+ (- end start)))
    (insert newstring)))

(defun html-reorder-numeric-names (&optional reorder-non-numeric)
  "Reorder the NAME fields for links in the current buffer.  The
new ordering starts at 1 and increases monotonically through the buffer.
If optional arg REORDER-NON-NUMERIC is non-nil, then non-numeric NAME's
will also be numbered, else they won't.

Beware that doing this will possibly mess up references to specific
links within this document (e.g., HREF=#12) or by other documents.
This command is mainly intended for use during the initial creation
stage of a document, especially when this creation involves cutting
and pasting from other documents (which it shouldn't, since this is
hypertext :-)."
  (interactive)
  (save-excursion
    (goto-char (point-min))
    (setq html-link-counter 0)
    (while (re-search-forward "<A[ \t\n]+NAME=" (point-max) t)
      (let* ((start (match-end 0))
             (end (save-excursion
                    (re-search-forward "[ \t\n>]" 
                                       (point-max) 
                                       t)
                    (match-beginning 0)))
             (subst (buffer-substring start end)))
        (and subst
             ;; Proceed only if we reorder non-numeric links or
             ;; this is in fact numeric (i.e. > 0).
             (or reorder-non-numeric (> (string-to-int subst) 0))
             (progn
               (setq html-link-counter (1+ html-link-counter))
               (replace-string-in-buffer start (1- end)
                (format "%d" html-link-counter))))))))

;;; ------------------------------- html-mode --------------------------------

(defun html-mode ()
  "Major mode for editing HTML hypertext documents.  Special commands:\\{html-mode-map}
Turning on html-mode calls the value of the variable html-mode-hook,
if that value is non-nil.

More extensive documentation is available in the file 'html-mode.el'.
The latest (possibly unstable) version of this file will always be available
on anonymous FTP server ftp.ncsa.uiuc.edu in /outgoing/marca."
  (interactive)
  (kill-all-local-variables)
  (use-local-map html-mode-map)
  (setq mode-name "Html")
  (setq major-mode 'html-mode)
  (setq local-abbrev-table html-mode-abbrev-table)
  (set-syntax-table html-mode-syntax-table)
  (run-hooks 'html-mode-hook))

;;; ------------------------------- our hooks --------------------------------

(defun html-find-file-hook ()
  "Hook called from find-file-hooks.  Set html-link-counter to 
the highest link value in the document (the next link created will
be one greater than that) to insure unique (numeric) link ID's."
  (save-excursion
    (goto-char (point-min))
    (while (re-search-forward "<A[ \t\n]+NAME=" (point-max) t)
      (let* ((start (match-end 0))
             (end (save-excursion
                    (re-search-forward "[ \t\n>]"
                                       (point-max)
                                       t)
                    (match-beginning 0)))
             (subst (buffer-substring start end)))
        (and subst
             ;; Safe to do compare, since string-to-int passed a non-number
             ;; returns 0.
             (> (string-to-int subst) html-link-counter)
             (setq html-link-counter (string-to-int subst)))))))

;;; ------------------------------- hook setup -------------------------------

;; Author: Daniel LaLiberte (liberte@cs.uiuc.edu).
(defun html-postpend-unique-hook (hook-var hook-function)
  "Postpend HOOK-VAR with HOOK-FUNCTION, if it is not already an element.
hook-var's value may be a single function or a list of functions."
  (if (boundp hook-var)
      (let ((value (symbol-value hook-var)))
        (if (and (listp value) (not (eq (car value) 'lambda)))
            (and (not (memq hook-function value))
                 (set hook-var (append value (list hook-function))))
          (and (not (eq hook-function value))
               (set hook-var (append value (list hook-function))))))
    (set hook-var (list hook-function))))

(html-postpend-unique-hook 'find-file-hooks 'html-find-file-hook)

;;; ------------------------------ final setup -------------------------------

(or (assoc "\\.html$" auto-mode-alist)
    (setq auto-mode-alist (cons '("\\.html$" . html-mode) auto-mode-alist)))


From connolly@pixel.convex.com  Thu Nov 19 05:43:14 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12924; Thu, 19 Nov 92 05:43:14 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA07607; Thu, 19 Nov 92 05:55:47 +0100
Received: from convex.convex.com by mcsun.EU.net with SMTP
	id AA16779 (5.65b/CWI-2.187); Thu, 19 Nov 1992 05:55:31 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26388; Wed, 18 Nov 92 22:54:12 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA08886; Wed, 18 Nov 92 22:54:11 -0600
Message-Id: <9211190454.AA08886@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: html-mode.el update 
In-Reply-To: Your message of "Wed, 18 Nov 92 21:42:37 PST."
             <9211190542.AA09366@wintermute.ncsa.uiuc.edu> 
Date: Wed, 18 Nov 92 22:54:10 CST
From: Dan Connolly <connolly@pixel.convex.com>


Here's a patch to add a function to fix all the existing
HREFs in an HTML file so they'll have quotes around them.

Dan

*** /mnt/connolly/foo	Wed Nov 18 22:51:50 1992
--- html-mode.el	Wed Nov 18 22:50:32 1992
***************
*** 517,522 ****
--- 517,543 ----
                 (setq html-link-counter (1+ html-link-counter))
                 (replace-string-in-buffer start (1- end)
                  (format "%d" html-link-counter))))))))
+ 
+ (defun html-quote-hrefs ()
+   "Insert quotes around all HREF attribute value literals.
+ 
+ This remedies the problem with old html files that can't be
+ processed by SGML parsers. That is, changes
+ <A HREF=foo> to <A HREF="foo">.
+ 
+ By Dan Connolly, so don't yell at Mark if it breaks."
+   (interactive)
+   (save-excursion
+     (goto-char (point-min))
+     (setq html-link-counter 0)
+     (while (re-search-forward "<[aA][ \t\n]+\\([nN][aA][mM][eE]=[a-zA-Z0-9]+[ \t\n]+\\)?[hH][rR][eE][fF]=" (point-max) t)
+       (cond ((null (looking-at "\""))
+ 	     (insert "\"")
+ 	     (re-search-forward "[ \t\n>]" (point-max) t)
+ 	     (forward-char -1)
+ 	     (insert "\"")
+ 	     ))
+       ) ) )
  
  ;;; ------------------------------- html-mode --------------------------------
  

From K.Hoadley@directory.rl.ac.uk  Thu Nov 19 10:32:43 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13352; Thu, 19 Nov 92 10:32:43 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19628; Thu, 19 Nov 92 10:45:12 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <01457-0@directory.rl.ac.uk>; Thu, 19 Nov 1992 09:34:25 +0000
Date: Thu, 19 Nov 1992 09:38:35 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Sender: K.Hoadley@directory.rl.ac.uk
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: Re: hangs/multiple servers
To: www-talk@nxoc01.cern.ch
Message-Id: <Ximap.722166319.4084.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

The simple way to provide multiple servers would be to register the
server name in the DNS with multiple A (address) records pointing to
different machines. Then the clients could be mod'ed could try the second
or third ... addresses if they couldn't get through to the first.

How you keep info upto date accross multiple servers is a different matter,
need some form of replication a la DNS zone transfers (or Quipu's extensions
to X.500 ) ... Mind you, replication within www is a harder issue: a server
might be sitting in front of datasets too large to sensibly duplicate.

Kevin Hoadley, Rutherford Appleton Laboratory

From connolly@pixel.convex.com  Thu Nov 19 11:25:10 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13575; Thu, 19 Nov 92 11:25:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22828; Thu, 19 Nov 92 11:37:43 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA01932; Thu, 19 Nov 92 04:37:25 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA16353; Thu, 19 Nov 92 04:37:23 -0600
Message-Id: <9211191037.AA16353@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML DTD issues
Date: Thu, 19 Nov 92 04:37:23 CST
From: Dan Connolly <connolly@pixel.convex.com>


The thrust to register HTML with the authorities has
spurred me to look over the DTD again. I've found
some problems.

1. Currently the NAME attribute of an anchor is declared
as CDATA, i.e. just about anything. There's an SGML thingy
called an ID. SGML parsers enforce uniqueness among the IDs
of a document. Seems like that's what we want for ID names.

But an SGML ID has to start with a letter. So all the
HTML files that use numbers as anchor names will break.

2. I introduced two tag names when I drafted the DTD:
	HTML contains the whole document. I defined it
so you can omit both the start and the end tags, so it's
inferred by SGML parsers. I don't think I can avoid some
top-level tag.
	DOCUMENT contains most of the "body" -- all the
headings and paragraphs. I did this to avoid something
called mixed content, which causes complications.
I could rename this element as BODY, and introduce a
omitable HEADING tag to surround the TITLE, NEXTID,
and ISINDEX tags.

3. I stuck anchors in as an inclusion, meaning they
could be used just about anywhere. I thought stuff
like
<a name=foo><h1>Foo</h1></a>
was legal, but neither linemode nor the midas browser
groks.

I'm editing the DTD to restrict the usage of anchors
to only contain text strings.

4. The OL tag is disappearing. It's no longer documented
in the web, and it's not supported by MidasWWW. Should
I delete it from the DTD?

5. What about <HP1> thru <HP5>... should we include them?
I'd prefer <em>, <tt>, <cite>, ala TeX. Or we could
go with the O'Reilly/Hal DocBook tags:
<Emphasis>, <OopsChar>, <wordasword>,<CiteBook>,<Subscript>,
<Superscript>.

6. Any more thoughts on the BaseAddress tag?

7. The HTML tags documentation says Listing sections can contain
any ISO Latin 1 characters. The SGML standard mentions ISO 646,
i.e. ascii, as the default, but the sgmls parser, the linemode
browser, and MidasWWW all seem to grok Latin1 just fine.

Dan

From timbl@www3.cern.ch  Thu Nov 19 11:41:22 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13635; Thu, 19 Nov 92 11:41:22 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23735; Thu, 19 Nov 92 11:53:54 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00225; Thu, 19 Nov 92 11:49:33 +0100
Date: Thu, 19 Nov 92 11:49:33 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191049.AA00225@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Tom Libert <libert@citi.umich.edu>
Subject: Re: a Gateway to the U Mich Geography server
Cc: davis@dri.cornell.edu, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



From the network point of view, there is one logical place to run this
gateway, and that it at umich, preferably on the same machine as the base  
server.

Perhaps you two could come to some arrangement?  We'd all be glad of it!

By the way, there are lots of neat ways I could think of to display the  
results, like

<h1>what you searched for</h1>

<H2>West bend</H2>
<dl>
<dt>Poulation<dd>14354
<dt>coordinates<dd>State: New York(NY). ZIP Codes: 10000, Areas codes: 508 607
</dl>
Remarkably the only produceer of daimonds and pipes in the state.


but I'll leave that to someone in the US!

	Tim BL
	

From timbl@www3.cern.ch  Thu Nov 19 12:06:46 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13717; Thu, 19 Nov 92 12:06:46 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25218; Thu, 19 Nov 92 12:19:16 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00242; Thu, 19 Nov 92 12:14:52 +0100
Date: Thu, 19 Nov 92 12:14:52 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191114.AA00242@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Re: hangs/multiple servers
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Also, is there any way to specify backup servers?  Does anyone else
> think this would be useful?

Yes... it certainly would.
 

 First of all, the final solution seems to be to use a globally distributed  
replicated name server for documents or servers. Like x500 which isn't here  
yet. The name service would return multiple pointers. The client could chose
 intelligently which to try first.  But we don't have that infrastructure yet.
 

In the mean time, the question is where to put the information.
In teh new HTTP protocol there are a number of objects which can be
returned ateth protocol level (rather than the data level) which include
error objects and forwards. A forward can contain multiple pointers.
 However, it doesn't help reliability much because the server which hold the  
forwarding info will be just as unreliable! 

 

So one considers putting the multiple URLs (addresses) into the link in the
document.  This smells too, because the positions of servers for different
parts of the abstract document space will be constantly evolving, and so the
links will be soon out of date, and that is grim for documents which may last  
20 years...

The next solution Rik just mentioned:
>  One possible way to implement backups is to have the client do it (makes
>  the client too clever?).  The client could have a list of hosts, and for
>  each one, have a list of backup servers, to try if the main server is
>  down.  The problem with this is that the list is much more difficult
>  to maintain, if everyone needs a copy, and only the clients that have
>  implemented this would benefit.

But it is a simple stopgap.  The way I would see doing it
in practice would be to call the name translation rule module (HTRules.c)
from the client as currently from the daemon httpd. The rules would
be extended to include a "try" operator, like "map" but
allowing continues processing of the rule file if the access failed.

This would be useful in the server too... for example to pick up date from some
remote mounted disk which is the original, but if that fails to use a cached  
copy updated last night.

Tim


From K.Hoadley@directory.rl.ac.uk  Thu Nov 19 14:04:35 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14133; Thu, 19 Nov 92 14:04:35 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00767; Thu, 19 Nov 92 14:17:01 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <01684-0@directory.rl.ac.uk>; Thu, 19 Nov 1992 13:06:04 +0000
Date: Thu, 19 Nov 1992 13:14:33 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Sender: K.Hoadley@directory.rl.ac.uk
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: Comments in HTML ?
To: www-talk@nxoc01.cern.ch
Message-Id: <Ximap.722179021.2781.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Is there any way to include comments in html documents ? In sgml ?

Does any of the existing WWW code support comments ?

Kevin Hoadley, Rutherford Appleton Laboratory, khoadley@ib.rl.ac.uk

From timbl@www3.cern.ch  Thu Nov 19 14:24:24 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14176; Thu, 19 Nov 92 14:24:24 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01997; Thu, 19 Nov 92 14:36:40 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00503; Thu, 19 Nov 92 14:32:11 +0100
Date: Thu, 19 Nov 92 14:32:11 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191332.AA00503@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: HTML DTD issues
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

Dan,

Your work on the SGML side (as all your work) is much apreciated!

>  Date: Thu, 19 Nov 92 04:37:23 CST
>  From: Dan Connolly <connolly@pixel.convex.com>
>  

>  

>  The thrust to register HTML with the authorities has
>  spurred me to look over the DTD again. I've found some
>  problems.
>  

>  1. Currently the NAME attribute of an anchor is declared
>  as CDATA, i.e. just about anything. There's an SGML thingy
>  called an ID. SGML parsers enforce uniqueness among the
>  IDs of a document. Seems like that's what we want for ID
>  names.
>  

>  But an SGML ID has to start with a letter. So all the
>  HTML files that use numbers as anchor names will break.

The enforcement of uniqueness is useful, and it is what we want.
It is unfortunate that the very same constraint lead to the use of numbers!
This is a hangup of the NeXT editor (which i still use, as
until somone makes a more convenient editor!) but we oughtn't to
worry about it.  A future editor could generate Z[0-9]* names.
We could even specify that Z[0-9]* are related to a NEXTID attribute
somewhere for the generation of time-unique IDs.

The only neat thing about CDATA is that it would allow a gateway
to put in something which as come from the data. For example,
a glossary generator might generate anchors for each term
whose name equals the term, and then generate index entries
pointing to that.

What do you think?

>  2. I introduced two tag names when I drafted the DTD:
>  	HTML contains the whole document. I defined it
>  so you can omit both the start and the end tags, so it's
>  inferred by SGML parsers. I don't think I can avoid some
>  top-level tag.
>  	DOCUMENT contains most of the "body" -- all the
>  headings and paragraphs. I did this to avoid something
>  called mixed content, which causes complications.  I
>  could rename this element as BODY, and introduce a
>  omitable HEADING tag to surround the TITLE, NEXTID, and
>  ISINDEX tags.

I like the latter idea.  Header and Body fit in well with mail
nomenclature, wherase "document" is normally the whole thing
retrieved.

>  3. I stuck anchors in as an inclusion, meaning they could
>  be used just about anywhere. I thought stuff like <a
>  name=foo><h1>Foo</h1></a> was legal, but neither linemode
>  nor the midas browser groks.

The line mdoe doesn't?  It should.  Only titles I wanted to insist were
plain ascii text....
Turns out to be a bug in HTML.c -- fixed for next release.

>  I'm editing the DTD to restrict the usage of anchors to
>  only contain text strings.

I don't like that.... I think that especially as we introduce
highlighting, anchors will want to be general areas of text, so
long as they are nested properly. (An "SGML attitude" restriction
which Frank Kappe objected to I recall).

>  4. The OL tag is disappearing. It's no longer documented
>  in the web, and it's not supported by MidasWWW. Should
>  I delete it from the DTD?

You say its useful?  If you havce implemented it, and noone else
objects, then we could put it back in. In principle, with hypertext, you don't  
have to number tyhings, you can refer to them with a link. However, you
can imagine the abstract difference between an ordered list and 

a sack of objects being important.  [For example, a list of
instructions is ordered].  I'll put it into the HTML2 list of features.
I suggest everyone  implement OL as UL in programs which, like the line mode  
browser, can't differentiate.


>  5. What about <HP1> thru <HP5>... should we include them?
>  I'd prefer <em>, <tt>, <cite>, ala TeX. Or we could go
>  with the O'Reilly/Hal DocBook tags:  <Emphasis>,
>  <OopsChar>, <wordasword>,<CiteBook>,<Subscript>,
>  <Superscript>.

I agree that numbering them is on the verge of useless.  The trouble is,
you never have enough. Why CiteBook but not CiteProgram? etc etc.
The docbook names are on the long side, aren't they? Not very important
I suppose.

>  6. Any more thoughts on the BaseAddress tag?

Yes. It should be in. I think.  I've mentioned in  
http://info.cern.ch/hypertext/WWW/MarkUp/Future.html

>  7. The HTML tags documentation says Listing sections can
>  contain any ISO Latin 1 characters. The SGML standard
>  mentions ISO 646, i.e. ascii, as the default, but the
>  sgmls parser, the linemode browser, and MidasWWW all seem
>  to grok Latin1 just fine.

I suggest we limit it to ASCII unless something outside the
document says otherwise, while strongly recommending that
8-bit character sets should be handled by the apps.  I have
seen some funnies when two clients both handle 8-bit characters,
but not the same ones.

Does the SGML standard say how to specify the character set for
the text?

>  Dan
>  

	Tim

From timbl@www3.cern.ch  Thu Nov 19 15:12:58 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14461; Thu, 19 Nov 92 15:12:58 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA05057; Thu, 19 Nov 92 15:25:02 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00523; Thu, 19 Nov 92 15:20:14 +0100
Date: Thu, 19 Nov 92 15:20:14 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191420.AA00523@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Annotation in WWW
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



Marc,

You ask a good question.  Currently, all we do with existing WWW software is as  
you describe: you need write access to annote it. See

www http://info.cern.ch/hypertext/WWW/DesignIssues/LinkToLiving.html 

   and
www http://info.cern.ch/hypertext/WWW/DesignIssues/Multiuser.html

for discussions in this area.  We would like to include facilities in the
new protocol to allow front-end update.

One observation I have made is that many nodes are basically lists, and the  
option to add a link to the list could be a simple and safer operation than  
allowing full write acess.

The function would be annotate(docid1, docid2) which would, in the simplest  
hypertext case, add a bit of text to the end of doc1 consisting of the title
of doc2, linked to doc2 itself. This function would give allow a "reply"  
feature when used on a mail message. For a newsgroup, it would equate to  
"post". obviously it would be up to a server how it would impelement it (ity  
could maintain alphabestical order for example, it could store the links in a  
separate databse, it could formatthem anyway) -- the requirement would only be  
that at the end, a link from doc1 to doc2 existed.

I'd be interested in CSCW people getting involved with the web. Certain servers
could for example mention their ability to support concurrent editing of  
documents for clients which support that. 


Tim

From emv@garnet.msen.com  Thu Nov 19 16:13:11 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14828; Thu, 19 Nov 92 16:13:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA09275; Thu, 19 Nov 92 16:25:34 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0msDke-00009rC@garnet.msen.com>; Thu, 19 Nov 92 10:24 WET
Date: Thu, 19 Nov 1992 10:22:26 -0500 (EST)
From: Edward Vielmetti <emv@garnet.msen.com>
Subject: Re: HTML DTD issues
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: <9211191037.AA16353@pixel.convex.com>
Message-Id: <Pine.3.05.9211191025.A15799-a100000@garnet.msen.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

To the extent that we can steal ideas from the DocBook DTD I think we
should!  Talk about getting leverage from existing industry efforts - if
the long run future of WWW is to make it possile to interactively build
books whose chapters live on different sites and that have all of the WWW
hypertext links, we'll have a wonderful outcome.

--Ed

On Thu, 19 Nov 1992, Dan Connolly wrote:

> 5. What about <HP1> thru <HP5>... should we include them?
> I'd prefer <em>, <tt>, <cite>, ala TeX. Or we could
> go with the O'Reilly/Hal DocBook tags:
> <Emphasis>, <OopsChar>, <wordasword>,<CiteBook>,<Subscript>,
> <Superscript>.




From timbl@www3.cern.ch  Thu Nov 19 18:04:43 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15654; Thu, 19 Nov 92 18:04:43 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16234; Thu, 19 Nov 92 18:17:17 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00333; Thu, 19 Nov 92 18:13:01 +0100
Date: Thu, 19 Nov 92 18:13:01 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191713.AA00333@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Visiting CERN to work with the World-Wide Web
Reply-To: timbl@nxoc01.cern.ch


Here at CERN there is not a lot of manpower for developing WWW, and there is a  
lot of pressure for us to work specifically to get local groups' information  
systems up.  However, we need lots of help in keeping the project on course  
...such activities as

  - designing/developing/installing new tools,
  - checking out/incorporating related products on the net,
  - keeping in touch with users and other support groups worldwide
  - maintaining metatools to make the above easier

Now it turns out that there are a number of ways for visitors to come to CERN,  
and we have a limited budget for this.  The exact mechanism used would depend  
on the case, so anyone seriously interested in helping the web along with some  
hard work for 6-12 months should say and we'll look into it. Some factors:

We would obviously be looking for a capable person, preferably with fluent C  
and unix, and probably with experience with web-related software and lots of  
enthusiasm. So I am circulating this only to the www-talk list for now.

This would be an excellent way for a group to gain experience in the web,  
sending out to work here for a year.  We would of course arrange the visit in  
coordination and agreement with the visitor's current employers.

In some ways it is easier to take people from CERN member states (Europe),
and/or from High-Energy physics institutes, but visitors frequently come from  
elsewhere.

The amount of subsistence CERN can pay varies depending on lots of things. If a  
person's institute can pay all of or a fraction of their salary, then that  
tends to influence the finance division favourably!

(Geneva, Switzerland, has lakes and mountains and an international community.  
There is Alpine skiing an hour away and hill walking 20 minutes away. But these  
things are material :-)

Think about it, and mail me if interested.

	Tim BL
	





From timbl@www3.cern.ch  Thu Nov 19 18:19:51 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15741; Thu, 19 Nov 92 18:19:51 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16982; Thu, 19 Nov 92 18:32:12 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00350; Thu, 19 Nov 92 18:27:46 +0100
Date: Thu, 19 Nov 92 18:27:46 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191727.AA00350@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: K.Hoadley@directory.rl.ac.uk
Subject: Re: Comments in HTML ?
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



Begin forwarded message:

> Date: Thu, 19 Nov 1992 13:14:33 +0000 (GMT)
> From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>


> Is there any way to include comments in html documents ? In sgml ?

In SGML, yes there is a -- comment start and a -- comment end.
Someone corerct me if I am wrong but I understand that once within
a tag one can use these ... right? Or does it apply to DTDs only?

A comment which is insertable as hidden text is useful too --
and I had forgotten to mention it in the HTML futures list.
I'll put it in.  A previous net consensus was for <comment>...</comment>.

> Does any of the existing WWW code support comments ?

As it happens, the current library supports them, so the line mdoe
browser and anything else based on the library does. But it has
been left out of the doc and so will probably me missing from other browers.

> Kevin Hoadley, Rutherford Appleton Laboratory, khoadley@ib.rl.ac.uk

Tim BL



__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web initiative             (NeXTMail is ok)	
CERN                                  Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155


sers

From timbl@www3.cern.ch  Thu Nov 19 18:21:11 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15756; Thu, 19 Nov 92 18:21:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA17070; Thu, 19 Nov 92 18:33:32 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00355; Thu, 19 Nov 92 18:29:03 +0100
Date: Thu, 19 Nov 92 18:29:03 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211191729.AA00355@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: K.Hoadley@directory.rl.ac.uk
Subject: Re: hangs/multiple servers
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

> Date: Thu, 19 Nov 1992 09:38:35 +0000 (GMT)
> From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>

>  The simple way to provide multiple servers would be to
>  register the server name in the DNS with multiple A
>  (address) records pointing to different machines. Then
>  the clients could be mod'ed could try the second or third
>  ... addresses if they couldn't get through to the first.

Ok, This seems a bery good idea, if that is the functionality which DNS  
supports.
<practical>
Let's try it.... Anyone care to mod HTTP.c? It's not obvious from
the gethostbyname that one is allowed to refer to different
machines:
          struct    hostent {
               char *h_name;  /* official name of host */
               char **h_aliases;   /* alias list */
               int  h_addrtype;    /* host address type */
               int  h_length; /* length of address */
               char **h_addr_list; /* list of addresses from name server */
          };

That look like a list of aliases for one machine, rather than a
list of machines for one alias! But maybe the reverse will work.
So all machines support char **h_addr_list rather than the older
h_addr?   We can probably differentiate using #ifdef h_addr
which is set to a macro if there IS a list.  I assume you need then
separate entries for the virtual duplicate node and the actual
real nodes, so that you can speak to them sepately. Is this normal
and OK?
</practical>

>  How you keep info upto date accross multiple servers is
>  a different matter, need some form of replication a la
>  DNS zone transfers (or Quipu's extensions to X.500 ) ...
>  Mind you, replication within www is a harder issue: a
>  server might be sitting in front of datasets too large
>  to sensibly duplicate.
>  

>  Kevin Hoadley, Rutherford Appleton Laboratory
>  


From connolly@pixel.convex.com  Thu Nov 19 19:37:53 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16376; Thu, 19 Nov 92 19:37:53 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19997; Thu, 19 Nov 92 19:50:23 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA21503; Thu, 19 Nov 92 12:50:00 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA13833; Thu, 19 Nov 92 12:49:58 -0600
Message-Id: <9211191849.AA13833@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Freezing the HTML spec Re: Comments in HTML ? 
In-Reply-To: Your message of "Thu, 19 Nov 92 18:27:46 +0100."
             <9211191727.AA00350@www3.cern.ch> 
Date: Thu, 19 Nov 92 12:49:51 CST
From: Dan Connolly <connolly@pixel.convex.com>


What is the plan for registering HTML with the IETF? The HTML
spec seems to be somewhat in flux. Tim talks a lot about
"HTML futures." There are currently a lot of open issues.
Eventually we have to "shoot the engineers and ship it,"
that is freeze the spec and hand it to the IETF.

I suggest the following steps:

1. Establish a charter for the HTML spec to guide us in
resolving issues -- a sort of requirements spec. Here's
my working list:

	* Establish a well-defined relationship between
	HTML and SGML. Don't include anything in the HTML
	spec that conflicts with the SGML spec.

	* Use the LineMode browser as a reference implementation.
	Try not to include features that www doesn't grok.

	* Support common structural markup: headers, lists, etc.

	* Support W3 addressing syntax.

	* Support links from ranges of text to other documents
	and anchors in other documents.

	* Keep the structure somewhat flat for interchange with
	PC style word processors and other style-per-paragraph
	oriented processors.

2. Establish an HTML spec document, some informative appendixes,
and some examples/test cases. I suggest:

spec: ftp://info.cern.ch/pub/www/doc/html.txt
	from http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html
	and its neighbors "Text.html" "Tags.html" "Entities.html"
	and "HTML.dtd"

infomative appendices: "HTMLConstraints.html" "Future.html"

examples: "../Test/test.html"

3. Revise the spec so that it's internally consistent. Right
now, there are some glitches. And the current method of
sending suggestions to Tim and hoping he finds time to make
the edits is no good. Hmmm... we definitely need a CSCW
strategy for group-editing of documents.

4. Register the spec with the IANA or IETF or whatever.

Meanwhile, I think it's pretty important to fix the NeXT editor
and all the files on info.cern.ch. Folks are using that as a
reference, and perpetuating HTML that conflicts with the SGML
standard.

Back to the question at hand...


>Begin forwarded message:
>
>> Date: Thu, 19 Nov 1992 13:14:33 +0000 (GMT)
>> From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
>
>
>> Is there any way to include comments in html documents ? In sgml ?
>
>In SGML, yes there is a -- comment start and a -- comment end.
>Someone corerct me if I am wrong but I understand that once within
>a tag one can use these ... right? Or does it apply to DTDs only?

The <!-- blah blah blah --> construct is only recognized in
the DTD. There's a thing called a processing instruction that
looks like <? blah blah blah> which is recognized in the
instance. The Linemode browser seems to grok.

I think we should mention this construct in the standard, since
we're technically not allowed to disallow it or process it incorrectly.

There's another thing called a marked section that looks like
<![status [ stuff ]]> where status is one of...

IGNORE means ignore this stuff, except recognize nested marked sections.
INCLUDE treat stuff normally
CDATA 	treat stuff as data. Recognize only ]]>
RCDATA 	treat stuff as data. Recognize entity reference (&foo;) and ]]>
TEMP	(why is this in the SGML standard?)

The <![CDATA [ ... ]]> should probably be supported for plaintext
sections somehow, but I can't figure out a scheme that harmonizes
with the linemode implementation.

There's also some character classes MSICHAR, MSOCHAR, MSSCHAR
for markup suppression. Markup between MSICHAR and MSOCHAR is
ignored, and the next character after MSSCHAR is treated as
data rather than markup. Unfortunately, these classes don't
have any members in the reference concrete syntax, and they're
probably not supported by many parsers.

SGML is a mess!

>> Does any of the existing WWW code support comments ?
>
>As it happens, the current library supports them, so the line mdoe
>browser and anything else based on the library does. But it has
>been left out of the doc and so will probably me missing from other browers.
>

Try the <? foo > construct.

Dan


From marca@wintermute.ncsa.uiuc.edu  Thu Nov 19 20:16:52 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16601; Thu, 19 Nov 92 20:16:52 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA20948; Thu, 19 Nov 92 20:29:19 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA08050
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Thu, 19 Nov 92 13:29:02 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:timbl@nxoc01.cern.ch id AA10669; Thu, 19 Nov 92 13:30:11 -0800
Date: Thu, 19 Nov 92 13:30:11 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211192130.AA10669@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: Freezing the HTML spec Re: Comments in HTML ? 
In-Reply-To: <9211191849.AA13833@pixel.convex.com>
References: <9211191727.AA00350@www3.cern.ch>
	<9211191849.AA13833@pixel.convex.com>

Dan Connolly writes:
> Hmmm... we definitely need a CSCW strategy for group-editing of
> documents.

I'm pulling this outta my rear end, but how about:

(1) Enabling & security mechanism: The HTTP server, in addition to
    specifying which directories/files in the filesystem can be
    obtained by an outside client, also specifies which
    directories/files can be annotated.

(2) Annotation mechanism: HTTP gets a mechanism by which a remote
    browser can add a link to the currently viewed document.  The user
    would be allowed to specify the representation (label) for the
    link and the HREF field of the link; if the HTTP server permits
    (see 1), the link will be added to the end of the current
    document.  This would be the only form of annotation allowed (no
    adding text to an existing document, etc.)

(3) Annotation location in the web: The presumption is that the user
    adding the annotation can place the annotation (as a document) on
    her local machine and make it accessible via http (or, I suppose,
    ftp).

Benefits:

(a) Fairly easy to implement and fairly seamless to integrate into
    existing structure.
(b) Lightweight in terms of additions to existing documents; since
    only a link can be added, security and document integrity is
    preserved for everyone involved.

Drawbacks:

(a) Anyone who wishes to annotate a document must be running HTTP or
    have some other way of making his annotation available as a
    document from his machine to the web -- possibly too much grunge
    work for real ``users'' as opposed to hackers.

But it would be a start....

Marc


From marca@wintermute.ncsa.uiuc.edu  Thu Nov 19 20:45:16 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16783; Thu, 19 Nov 92 20:45:16 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21652; Thu, 19 Nov 92 20:57:50 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA09475
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Thu, 19 Nov 92 13:53:26 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:rik@daneel.rdt.monash.edu.au id AA10782; Thu, 19 Nov 92 13:54:21 -0800
Date: Thu, 19 Nov 92 13:54:21 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211192154.AA10782@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Cc: rik@daneel.rdt.monash.edu.au
Subject: [rik@daneel.rdt.monash.edu.au: Re: hangs/multiple servers ]
In-Reply-To: <9211192142.AA10729@wintermute.ncsa.uiuc.edu>
References: <9211192142.AA10729@wintermute.ncsa.uiuc.edu>

> One possible way to implement backups is to have the client do it
> (makes the client too clever?).  The client could have a list of
> hosts, and for each one, have a list of backup servers, to try if
> the main server is down.  The problem with this is that the list is
> much more difficult to maintain, if everyone needs a copy, and only
> the clients that have implemented this would benefit.

I think this is a good idea -- the really important capability it
enables is this: if I (I == ``real user using WWW mechanisms for real
work'') set up an HTTP server that people at my site will need to get
to at all times, then with this mechanism I could *at the very least*
tell my WWW clients about alternate servers that I also set up.

A big advantage is that nothing major (i.e., HTTP or HTML) would have
to be changed.

As for the problems: (1) it is true that to be useful in the general
sense a master list would have to be maintained, but each local site
would only have to pull down a new one every few months -- these
things aren't going to change that often (expansion is more likely),
and (2) is a problem with any change of anything at this point, which
is why I think a very lightweight change (like this) would be best.

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From connolly@pixel.convex.com  Thu Nov 19 22:24:03 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17427; Thu, 19 Nov 92 22:24:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24297; Thu, 19 Nov 92 22:36:36 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA29321; Thu, 19 Nov 92 15:36:19 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA09136; Thu, 19 Nov 92 15:36:17 -0600
Message-Id: <9211192136.AA09136@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Freezing the HTML spec Re: Comments in HTML ? 
In-Reply-To: Your message of "Thu, 19 Nov 92 13:30:11 PST."
             <9211192130.AA10669@wintermute.ncsa.uiuc.edu> 
Date: Thu, 19 Nov 92 15:36:16 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Dan Connolly writes:
>> Hmmm... we definitely need a CSCW strategy for group-editing of
>> documents.
>
>I'm pulling this outta my rear end, but how about:
>
>(a) Anyone who wishes to annotate a document must be running HTTP or
>    have some other way of making his annotation available as a
>    document from his machine to the web -- possibly too much grunge
>    work for real ``users'' as opposed to hackers.

Ding! The light goes on: Let's use USENET news! Scenario:

1. I'm reading http://info.cern.ch/hypertext/WWW/MarkUp.html.

2. I see something I want to change, so I save the HTML to
a file.

3. I edit the file, trimming it down and adding my comments.

4. I enclose the file in a news article using the MIME text/x-html
content type and the quoted-printable content transfer encoding.

5. I post the article to comp.infosystems or alt.infosystems.www.

6. I make a URL out of the message-id of the article, and I
send
LINK /hypertext/WWW/MarkUp.html
<A HREF="news:<message-id>">Comments by connolly@convex.com</a>
.

to the HTTP server at info.cern.ch.

7. We add MIME style message/rfc-822 parsing to the browser. See below.

8. I'm browsing the annotated http://info.cern.ch/hypertext/WWW/MarkUp.html
and I click on "Comments by connolly@convex.com". The browser contacts
its NNTP server and grabs message-id.

9. It extracts the body, and displays the result as HTML.


Ding! Another light goes on. Here's how to handle MIME body parts:

We need a function:

void
HText_AppendBodyPart(HText* target, int (*getch)(void*), void* stream,
	int type, int subtype, char* params);
/*
 * PRE:
 * target -- hypertext object "in append mode"
 * getch -- get one character from stream object
 * stream -- opaque stream object
 * type -- one of the 7 mime primary types: MIME_TEXT, MIME_MESSAGE, etc.
 * subtype -- plain, html, postscript, gif, basic, multipart, etc.
 * params -- "name=val; name=val;..." parameters
 *
 * POST:
 * body part on stream has been consumed and appended to or linked
 * to target.
 */

text/html -- append as SGML text entity
text/* -- append as plain text
	to the SGML parser, it's an external entity text/plain NOTATION
multipart/* -- find boundary on stream
	create a new stream object out of getch, stream,
	and params that returns eof at the boundary
	call HText_AppendBodyPart recursively
message/rfc-822 -- parse headers, display headers as
	 <DL><DT>Subject<DD>foo...</DL>
	append body part recursively
message/external-body -- create a URL out of params. Parse
	message headers. Display as
	<H2><A href="URL" type="type/subtype params">description</a><H2>
*/* -- save to local file foo. display as
	<H2><a HREF="file:foo" TYPE="type/subtype params">description</a></H2>
	where description is the content-description, if available, or
	"a body part of type image/gif" otherwise.

Then we can add a separate command that takes a link, opens it, and
pipes it through metamail.

Hmmm... I gotta go code this up!

Dan


From marca@wintermute.ncsa.uiuc.edu  Thu Nov 19 22:40:03 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17603; Thu, 19 Nov 92 22:40:03 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24645; Thu, 19 Nov 92 22:52:35 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA25390
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Thu, 19 Nov 92 15:51:57 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA11287; Thu, 19 Nov 92 15:53:01 -0800
Date: Thu, 19 Nov 92 15:53:01 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211192353.AA11287@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: marca@ncsa.uiuc.edu (Marc Andreessen), www-talk@nxoc01.cern.ch
Subject: Re: Freezing the HTML spec Re: Comments in HTML ? 
In-Reply-To: <9211192136.AA09136@pixel.convex.com>
References: <9211192130.AA10669@wintermute.ncsa.uiuc.edu>
	<9211192136.AA09136@pixel.convex.com>

Dan Connolly writes:
> 8. I'm browsing the annotated http://info.cern.ch/hypertext/WWW/MarkUp.html
> and I click on "Comments by connolly@convex.com". The browser contacts
> its NNTP server and grabs message-id.

But NNTP servers expire articles too quickly.

(Also, I just mutated metamail to handle x-html, like this:

in mailcap:

text/x-html; /usr/bin/X11/xterm -fn "*lucidatypewriter*medium*-14-*" -e /usr/local/bin/dowwwfile %s

in /usr/local/bin/dowwwfile:

#!/bin/sh
PATH=$PATH:/usr/local/bin
export PATH
cp $1 $1.html
WWW_HOME="file:$1.html"
export WWW_HOME
/usr/local/bin/www

It's a hack, but it's functional...)

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From K.Hoadley@directory.rl.ac.uk  Fri Nov 20 11:03:36 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00559; Fri, 20 Nov 92 11:03:36 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23066; Fri, 20 Nov 92 11:16:18 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <02476-0@directory.rl.ac.uk>; Fri, 20 Nov 1992 10:05:26 +0000
Date: Fri, 20 Nov 1992 09:55:41 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: Re: hangs/multiple servers
To: timbl@ch.cern.ch
Cc: K.Hoadley%UK.ac.RL.DIRECTORY@ac.uk, www-talk@ch.cern.ch
In-Reply-To: Tim Berners-Lee's message of Thu, 19 Nov 92 18:29:03 +0100: <9211191729.AA00355@www3.cern.ch>
Message-Id: <Ximap.722254606.1308.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

From: Tim Berners-Lee
> 
>Ok, This seems a bery good idea, if that is the functionality which DNS
>supports.
><practical>
>Let's try it.... Anyone care to mod HTTP.c? It's not obvious from
>the gethostbyname that one is allowed to refer to different
>machines:
>          struct    hostent {
>               char *h_name;  /* official name of host */
>               char **h_aliases;   /* alias list */
>               int  h_addrtype;    /* host address type */
>               int  h_length; /* length of address */
>               char **h_addr_list; /* list of addresses from name server */
>          };
> 
>That look like a list of aliases for one machine, rather than a
>list of machines for one alias! But maybe the reverse will work.

It is both; a list of alias names for a host, and a list of addresses
that correspond to the canonical name ...

>So all machines support char **h_addr_list rather than the older
>h_addr?   We can probably differentiate using #ifdef h_addr

Probably not, unfortunately

>which is set to a macro if there IS a list.  I assume you need then
>separate entries for the virtual duplicate node and the actual
>real nodes, so that you can speak to them sepately. Is this normal
>and OK?
Yes, you need seperate entires for the pseudo host and the real hosts
that are actually providing the service. This looks like the following:

www-server.foobar.domain.           A        1.2.3.4
                                    A        1.2.5.6
                                    A        1.2.7.8
aeschylus.foobar.domain.            A        1.2.3.4
euripides.foobar.domain.            A        1.2.5.6
sophocles.foobar.domain.            A        1.2.7.8

ie. the virtual hosts www-server appears to be multi-homed, but each
"home" is on a different real machine.

>Is this normal and OK

Well, it's technically acceptable, but it is hardly a normal requirement
in the first place.

There is one possible gotcha here: some machines verify DNS lookups
by checking the forward lookup against the reverse. In this case such
a check would fail, as the reverse is likely return either aeschylus,
euripides or sophocles (this depends on what you put in the relevant
in-addr.arpa domain, whcih is how reverse lookups work). I hope that
this checking is done by apps calling gethostbyaddr after each
gethostbyname, rather than being being built in gethostbyname

Adding support for multiple addresses into the clients is useful
anyway... if only to support real multihomed machines

Kevin Hoadley, Rutherford Appleton Laboratory, khoadley@ib.rl.ac.uk


From W.vanLeeuwen@nikhef.nl  Fri Nov 20 11:18:32 1992
Return-Path: <W.vanLeeuwen@nikhef.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00735; Fri, 20 Nov 92 11:18:32 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24662; Fri, 20 Nov 92 11:31:12 +0100
Received: by nikhefh.nikhef.nl; Fri, 20 Nov 92 11:30:56 +0100
Message-Id: <9211201030.AA00859@nikhefh.nikhef.nl>
Date: Fri, 20 Nov 92 11:30:56 +0100
From: W.vanLeeuwen@nikhef.nl (Willem van Leeuwen)
Organisation: Nikhef-H (National Institute for Nuclear and High-Energy Physics)
Address: Kruislaan 409, P.O. Box 41882, 1009 DB Amsterdam, the Netherlands
Phone: +31 20 5925013, +31 2995 2499 (home)
Telex: 10262 hef nl
Telefax: +31 20 5925155
To: www-talk@nxoc01.cern.ch
Subject: Hostname of www server
Cc: a03@nikhef.nl

It is becoming common practice to create aliases for hostnames which
reflect the service they provide.

Examples:
ftp	anonymous ftp server
news	news server

See the output of the host command:

[nikhefh] ##[1] host ftp
ftp.nikhef.nl       	CNAME	nikhefh.nikhef.nl
nikhefh.nikhef.nl   	A	192.16.199.1
[nikhefh] ##[2] host news
news.nikhef.nl      	CNAME	nikhefh.nikhef.nl
nikhefh.nikhef.nl   	A	192.16.199.1
[nikhefh] ##[3] host www
www.nikhef.nl       	CNAME	nic.nikhef.nl
nic.nikhef.nl       	A	192.16.199.49
[nikhefh] ##[4] host news.cern.ch
news.cern.ch        	CNAME	dxcern.cern.ch
dxcern.cern.ch      	A	128.141.201.96
[nikhefh] ##[5] host news.desy.de
news.desy.de        	CNAME	dscomsa.desy.de
dscomsa.desy.de     	A	131.169.1.165

We propose to use the alias www.organisation.country for machines running
the www server.
This makes the replacement of machines invisible for the users.

Best regards,

Willem van Leeuwen

From timbl@www3.cern.ch  Fri Nov 20 12:05:45 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00944; Fri, 20 Nov 92 12:05:45 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28870; Fri, 20 Nov 92 12:18:27 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00258; Fri, 20 Nov 92 12:13:59 +0100
Date: Fri, 20 Nov 92 12:13:59 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211201113.AA00258@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: Freezing the HTML spec Re: Comments in HTML ? 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

Dan, I agree with all your points. I have a few comments below.

> Date: Thu, 19 Nov 92 12:49:51 CST
> From: Dan Connolly <connolly@pixel.convex.com>
> 

...
> 	* Use the LineMode browser as a reference implementation.
> 	Try not to include features that www doesn't grok.

If there is a bug in the current W3 library, then we can fix that,
rather than work our way around tortuously. Like the problem
with elements not being allowed within anchors -- that had just never
been tested and happened to have a bug.
 


> 3. Revise the spec so that it's internally consistent. Right
> now, there are some glitches. And the current method of
> sending suggestions to Tim and hoping he finds time to make
> the edits is no good. Hmmm... we definitely need a CSCW
> strategy for group-editing of documents.

Don't we just!
If you can serve up a current version, then could you be editor?

> 4. Register the spec with the IANA or IETF or whatever.
> 

> Meanwhile, I think it's pretty important to fix the NeXT editor
> and all the files on info.cern.ch. Folks are using that as a
> reference, and perpetuating HTML that conflicts with the SGML
> standard.

Fixing the NeXTStep editor is the problem.
 > 

> SGML is a mess!
>

I agree. It is a political decsion to use it.  We should try to avoid
using weird constructs, though, so that HTML is as clean as possible
notwithstanding the SGML mess.
 

> >> Does any of the existing WWW code support comments ?
> >
> >As it happens, the current library supports them, so the line mdoe
> >browser and anything else based on the library does. But it has
> >been left out of the doc and so will probably me missing from other browers.
> >
> 

> Try the <? foo > construct.

The SGML systems at CERN use <? > for low-level commands, which I think
is what they were intended for, like embedded TeX or script commands.
Puttimng arbitrary comments in as processor instructions might cause
unpredicatble effects.  <comment>...</comment> is an easy thing to define,
use, doesn't use any features which some parsers don't have, and
is also rather self-explanarory.

> Dan
> 

> 

	Tim


From timbl@www3.cern.ch  Fri Nov 20 12:18:50 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00989; Fri, 20 Nov 92 12:18:50 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00495; Fri, 20 Nov 92 12:31:20 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00271; Fri, 20 Nov 92 12:26:47 +0100
Date: Fri, 20 Nov 92 12:26:47 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211201126.AA00271@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Re: Annotation 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


> 

> From: marca@ncsa.uiuc.edu (Marc Andreessen)
> 

(Annotation mechanism described)

> Drawbacks:
> 

> (a) Anyone who wishes to annotate a document must be running HTTP or
>     have some other way of making his annotation available as a
>     document from his machine to the web -- possibly too much grunge
>     work for real ``users'' as opposed to hackers.
> 


"Real users" are going to have to be able to publish easily anyway.
That means that future clients must have push-buttons for publishing.
The client will check whether there is a httpd running which gives
access to the document the guy has written. It it has, it allows
him to annotate other things with it. It also makes the background
a different colour depending on how public it is, maybe. Give people a secure  
feeling they know what is public and what ain't.

As there are 1001 ways of configuing a server now, this will mean that
we will have to define a way in which we recommend it is done by all but
the hacker group.  For example, we allow any user to create a ~/Public
directory (sorry, "folder") and copy or link in anything to be published.
The document name would be mapped from //machine/author/xxx to
~author/Public/xxx for example.

The client would check whether there was an httpd running which gave
access to the document, and if not would offer to run a simple
installation script if the guy has root access.  The httpd daemon code
would come bundled with the client, as well as the configuration file.

A start would be a server installation script.

	Tim

From connolly@pixel.convex.com  Fri Nov 20 21:48:36 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04035; Fri, 20 Nov 92 21:48:36 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA11241; Fri, 20 Nov 92 22:01:18 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA14497; Fri, 20 Nov 92 15:00:58 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA02019; Fri, 20 Nov 92 15:00:53 -0600
Message-Id: <9211202100.AA02019@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: K.Hoadley@directory.rl.ac.uk, www-talk@nxoc01.cern.ch
Subject: Re: Comments in HTML ? 
In-Reply-To: Your message of "Thu, 19 Nov 92 18:27:46 +0100."
             <9211191727.AA00350@www3.cern.ch> 
Date: Fri, 20 Nov 92 15:00:52 CST
From: Dan Connolly <connolly@pixel.convex.com>


I was wrong: <!-- comment foo --> _is_ recognized in the
instance, or so the standard and sgmls say.

I'm trying to put together a lex style specification of
the lexical elements of HTML. It will almost certainly
conflict with current usage.

But I think the reason current usage is broken is that
the SGML standard is so obtuse.

I believe if I write up a lex specification of exactly
what characters mean what and when, and it's only a
couple pages of lex code, the folks will implement
it faithfully.

As is is now, everybody just writes their own ad-hoc
finite state machine. That's too error prone.

Dan


From marca@wintermute.ncsa.uiuc.edu  Sat Nov 21 03:21:50 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05428; Sat, 21 Nov 92 03:21:50 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA14191; Sat, 21 Nov 92 03:34:37 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA26940
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 20 Nov 92 20:34:22 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA14749; Fri, 20 Nov 92 20:35:33 -0800
Date: Fri, 20 Nov 92 20:35:33 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211210435.AA14749@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: html-mode.el update 
In-Reply-To: <9211190454.AA08886@pixel.convex.com>
References: <9211190454.AA08886@pixel.convex.com>
	<9211190542.AA09366@wintermute.ncsa.uiuc.edu>

Dan Connolly writes:
> Here's a patch to add a function to fix all the existing HREFs in an
> HTML file so they'll have quotes around them. [...]

Quotes around HREF filenames break Midaswww at the moment.  Tony, is
it possible to fix that really quickly?  (Assuming there's a consensus
that HREF's should be quoted; the existing HTML I've seen doesn't do
this...)

This is important for other reasons too, which will be more obvious
with my next message :-).

Marc


From connolly@pixel.convex.com  Sat Nov 21 03:30:16 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05483; Sat, 21 Nov 92 03:30:16 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA16108; Sat, 21 Nov 92 03:42:59 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA25438; Fri, 20 Nov 92 20:42:41 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA12291; Fri, 20 Nov 92 20:42:40 -0600
Message-Id: <9211210242.AA12291@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: html-mode.el update 
In-Reply-To: Your message of "Fri, 20 Nov 92 20:35:33 PST."
             <9211210435.AA14749@wintermute.ncsa.uiuc.edu> 
Date: Fri, 20 Nov 92 20:42:40 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Quotes around HREF filenames break Midaswww at the moment.  Tony, is
>it possible to fix that really quickly?

The Midaswww SGML parser is pretty far off the beaten path. It shouldn't
be hard to fix (maybe I'll do it this weekend).

>  (Assuming there's a consensus
>that HREF's should be quoted; the existing HTML I've seen doesn't do
>this...)

That doesn't make it right! I'm trying to stamp out all this noisy
HTML, but I'm not having much luck.

The SGML standard is pretty clear on this stuff. I think we should
go with it.

Dan


From marca@wintermute.ncsa.uiuc.edu  Sat Nov 21 03:47:18 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05520; Sat, 21 Nov 92 03:47:18 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA19436; Sat, 21 Nov 92 04:00:01 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA27904
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 20 Nov 92 20:59:43 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA14826; Fri, 20 Nov 92 21:00:54 -0800
Date: Fri, 20 Nov 92 21:00:54 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211210500.AA14826@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: Annotation & asynch collaboration

I've patched httpd to allow remote annotations (an enabling mechanism
for asynchronous collaboration).  My httpd accepts the following
command:

ANNOTATE /file/to/annotate?/file/of/annotation?Text describing annotation.

The result of this command is that /file/to/annotate gets a single line
appended to it; this line is exactly:

<A HREF=/file/of/annotation>Text describing annotation.</A> <P>\n

Notice:

(1) '?' is used as the divider between ``keywords'', as it is with GET
    (for searches).  I'm content with overloading '?' (since it's
    already known to be safe, since it's not supposed to be part of a
    document ID), but other people might not be.  (If not '?', what?)
(2) /file/of/annotation can be any file with any access type, but is
    normally assumed to be a file residing on the annotator's local
    system and under her control.
(3) The new link can be arbitrarily named; it may be a good idea to
    have clients that implement annotation automatically prepend the
    annotator's full name to this field before sending it to httpd,
    but httpd shouldn't have to worry about this.

The security mechanism for this is as follows:

(1) A file to be annotated must ``pass'' the rules normally, and also:
(2) A new rule ``open'' is defined; it serves the same role (and has
    the same syntax) as ``pass'' except it determines whether a file
    can be annotated; and also:
(3) Since httpd is (or should be) normally run as 'nobody', the file
    must be writeable by 'nobody'.

This implementation does not cover informing the client whether or not
a file is ``open'' until an annotation is attempted.  That capability
should probably be addressed separately (??).

I'm sending the httpd patches to Tim tonight; unless there are
problems[1] with this approach, I'd love to see it implemented, and
I'll even set up the first annotatable web site...

Marc

[1] Dan will immediately notice that quotes aren't put around the HREF
field above.  At the moment, I'm going to run without them (since, for
one thing, I need to demo this with Midaswww on Monday), but the
official implementation should do the quotes.


From connolly@pixel.convex.com  Sat Nov 21 03:57:33 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05547; Sat, 21 Nov 92 03:57:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA21282; Sat, 21 Nov 92 04:10:18 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA25744; Fri, 20 Nov 92 21:10:01 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA13411; Fri, 20 Nov 92 21:09:59 -0600
Message-Id: <9211210309.AA13411@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Annotation & asynch collaboration 
In-Reply-To: Your message of "Fri, 20 Nov 92 21:00:54 PST."
             <9211210500.AA14826@wintermute.ncsa.uiuc.edu> 
Date: Fri, 20 Nov 92 21:09:59 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I've patched httpd to allow remote annotations (an enabling mechanism
>for asynchronous collaboration).  My httpd accepts the following
>command:
>
>ANNOTATE /file/to/annotate?/file/of/annotation?Text describing annotation.

I'd suggest

APPEND /file/to/annotate
<a HREF="file/of/annotation">Text describing annotation</a>
.

The server could impose limits on the length of the annotation,
and it should somehow validate the syntax, I suppose.

Dan

From marca@wintermute.ncsa.uiuc.edu  Sat Nov 21 04:04:57 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05567; Sat, 21 Nov 92 04:04:57 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA22777; Sat, 21 Nov 92 04:17:42 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA28422
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 20 Nov 92 21:17:25 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA14876; Fri, 20 Nov 92 21:18:36 -0800
Date: Fri, 20 Nov 92 21:18:36 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211210518.AA14876@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: marca@ncsa.uiuc.edu (Marc Andreessen), www-talk@nxoc01.cern.ch
Subject: Re: Annotation & asynch collaboration 
In-Reply-To: <9211210309.AA13411@pixel.convex.com>
References: <9211210309.AA13411@pixel.convex.com>
	<9211210500.AA14826@wintermute.ncsa.uiuc.edu>

Dan Connolly writes:
> >ANNOTATE /file/to/annotate?/file/of/annotation?Text describing annotation.
> 
> I'd suggest
> 
> APPEND /file/to/annotate
> <a HREF="file/of/annotation">Text describing annotation</a>
> .
> 
> The server could impose limits on the length of the annotation,
> and it should somehow validate the syntax, I suppose.

The point behind *not* doing general appends is that they aren't a
good idea since document integrity is breached (a link is immediately
obvious as just that and will cause little confusion [especially if
clients always prepend a fullname], but if arbitrary text can be added
to a document, you'll never know what's going on).  To be practical, I
know *I'm* not going to run an httpd server that allows anyone to
append any text they want to my documents.

And if general appends aren't going to be allowed (through server
validation of the <A...> syntax or whatever), then why not just let
the server construct the link append itself?

Marc


From connolly@pixel.convex.com  Sat Nov 21 04:11:37 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05603; Sat, 21 Nov 92 04:11:37 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24130; Sat, 21 Nov 92 04:24:23 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA26412; Fri, 20 Nov 92 21:24:04 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA13547; Fri, 20 Nov 92 21:24:03 -0600
Message-Id: <9211210324.AA13547@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Annotation & asynch collaboration 
In-Reply-To: Your message of "Fri, 20 Nov 92 21:18:36 PST."
             <9211210518.AA14876@wintermute.ncsa.uiuc.edu> 
Date: Fri, 20 Nov 92 21:24:02 CST
From: Dan Connolly <connolly@pixel.convex.com>


>(a link is immediately
>obvious as just that and will cause little confusion [especially if
>clients always prepend a fullname], but if arbitrary text can be added
>to a document, you'll never know what's going on).

I get it... It's just a way of saying "Mr. Fred has something to
say in response to this. Click here to see what."

It doesn't allow Mr. Fred to actually say anything right there.

You're right. Besides: I think we'd need more structure in our
markup to do arbirary annotations. For example, it would be nice
to be able to do:

<longquote FROM="http://somewhere/something">
<h3>blah blah</h3>
<dl>....</dl>
</longquote>

Dan


From marca@wintermute.ncsa.uiuc.edu  Sat Nov 21 04:16:22 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05620; Sat, 21 Nov 92 04:16:22 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24833; Sat, 21 Nov 92 04:29:06 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA28749
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 20 Nov 92 21:28:49 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA14941; Fri, 20 Nov 92 21:30:00 -0800
Date: Fri, 20 Nov 92 21:30:00 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211210530.AA14941@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: marca@ncsa.uiuc.edu (Marc Andreessen), www-talk@nxoc01.cern.ch
Subject: Re: Annotation & asynch collaboration 
In-Reply-To: <9211210324.AA13547@pixel.convex.com>
References: <9211210324.AA13547@pixel.convex.com>
	<9211210518.AA14876@wintermute.ncsa.uiuc.edu>

Dan Connolly writes:
> Besides: I think we'd need more structure in our markup to do
> arbirary annotations. For example, it would be nice to be able to
> do:
> 
> <longquote FROM="http://somewhere/something">
> <h3>blah blah</h3>
> <dl>....</dl>
> </longquote>

You're right....... it would be nice.  Maybe as a specialized solution
on isolated systems (or maybe the httpd authentication system should
be expanded to break down by domain or machine).  Hmmmm...

Marc


From connolly@pixel.convex.com  Sat Nov 21 06:03:10 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05950; Sat, 21 Nov 92 06:03:10 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA17366; Sat, 21 Nov 92 06:15:53 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA00842; Fri, 20 Nov 92 23:14:38 -0600
Received: by pixel.convex.com (5.64/1.28)
	id AA15421; Fri, 20 Nov 92 23:14:35 -0600
Date: Fri, 20 Nov 92 23:14:35 -0600
From: connolly@pixel.convex.com (Dan Connolly)
Message-Id: <9211210514.AA15421@pixel.convex.com>
Mime-Version: 1.0
To: www-talk@nxoc01.cern.ch
Subject: HTML spec part 1
Cc: connolly@pixel.convex.com
Content-Type: multipart/mixed;
	boundary="PART.BOUNDARY.25512.15400.pixel.722322875.1"

> THIS IS A MESSAGE IN 'MIME' FORMAT.  Your mail reader does not support MIME.
> Some parts of this will be readable as plain text.
> To see the rest, you will need to upgrade your mail reader.

--PART.BOUNDARY.25512.15400.pixel.722322875.1
Content-type: text/plain
Content-Transfer-Encoding: quoted-printable

<TITLE>HyperText Mark-up Language</TITLE>
<H1>Text and Markup</H1>
This is an explanation of SGML syntax as it applies to HTML. It is design=
ed to take section 7, "Element Structure" and reduce it fromthe abstract =
system that is SGML to a concrete languag, HTML.<P>
<H2><A NAME=3D"Tags">Tags</A>
</H2>
The characters in an SGML document are organized into a heirarchy of elem=
ents by the use of tags. An HTML tag has the form<P>
<DL><DT>start tag<DD>"&lt;" name s+ attribute* s* ">"<DT>end tag<DD>"&lt;=
/" name s* ">"<DT>name<DD>letter (letter | digit){0,7}<DT>For example,</D=
L>
<XMP><Title>Here's the title of the Document</title></XMP>
<XMP><h1 >A Heading</h1></XMP>
<XMP><a NAME=3Dfoo>This text is the content of an A element.</a></XMP>
<XMP><A HREF=3D"http://info.cern.ch/hypertext/WWW/TheProject.html"></XMP>=

<XMP>This text is a link to the WWW documentation. </a></XMP>
Element names are not case sensitive. They are restricted to eight charac=
ters or less.<P>
<H4>Open Issue: Length of Names</H4>
If we use the default SGML declaration, names are restricted to eight cha=
racters. Some SGML parsers don't support other SGML declarations.<P>
But most do, these days most SGML applications use a declaration with a l=
arger value of NAMELEN.<P>
The length of an attribute value literal is similarly limited to 240 char=
acters. This might be a problem with long URLs. I think we should change =
it.<P>
<H2>Attributes</H2>
Some elements have associated attributes. The start tag specifies the val=
ues of the attributes for an element.<P>
<DL><DT>attribute<DD>name s* "=3D" s* (token|literal)<DT>token<DD>(letter=
|digit){1,8}<DT>letter<DD>[a-zA-Z]<DT>digit<DD>[0-9]<DT>literal<DD>'"' [^=
"]{0,240} '"' | "'" [^']{0,240} "'"</DL>
Each attribute of each element has a declared type. <P>
<H4>Open Issue: Anchor Names: NMTOKEN or ID?</H4>
The names of anchors within an HTML document should be unique. We can use=
 the SGML ID mechanism to specify this.<P>
But SGML IDs are names; that is, they start with a letter. Many HTML prod=
ucers use numbers for anchor names.<P>
<H4>Open Issue: Interpretation of Literals</H4>
Section 7.9.3 of the SGML standard states<P>
<UL><LI>An attribute value literal is interpreted as an attribute value b=
y replacing references within it, ignoring Ee and RS, and replacing RE or=
 SEPCHAR with SPACE.</UL>
For the SGML-impared, Ee is Entity End (like EOF); RS is '\n'; RE is '\r'=
; SEPCHAR is '\t' and SPACE is ' '.<P>
Since to date there are no HTML attributes containing newlines or spaces,=
 that is not much of an issue.<P>
But replacement of literals is. For one thing, this creates an interactio=
n between the syntax of URLs and SGML syntax. We could resolve this issue=
 by removing '&amp;' from <A HREF=3D"http://info.cern.ch/hypertext/WWW/Ad=
dressing/BNF.html#xalpha">the URL syntax</A>
=2E<P>
<H4>Historical Note</H4>
The NeXT implementation of the WWW browser, responsible for the creation =
of much of the existing HTML, does not surround attribute literals with q=
uotes. These productions describe the syntax produced by the NeXT:<P>
<DL><DT>NXattribute<DD>name "=3D" NXliteral<DT>NXliteral<DD> [^ >]+</DL>
<H2>Normal Text: #PCDATA</H2>
The symbol #PCDATA stands for parsed character data, the normal text char=
acters in an SGML document.<P>
The text consists of a stream of lines.The division into lines has no sig=
nificance apart from indicating a word end.<P>
The following character sequences are recognized as markup in #PCDATA:<P>=

<DL><DT>&lt;[a-zA-Z]<DD>"&lt;" serves as the Start Tag Open delimiter whe=
n followed by a letter. It is used to introduct <A HREF=3D"#Tags">tags</A=
>
 that start elements.<DT>&lt;/[a-zA-Z]<DD>"&lt;/" serves as the End Tag O=
pen delimiter when followed by a letter. It is used to introduce tags tha=
t terminate elements.<DT>&lt;!(--)([A-Za-z])([)<DD>"&lt;!" serves as the =
Markup Declaration Open delimiter when followed by a letter or "--" or "[=
". It has several uses in SGML. The only purpose it serves in HTML is to =
introduce comments.<DT>&amp;[a-zA-z]<DD>"&amp;" serves as the Entity Refe=
rence Open delimiterwhen followed by a letter. It is used to introduce en=
tities, or "macros." <DT>&amp;#[0-9A-Za-z]<DD>"&amp;#" followed by a lett=
er or a digit is the Character Reference Open delimiter. SGML idioms incl=
ude things like "&amp;#168;" and "&amp;#SPACE;". It is not used in HTML.<=
DT>]]><DD>"]]" when followed by ">" is Marked Section Close. While marked=
 sections are not used by SGML, this sequence of characters is recognized=
 and reported as an error by conforming SGML parsers.</DL>
<H4>Note to HTML Producers</H4>
Note that conforming SGML parsers will treat "&amp;", "&lt;", "&lt;/", an=
d "&lt;!" as normal text characters when they are not followed by a lette=
r. HTML producers are discouraged from taking advantage of this feature.<=
P>
All occurrences of the characters '&amp;' and '&lt;' should be represente=
d by <A HREF=3D"#Entities">entities</A>
=2E The marked section close delimiter can be avoided if all occurrences =
of '>' are represented by entities.<P>
 While the division of the stream of characters into lines is arbitrary, =
the recommended line length is 72 characters in order to allow the text t=
o be passed through systems which can only handle text with a limited lin=
e length.<P>
<H2>Literal Text: #RCDATA</H2>
The symbol #RCDATA stands for replaceable character data, the text withou=
t tags in an SGML document. It is used in HTML for sections where line br=
eaks and character widths are significant.<P>
Only the entity reference and end tag open delimiters are recognized in #=
RCDATA.<P>
Replaceable character data should be displayed in a fixed width font, so =
that any formatting done by character spacing on successive lines will be=
 maintained.<P>
The ASCII Horizontal Tab (HT) character should be interpreted as the smal=
lest positive nonzero number of spaces which will leave the number of cha=
racters so far on the line as a multiple of 8. Its use is not recommended=
 however.<P>
<H4>Historical Note</H4>
The original definition of literal text is not representable in SGML. Fro=
m <A HREF=3D"http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html">Tags use=
d in HTML</A>
:<P>
<UL><LI>The text may contain any ISO Latin printable characters, includin=
g the tag opener, so long as it does not contain the closing tag in full.=
 </UL>
But in section 7.6 of the SGML standard:<P>
<UL><LI>The content of an element declared to be character data or replac=
eable character data is terminated only by an etago delimiter-in-context =
(which need not open a valid end-tag) ... .</UL>
This definition is a compromise: it allows most markup to be ignored, but=
 where the string "&lt;/" is needed, it can be represented as "&amp;lt;/"=
=2E We will probaly end up with some systems that display "&amp;lt;/" rat=
her than "&lt;/".<P>
<H2><A NAME=3D"Entities">Entities</A>
</H2>
In order to include characters that would otherwise be treated as markup,=
 SGML entity references refer to arbitrary sequences of characters. An HT=
ML entity reference has the form:<P>
<DL><DT>entity reference<DD>"&amp;" name ";"<DT>Entity names are case sen=
sitive.</DL>
<H4>Open Issue: Character Set</H4>
The default SGML declaration specifies ISO 646-1983 as the character set.=
 I believe it's straight forward to specify ISO Latin 1 in the SGML decla=
ration for HTML, but it's not clear that this is a good idea.<P>
The SGML standard includes a set of entities for ISO Latin 1 characters a=
s public text. For example, &amp;OElig is the OE ligature. If we include =
these entities in the HTML DTD, we could support Latin 1 characters while=
 maintaining a 7 bit language. This would require a table of the entity n=
ames in WWW clients.<P>


--PART.BOUNDARY.25512.15400.pixel.722322875.1
Content-type: text/plain

/*
Copyright (c) 1991 Bell Communications Research, Inc. (Bellcore)

Permission to use, copy, modify, and distribute this material 
for any purpose and without fee is hereby granted, provided 
that the above copyright notice and this permission notice 
appear in all copies, and that the name of Bellcore not be 
used in advertising or publicity pertaining to this 
material without the specific, prior written permission 
of an authorized representative of Bellcore.  BELLCORE 
MAKES NO REPRESENTATIONS ABOUT THE ACCURACY OR SUITABILITY 
OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED "AS IS", 
WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
*/
#include <stdio.h>

#define BASE64 1
#define QP 2 /* quoted-printable */

main(argc, argv)
int argc;
char **argv;
{
    int encode = 1, which = BASE64, i;
    FILE *fp = stdin;

    for (i=1; i<argc; ++i) {
        if (argv[i][0] == '-') {
            switch (argv[i][1]) {
                case 'u':
                    encode = 0;
                    break;
                case 'q':
                    which = QP;
                    break;
                case 'b':
                    which = BASE64;
                    break;
		default:
                    fprintf(stderr,
                       "Usage: mmencode [-u] [-q] [-b] [file name]\n");
                    exit(-1);
            }
        } else {
            fp = fopen(argv[i], "r");
            if (!fp) {
                perror(argv[i]);
                exit(-1);
            }
        }
    }
    if (which == BASE64) {
        if (encode) to64(fp, stdout); else from64(fp, stdout, NULL, 0);
    } else {
        if (encode) toqp(fp, stdout); else fromqp(fp, stdout, NULL, 0);
    }
    return(0);
}


--PART.BOUNDARY.25512.15400.pixel.722322875.1
Content-type: text/plain

/*
Copyright (c) 1991 Bell Communications Research, Inc. (Bellcore)

Permission to use, copy, modify, and distribute this material 
for any purpose and without fee is hereby granted, provided 
that the above copyright notice and this permission notice 
appear in all copies, and that the name of Bellcore not be 
used in advertising or publicity pertaining to this 
material without the specific, prior written permission 
of an authorized representative of Bellcore.  BELLCORE 
MAKES NO REPRESENTATIONS ABOUT THE ACCURACY OR SUITABILITY 
OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED "AS IS", 
WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
*/
#include <stdio.h>
#include <ctype.h>
#include <config.h>

extern char *index();
static char basis_64[] =
   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

static char index_64[128] = {
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,62, -1,-1,-1,63,
    52,53,54,55, 56,57,58,59, 60,61,-1,-1, -1,-1,-1,-1,
    -1, 0, 1, 2,  3, 4, 5, 6,  7, 8, 9,10, 11,12,13,14,
    15,16,17,18, 19,20,21,22, 23,24,25,-1, -1,-1,-1,-1,
    -1,26,27,28, 29,30,31,32, 33,34,35,36, 37,38,39,40,
    41,42,43,44, 45,46,47,48, 49,50,51,-1, -1,-1,-1,-1
};

#define char64(c)  (((c) < 0 || (c) > 127) ? -1 : index_64[(c)])

/*
char64(c)
char c;
{
    char *s = (char *) index(basis_64, c);
    if (s) return(s-basis_64);
    return(-1);
}
*/

to64(infile, outfile) 
FILE *infile, *outfile;
{
    int c1, c2, c3, ct=0;
    while ((c1 = getc(infile)) != EOF) {
        c2 = getc(infile);
        if (c2 == EOF) {
            output64chunk(c1, 0, 0, 2, outfile);
        } else {
            c3 = getc(infile);
            if (c3 == EOF) {
                output64chunk(c1, c2, 0, 1, outfile);
            } else {
                output64chunk(c1, c2, c3, 0, outfile);
            }
        }
        ct += 4;
        if (ct > 71) {
            putc('\n', outfile);
            ct = 0;
        }
    }
    if (ct) putc('\n', outfile);
    fflush(outfile);
}

output64chunk(c1, c2, c3, pads, outfile)
FILE *outfile;
{
    putc(basis_64[c1>>2], outfile);
    putc(basis_64[((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4)], outfile);
    if (pads == 2) {
        putc('=', outfile);
        putc('=', outfile);
    } else if (pads) {
        putc(basis_64[((c2 & 0xF) << 2) | ((c3 & 0xC0) >>6)], outfile);
        putc('=', outfile);
    } else {
        putc(basis_64[((c2 & 0xF) << 2) | ((c3 & 0xC0) >>6)], outfile);
        putc(basis_64[c3 & 0x3F], outfile);
    }
}

PendingBoundary(s, Boundaries, BoundaryCt)
char *s;
char **Boundaries;
int *BoundaryCt;
{
    int i;

    for (i=0; i < *BoundaryCt; ++i) {
        if (!strncmp(s, Boundaries[i], strlen(Boundaries[i]))) {
            char Buf[2000];
            strcpy(Buf, Boundaries[i]);
            strcat(Buf, "--\n");
            if (!strcmp(Buf, s)) *BoundaryCt = i;
            return(1);
        }
    }
    return(0);
}

from64(infile, outfile, boundaries, boundaryct) 
FILE *infile, *outfile;
char **boundaries;
int *boundaryct;
{
    int c1, c2, c3, c4;
    int newline = 1, DataDone = 0;

    while ((c1 = getc(infile)) != EOF) {
        if (isspace(c1)) {
            if (c1 == '\n') {
                newline = 1;
            } else {
                newline = 0;
            }
            continue;
        }
        if (newline && boundaries && c1 == '-') {
            char Buf[200];
            /* a dash is NOT base 64, so all bets are off if NOT a boundary */
            ungetc(c1, infile);
            fgets(Buf, sizeof(Buf), infile);
            if (boundaries
                 && (Buf[0] == '-')
                 && (Buf[1] == '-')
                 && PendingBoundary(Buf, boundaries, boundaryct)) {
                return;
            }
            fprintf(stderr, "Ignoring unrecognized boundary line: %s\n", Buf);
            continue;
        }
        if (DataDone) continue;
        newline = 0;
        do {
            c2 = getc(infile);
        } while (c2 != EOF && isspace(c2));
        do {
            c3 = getc(infile);
        } while (c3 != EOF && isspace(c3));
        do {
            c4 = getc(infile);
        } while (c4 != EOF && isspace(c4));
        if (c2 == EOF || c3 == EOF || c4 == EOF) {
            fprintf(stderr, "Premature EOF!\n");
            return;
        }
        if (c1 == '=' || c2 == '=') {
            DataDone=1;
            continue;
        }
        c1 = char64(c1);
        c2 = char64(c2);
        putc(((c1<<2) | ((c2&0x30)>>4)), outfile);
        if (c3 == '=') {
            DataDone = 1;
        } else {
            c3 = char64(c3);
            putc((((c2&0XF) << 4) | ((c3&0x3C) >> 2)), outfile);
            if (c4 == '=') {
                DataDone = 1;
            } else {
                c4 = char64(c4);
                putc((((c3&0x03) <<6) | c4), outfile);
            }
        }
    }
}

static char basis_hex[] = "0123456789ABCDEF";
static char index_hex[128] = {
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
     0, 1, 2, 3,  4, 5, 6, 7,  8, 9,-1,-1, -1,-1,-1,-1,
    -1,10,11,12, 13,14,15,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,10,11,12, 13,14,15,-1, -1,-1,-1,-1, -1,-1,-1,-1,
    -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1, -1,-1,-1,-1
};

#define hexchar(c)  (((c) < 0 || (c) > 127) ? -1 : index_hex[(c)])

/*
hexchar(c)
char c;
{
    char *s;
    if (islower(c)) c = toupper(c);
    s = (char *) index(basis_hex, c);
    if (s) return(s-basis_hex);
    return(-1);
}
*/

toqp(infile, outfile) 
FILE *infile, *outfile;
{
    int c, ct=0, prevc=255;
    while ((c = getc(infile)) != EOF) {
        if ((c < 32 && (c != '\n' && c != '\t'))
             || (c == '=')
             || (c >= 127)
             /* Following line is to avoid single periods alone on lines,
               which messes up some dumb smtp implementations, sigh... */
             || (ct == 0 && c == '.')) {
            putc('=', outfile);
            putc(basis_hex[c>>4], outfile);
            putc(basis_hex[c&0xF], outfile);
            ct += 3;
            prevc = 'A'; /* close enough */
        } else if (c == '\n') {
            if (prevc == ' ' || prevc == '\t') {
                putc('=', outfile); /* soft & hard lines */
                putc(c, outfile);
            }
            putc(c, outfile);
            ct = 0;
            prevc = c;
        } else {
            putc(c, outfile);
            ++ct;
            prevc = c;
        }
        if (ct > 72) {
            putc('=', outfile);
            putc('\n', outfile);
            ct = 0;
            prevc = '\n';
        }
    }
    if (ct) {
        putc('=', outfile);
        putc('\n', outfile);
    }
}

fromqp(infile, outfile, boundaries, boundaryct) 
FILE *infile, *outfile;
char **boundaries;
int *boundaryct;
{
    int c1, c2, sawnewline = 1;

    while ((c1 = getc(infile)) != EOF) {
        if (sawnewline && boundaries && (c1 == '-')) {
            char Buf[200], *s;

            ungetc(c1, infile);
            fgets(Buf, sizeof(Buf), infile);
            if (boundaries
                 && (Buf[0] == '-')
                 && (Buf[1] == '-')
                 && PendingBoundary(Buf, boundaries, boundaryct)) {
                return;
            }
            /* Not a boundary, now we must treat THIS line as q-p, sigh */
            for (s=Buf; *s; ++s) {
                if (*s == '=') {
                    if (!*++s) break;
                    if (*s == '\n') {
                        /* ignore it */
                        sawnewline = 1;
                    } else {
                        c1 = hexchar(*s);
                        if (!*++s) break;
                        c2 = hexchar(*s);
                        putc(c1<<4 | c2, outfile);
                    }
                } else {
                    putc(*s, outfile);
                }
            }
        } else {
            sawnewline = (c1 == '\n') ? 1 : 0;
            if (c1 == '=') {
                c1 = getc(infile);
                if (c1 == '\n') {
                    /* ignore it */
                    sawnewline = 1;
                } else {
                    c2 = getc(infile);
                    c1 = hexchar(c1);
                    c2 = hexchar(c2);
                    putc(c1<<4 | c2, outfile);
                    if (c2 == '\n') sawnewline = 1;
                }
            } else {
                putc(c1, outfile);
            }
        }
    }
}

--PART.BOUNDARY.25512.15400.pixel.722322875.1--

From connolly@pixel.convex.com  Sat Nov 21 06:05:14 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05964; Sat, 21 Nov 92 06:05:14 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA17642; Sat, 21 Nov 92 06:17:56 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA00995; Fri, 20 Nov 92 23:17:38 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA15508; Fri, 20 Nov 92 23:17:37 -0600
Message-Id: <9211210517.AA15508@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: about HTML spec part 1
Date: Fri, 20 Nov 92 23:17:36 CST
From: Dan Connolly <connolly@pixel.convex.com>

In case you're at a loss to read it... take a look toward the end.
I included the source for mmencode, which can be used to decode
the first part.

Dan

From jim@wilbur.njit.edu  Sat Nov 21 23:21:34 1992
Return-Path: <jim@wilbur.njit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08913; Sat, 21 Nov 92 23:21:34 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24987; Sat, 21 Nov 92 23:34:17 +0100
Received: by njitgw.njit.edu (5.57/Ultrix3.0-C)
	id AA16031; Sat, 21 Nov 92 17:33:39 -0500
Message-Id: <9211212233.AA16031@njitgw.njit.edu>
Received: by wilbur.njit.edu; Sat, 21 Nov 92 17:32:08 est
Date: Sat, 21 Nov 92 17:32:08 est
From: jim@wilbur.njit.edu (Jim Whitescarver)
To: www-talk@nxoc01.cern.ch
Subject: ScreenMode binaries, man page reader, experimental server

The ScreenMode w3 interface is available via anonymous ftp from 
wilbur.njit.edu in dist/w3.  The Sun and Dec versions are a bit out
of date, so plan to get a new one soon,  only the HP version is up
to date.  This is still a prerelease version.

We have an experimental server for our CWIS plus a special gateway
server.  The ScreenMode interface can still be access via telnet to
eies2.njit.edu with the login www.  You can try the manual page reader
their, or via http://eies2:1234/man.  We make extensive use of the <PRE>
tag for preformatted text.  Much of our hypertext, including the manual
pages, will not be formatted properly unless you use one of our readers,
or another reader modifies to support <PRE>.

The preformatted tag, PRE, unlike <PLAINTEXT>, allows anchors etc. to be 
inserted in text that is already formatted.  It greatly simplifies the
task of importing text from independant applications will anchors
everywhere you want them.  In addition, we have a set of macros for
MS-word which allow editing HTML in WYSIWYG fashion, but this also
requires support of the preformatted tag in HTML.

Al Leurck (al@eies2.njit.edu) developed the PRE tag and MS-word macros
here in the ScreenMode interface and we are adding it to the tkWWW X
interface.

We plan to impliment group hypertext using a mail server to suppliment
the HPPT access protocol.  Readers can contribute anchors to a text via
mail to www at the server machine.  Our browsers will support this
transparently.  Later we hope to participate in a broader effort to
include SGML tags to support forms, for truely interactive hypertext.

From marca@wintermute.ncsa.uiuc.edu  Sun Nov 22 00:26:53 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09029; Sun, 22 Nov 92 00:26:53 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA27459; Sun, 22 Nov 92 00:39:42 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA11990
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Sat, 21 Nov 92 17:39:27 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA17535; Sat, 21 Nov 92 17:40:39 -0800
Date: Sat, 21 Nov 92 17:40:39 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211220140.AA17535@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: ScreenMode binaries, man page reader, experimental server
In-Reply-To: <9211212233.AA16031@njitgw.njit.edu>
References: <9211212233.AA16031@njitgw.njit.edu>

Jim Whitescarver writes:
> The preformatted tag, PRE, unlike <PLAINTEXT>, allows anchors etc. to be 
> inserted in text that is already formatted.  It greatly simplifies the
> task of importing text from independant applications will anchors
> everywhere you want them.

This looks like a really good idea... is it too late to add it to the
(almost frozen?) HTML spec?

Marc


From K.Hoadley@directory.rl.ac.uk  Mon Nov 23 10:43:45 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13349; Mon, 23 Nov 92 10:43:45 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28753; Mon, 23 Nov 92 10:56:09 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <03870-0@directory.rl.ac.uk>; Mon, 23 Nov 1992 09:44:57 +0000
Date: Mon, 23 Nov 1992 09:41:58 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: Re: hangs/multiple servers
To: timbl@ch.cern.ch
Cc: K.Hoadley%UK.ac.RL.DIRECTORY@ac.uk, www-talk@ch.cern.ch
In-Reply-To: Tim Berners-Lee's message of Fri, 20 Nov 92 18:29:06 +0100: <9211201729.AA00822@www3.cern.ch>
Message-Id: <Ximap.722512657.5851.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Tim Berners-Lee said:
>But it seems feasable.  Maybe we can try it out with some non top-level
>domain
>and when it works register a www.net or maybe just a .www.  :-)

Trying it out is no problem; there are plenty of friendly DNS admins around
(including me ...). In the longer term it would have to be www.net rather
than just .www.
 
>Now, as you point out, we need some mirroring software.  (Ed, you know
>of any?)

Mirroring is a difficult problem, eg should the secondaries poll the
primary to pick up new copies, or should the primary push changes out
to the secondaries ? Should you tranfser entire copies of a server's data
(needed when bringing up a new secondary) or should you just transfer
deltas ? 

For mirroring to work well it needs to be part of the protocol. Maybe
something for HTTP3 .... ?
 
>Rather than just retry another IP address on error on the first, which would
>be slow because of the long tcp timeout, a better method would be, the first
>time a client encounters a given server with >1 IP address, to ping 
>all of them
>wait for any reply packet and take the winner, then connect to that. Solves
>the traffic reduction and the reliability in one swell foop.

One way to do this is to create a number of sockets, one per address,
mark them all as non-blocking, connect() to each of the addresses and 
then select(), ie. send out parallel connection requests and take the first
(even if all connections get established before we process the select(),
that is only three packets per connection).

This method solves the problem of finding the nearest server, and also
the problem of asynch connects mentioned earlier re: midas: just set a
suitable timeout on the select call.

Kevin

From dsr@hplb.hpl.hp.com  Mon Nov 23 11:41:11 1992
Return-Path: <dsr@hplb.hpl.hp.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13554; Mon, 23 Nov 92 11:41:11 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA06973; Mon, 23 Nov 92 11:53:34 +0100
Received: from dragget.hpl.hp.com by hplb.hpl.hp.com; Mon, 23 Nov 92 10:51:36 GMT
Received: by manuel.hpl.hp.com
	(16.6/15.6+ISC) id AA12224; Mon, 23 Nov 92 10:51:29 GMT
From: Dave_Raggett <dsr@hplb.hpl.hp.com>
Message-Id: <9211231051.AA12224@manuel.hpl.hp.com>
Subject: Different forms of Annotations
To: timbl@nxoc01.cern.ch
Date: Mon, 23 Nov 92 10:51:26 GMT
Cc: www-talk@nxoc01.cern.ch
Mailer: Elm [revision: 66.25]

It seems to me that there are several flavours of useful annotations:

News style "responses"     (similar to Dan Connolly's suggestion)
======================

Here people can post responses to documents. This could be restricted to
a special class of discussion documents or it could be completely open
mechanism allowing responses to any document.

You would read the original document and then compose a response (as an
ordinary html document). The response is then notified to the server owning
the original document. The notification is either a copy of the response
document or a http-like reference to it.

When people next read the original document, the browser shows that a response
has been posted. This is read by clicking the "view next response" button
which could be part of the browser's user interface or a link in the document.

If the server had write permission it could modify the original document to
include a link to the list of responses. By using a hidden link, i.e. a
different tag than <A>, the browser could indicate that the document had
one or more responses, without regard to where they are placed in the
documents text itself.

In my opinion, a better approach is for the server to keep a directory of
which documents have responses, and to add the information dynamically when
sending the original document (caching could be used to avoid the directory
look-up penalty for popular documents). The response info could be sent as
part of the document or via additional parameters.

This mechanism works even when the server doesn't have write access, and can
take advantage of broadcast protocols like news. Dan's suggestion is fine in
the short term, but I think we need to think about this in more depth,
without restricting ourselves to using only the current protocol
infrastructure. I am particularly enamoured by ANSA's trading mechanism as a
means of managing the caching of documents and responses, but haven't the time
to elaborate on this right now.

One thing we should consider ASAP is to include details of document creation
or last  modification date/time. This is essential for purging/refreshing
cache information. I also think it would be a good idea to include the
requestors identity in the request formats sent to servers, going beyond the
internet address info. This would be really helpful for supporting
closed-readership groups.

Direct Annotations (Post Its)
=============================

These are notes which appear in place when you read the original document,
although in some cases you might need to click on a postIt button to see the
actual note which then appears as a pop-up (pale yellow?) window. These may
be penned handwritten comments, or short voice annotations. I can easily
imagine people wanting to using conventional proof-reading marks.

The annotations are attached to anchors within documents - either
pre-existing anchors or via pattern matching. In either approach problems may
occur when the original document is modified. A heuristic pattern maching
approach would be reasonably insensitive to insertions and small changes in
the region of attachment - you don't need an absolute match!

This flavour of annotations can be managed in a simlar way to the previous
style. 

General Revision Histories
==========================

A third flavour of annotions, is to keep a revision history of changes to
documents. A check-out/check-in mechanism can be used to avoid the need for a
branching structure caused by people independently modifying the same version.


Dave Raggett,

HP Labs, Bristol, UK   (dsr@hplb.hpl.hp.com) +44 272 228046

From dsr@hplb.hpl.hp.com  Mon Nov 23 12:13:05 1992
Return-Path: <dsr@hplb.hpl.hp.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13670; Mon, 23 Nov 92 12:13:05 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA12855; Mon, 23 Nov 92 12:25:50 +0100
Received: from dragget.hpl.hp.com by hplb.hpl.hp.com; Mon, 23 Nov 92 11:23:55 GMT
Received: by manuel.hpl.hp.com
	(16.6/15.6+ISC) id AA12237; Mon, 23 Nov 92 11:23:48 GMT
From: Dave_Raggett <dsr@hplb.hpl.hp.com>
Message-Id: <9211231123.AA12237@manuel.hpl.hp.com>
Subject: Supporting the Book metaphor
To: timbl@nxoc01.cern.ch
Date: Mon, 23 Nov 92 11:23:46 GMT
Cc: www-talk@nxoc01.cern.ch
Mailer: Elm [revision: 66.25]

It seems to me that the Web in its current state is missing out on ideas
from reseach into hypertext systems. Currently there is only a simple link
mechanism taking you to other documents, and a crude keyword search mechanism.
I would like to suggest some extensions which would greatly enrich the
capabilities of the web:

Pictures
========

We want to have documents with pictures in them, that appear and are
formatted as part of the document. A reasonable way of doing this would
be to include references in html documents to objects which should be
displayed as part of the document, but which aren't part of html itself.
It seems sensible to support a variety of formats: TIFF, GIFF, DIBs
Fax group III/IV, CGM etc. The idea of embedded objects which return their
size and can display themselves at a given location seems appropriate.

The client doesn't know in advance about these embedded objects, it therefore
makes sense for the server to be able to append them to the requested html
document so as to avoid a further network loop delay for retrieving them.
If you are interested, we can discuss ideas for how to modify the http
protocol to support this.

The Book Metaphor
=================

Books are very familiar to all of us, and come with a conceptual apparatus
including:

    o   title
    o   author
    o   publication date
    o   copyright
    o   contents
    o   chapters
    o   sections
    o   pages
    o   index
    o   glossary

It would be great to extend html to support these. My suggestion is to have
special documents which group these elements together. These documents are in
sgml and include the above information, either directly or by reference.

The browser recognises the type of these documents and uses them to provide a
browsing context. Thus you can show a button bar with buttons for showing the
contents, the index, the glossary and <<, >> controls for moving sequentially
between pages or chapters. I have lots of ideas for handling glossaries and
indexes and will elaborate in a subsequent note.

While it is possible to add special references from documents to the index,
and next/previous document, it is preferable to hold these separately. You can
then use the same document without modifications in a whole variety of books,
magazines etc. This approach is much richer than simple lists of chapters.

To implement this we only need to agree on the sgml dtd and document type!
I will try to get down to this, but am rather busy right now.


Dave Raggett

HP Labs, Bristol, UK.   (dsr@hplb.hpl.hp.com)  +44 272 228046

From connolly@pixel.convex.com  Mon Nov 23 14:03:52 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14171; Mon, 23 Nov 92 14:03:52 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA00377; Mon, 23 Nov 92 14:16:40 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA20526; Mon, 23 Nov 92 07:16:03 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA15699; Mon, 23 Nov 92 07:16:21 -0600
Message-Id: <9211231316.AA15699@pixel.convex.com>
To: Dave_Raggett <dsr@hplb.hpl.hp.com>
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: Re: Supporting the Book metaphor 
In-Reply-To: Your message of "Mon, 23 Nov 92 11:23:46 GMT."
             <9211231123.AA12237@manuel.hpl.hp.com> 
Date: Mon, 23 Nov 92 07:16:20 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Pictures
>========

Answer: MIME. I coded a prototype replacement for
HTParseFormat that groks several mime formats, including
text/plain, text/x-html, message/rfc-822, message/external-body,
and multipart/mixed. We just need to add plug-and-play modules
for other MIME types like image/gif, image/x-tiff, etc.

More on that after I get some sleep and write it up...

>The Book Metaphor
>=================
>
Answer: The DocBook DTD from O'Reilly and HaL.

It's an SGML DTD, but it's not as simple as HTML. We need
to get serious about supporting SGML.

I've spent the whole last week with my nose in the SGML
standard. I think I've got a handle on it now.

I've written some code to do the low-level reading of
SGML. It's reentrant, doesn't use malloc(), and
completely conforms to the SGML standard (except for
marked sections and wierd newline conventions).

I even added a couple work-arounds for the problems with
existing HTML data.

And -- I integrated it into the MidasWWW browser. Works great.
I hope to sync up with the author soon.

I'm looking at integrating this SGML_read library into the
linemode browser, but the linemode code isn't reentrant,
and that makes life hard.

What other HTML parsing engines do we have out there?

Tim: you said something about the NeXT editor being hard
to fix. Why is that? It looks like there are three lines
in HTParse.h that write the HREF=foo attributes. I'll send
you patches if you like (though I can't test them -- no NeXT!)

Dan


From bobw@csg.uwaterloo.ca  Mon Nov 23 16:01:33 1992
Return-Path: <bobw@csg.uwaterloo.ca>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14899; Mon, 23 Nov 92 16:01:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA13421; Mon, 23 Nov 92 16:13:26 +0100
Received: by csg.uwaterloo.ca
	id <AA20554>; Mon, 23 Nov 92 10:11:57 -0500
From: Bob Wildfong <bobw@csg.uwaterloo.ca>
Message-Id: <9211231511.AA20554@csg.uwaterloo.ca>
Subject: Embedded graphics (was Re: Book metaphor)
To: dsr@hplb.hpl.hp.com (Dave_Raggett)
Date: Mon, 23 Nov 92 10:11:56 EST
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: <9211231123.AA12237@manuel.hpl.hp.com>; from "Dave_Raggett" at Nov 23, 92 11:23 am
X-Mailer: ELM [version 2.3 PL11]

> 
> Pictures
> ========

> It seems sensible to support a variety of formats: TIFF, GIFF, DIBs
> Fax group III/IV, CGM etc. The idea of embedded objects which return their
> size and can display themselves at a given location seems appropriate.
> 
> The client doesn't know in advance about these embedded objects, it therefore
> makes sense for the server to be able to append them to the requested html
> document so as to avoid a further network loop delay for retrieving them.
> 
> Dave Raggett
> 
> HP Labs, Bristol, UK.   (dsr@hplb.hpl.hp.com)  +44 272 228046


I've been through this line of thought in a hypertext/electronic book project.
Yes, it's more efficient to include the graphics in the HTML data stream, but
only if you just have one version (format) for each graphic.

We found it best in the long run to provide our embedded graphics in several
formats, and allow the client to choose the format most appropriate for its
output device (e.g. 8-bit vs 24-bit colour, Postscript if the device supports
it, WMF if the client is running the Microsoft Windows version of the viewer
program, etc).

The server sends a list of available formats and the client requests the
graphic file that it prefers.  This permits the best available graphic quality
on each of several possible output devices, but imposes an extra network delay.
Still, graphic files tend to be pretty big, so the extra delay is only a few
% of the file's download time.

 
Bob Wildfong                                       bobw@csg.uwaterloo.ca
Waterloo, Ontario                                  bobw@csg.waterloo.edu
#include <stddisclaimer.h>


From dsr@hplb.hpl.hp.com  Mon Nov 23 16:19:32 1992
Return-Path: <dsr@hplb.hpl.hp.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14981; Mon, 23 Nov 92 16:19:32 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA15236; Mon, 23 Nov 92 16:31:44 +0100
Received: from dragget.hpl.hp.com by hplb.hpl.hp.com; Mon, 23 Nov 92 15:29:20 GMT
Received: by manuel.hpl.hp.com
	(16.6/15.6+ISC) id AA13659; Mon, 23 Nov 92 15:29:13 GMT
From: Dave_Raggett <dsr@hplb.hpl.hp.com>
Message-Id: <9211231529.AA13659@manuel.hpl.hp.com>
Subject: Pictures & HTML
To: bobw@csg.uwaterloo.ca
Date: Mon, 23 Nov 92 15:29:11 GMT
Cc: www-talk@nxoc01.cern.ch
Mailer: Elm [revision: 66.25]

>> The client doesn't know in advance about these embedded objects, it
>> therefore makes sense for the server to be able to append them to the
>> requested html document so as to avoid a further network loop delay for
>> retrieving them.

> I've been through this line of thought in a hypertext/electronic book
> project. Yes, it's more efficient to include the graphics in the HTML data
> stream, but only if you just have one version (format) for each graphic.

I wasn't suggesting including the graphics as part of the HTML data stream,
but rather appending it as a separate object with its own distinct format, as
appropriate to its particular type.

> We found it best in the long run to provide our embedded graphics in several
> formats, and allow the client to choose the format most appropriate for its
> output device (e.g. 8-bit vs 24-bit colour, Postscript if the device
> supports it, WMF if the client is running the Microsoft Windows version of
> the viewer program, etc).

This seems to be where the negotiation idea comes in. The client can tell
the server in advance (or as part of the request) what its capabilities are.
Given this the server can work out the most appropriate format to send.

If the picture is really big, or the server has to do some time consuming
format conversion (or perhaps ask some agent to do this on its behalf),
then I believe that the server should quickly reply with a short message to
that effect so that the user has some idea of what is happening and how long
to expect to wait.

By the way, you may be interested to know that in Britain, universities are
being connected this spring to a new fiber optic network intended to allow
academics to read electronic journals on-line with video clips, 3-D animations
and simulations. It will be possible for distant researchers to work on the
same data or paper simultaneously and see each other's changes.

I will try to find out more.


Best wishes,

Dave Raggett

From K.Hoadley@directory.rl.ac.uk  Mon Nov 23 16:48:31 1992
Return-Path: <K.Hoadley@directory.rl.ac.uk>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15135; Mon, 23 Nov 92 16:48:31 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA18315; Mon, 23 Nov 92 17:00:26 +0100
Received: from danton.cc.rl.ac.uk by directory.rl.ac.uk with SMTP (PP) 
          id <04336-0@directory.rl.ac.uk>; Mon, 23 Nov 1992 15:48:30 +0000
Date: Mon, 23 Nov 1992 15:50:25 +0000 (GMT)
From: Kevin Hoadley <K.Hoadley@directory.rl.ac.uk>
Sender: K.Hoadley@directory.rl.ac.uk
Reply-To: K.Hoadley@directory.rl.ac.uk
Subject: SuperJANET (was: Pictures and HTML)
To: drs@hplb.hpl.hp.com
Cc: www-talk@nxoc01.cern.ch
Message-Id: <Ximap.722534476.5288.khoadley@danton>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

Dave Raggett wrote:
>By the way, you may be interested to know that in Britain, universities are
>being connected this spring to a new fiber optic network intended to allow
>academics to read electronic journals on-line with video clips, 3-D
>animations
>and simulations. It will be possible for distant researchers to work on the
>same data or paper simultaneously and see each other's changes.

Dave is referring to SuperJANET, the planned upgrade to the existing JANET
network. This was intended to be a high speed network for multi-service use,
not just a data network but also a multimedia network for applications such
as video conferencing, distance learning and medical imaging.

As a result of the tendering process to pick the supplier for the 
underlying fibre infrastructure these goals have had to be altered slightly.
What we are actually getting is a very nice data network (34 Mb/s) plus
a fairly small number of sites with dedicated bandwidth for the multimedia
services.

Anyone interested in more details please contact me, as I'm secretary of
the group building the data network.

Kevin Hoadley, Rutherford Appleton Laboratory, K.Hoadley@directory.rl.ac.uk

From timbl@www3.cern.ch  Mon Nov 23 17:51:15 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA15600; Mon, 23 Nov 92 17:51:15 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA24989; Mon, 23 Nov 92 18:01:34 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02537; Mon, 23 Nov 92 17:55:32 +0100
Date: Mon, 23 Nov 92 17:55:32 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211231655.AA02537@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Bob Wildfong <bobw@csg.uwaterloo.ca>
Subject: Re: Embedded graphics (was Re: Book metaphor)
Cc: dsr@hplb.hpl.hp.com (Dave_Raggett), www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  The server sends a list of available formats and the client requests the
>  graphic file that it prefers.  This permits the best available graphic  
quality
>  on each of several possible output devices, but imposes an extra network  
delay.
>  Still, graphic files tend to be pretty big, so the extra delay is only a few
>  % of the file's download time.
>  


We wanted to keep the whole thing down to one round trip.  So, intead of the  
server sending over availble formats, the client sends over the set of
formats it supports, with some preference weighting. The server makes the  
decision. See some W3 design notes and  
http://info.cern.ch/hypertext/WWW/Protocols/HTTP.html
for some waffle about it.  It should all be in HTTP2.

I suggest a link type (attribute?) "MOVETHISTOO" which like "PRSESENTTHISTOO"  
causes the linked document to be sent over whenevr the base document is moved.
Thisc, ombined with the "EMBED_THIS" attribute will give the effect of a  
multipart document, while allowing the format conversion to act intdependently  
on each part.

	Tim
	
(PS: Anyone got a NeXTMail/MIME gateway?)

	

From TONYJ@scs.slac.stanford.edu  Tue Nov 24 03:54:05 1992
Return-Path: <TONYJ@scs.slac.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18357; Tue, 24 Nov 92 03:54:05 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01489; Tue, 24 Nov 92 04:06:56 +0100
Date: Mon, 23 Nov 1992 19:06 PDT
From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: Re: ScreenMode binaries, man page reader, experimental server
To: www-talk@nxoc01.cern.ch
Message-Id: <EAD9AE448020353A@SCS.SLAC.STANFORD.EDU>
X-Envelope-To: www-talk@nxoc01.CERN.CH
X-Vms-To: in%"www-talk@nxoc01.CERN.CH"
X-Vms-Cc: TONYJ

Jim Whitescarver writes....

>We have an experimental server for our CWIS plus a special gateway
>server.  The ScreenMode interface can still be access via telnet to
>eies2.njit.edu with the login www.  You can try the manual page reader
>their, or via http://eies2:1234/man.  We make extensive use of the <PRE>
>tag for preformatted text.  Much of our hypertext, including the manual
>pages, will not be formatted properly unless you use one of our readers,
>or another reader modifies to support <PRE>.

If you are using the MidasWWW browser you can add support for the <pre> (and </pre>) tag 
just by adding the following lines to the Midaswww.ad file
 
midaswww*WWWHyper*pre.font:	-*-courier-medium-r-normal-*-17-*-*-*-*-*-iso8859-*
midaswww*WWWHyper*pre.breakBefore:	SGMLBREAK_ALWAYS
midaswww*WWWHyper*pre.breakAfter:	SGMLBREAK_ALWAYS
midaswww*WWWHyper*pre.tagList:	SGMLAnchorText: a SGMLMarkerText: p
midaswww*WWWHyper*pre.defaultClass:	SGMLPlainText
midaswww*WWWHyper*pre*p.breakBefore:	SGMLBREAK_NEVER

and replacing the line beginning midaswww*WWWHyper*default.tagList: with

midaswww*WWWHyper*default.tagList:	SGMLMarkerText: p isindex nextid 
SGMLCompositeText: address dl h1 h2 h3 h4 h5 h6 dir menu pre SGMLListText: ul SGMLText: 
comment title SGMLPlainText: xmp listing plaintext SGMLAnchorText: a

(this should be all one line even though it is probably wrapped in the message you are 
reading.) 

The "pre-formatted" man pages look good (try http://eies2.njit.edu:1234/man/cat for an 
example).

Tony


From timbl@www3.cern.ch  Tue Nov 24 11:11:47 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19592; Tue, 24 Nov 92 11:11:47 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA25846; Tue, 24 Nov 92 11:24:29 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA03320; Tue, 24 Nov 92 11:19:44 +0100
Date: Tue, 24 Nov 92 11:19:44 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211241019.AA03320@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: jim@wilbur.njit.edu (Jim Whitescarver)
Subject: Re: ScreenMode binaries, man page reader, experimental server
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  Date: Sat, 21 Nov 92 17:32:08 est
>  From: jim@wilbur.njit.edu (Jim Whitescarver)

>  Much of our hypertext, including the manual
>  pages, will not be formatted properly unless you use one of our readers,
>  or another reader modifies to support <PRE>.
>  

>  The preformatted tag, PRE, unlike <PLAINTEXT>, allows anchors etc. to be 

>  inserted in text that is already formatted.  It greatly simplifies the
>  task of importing text from independant applications will anchors
>  everywhere you want them.  In addition, we have a set of macros for
>  MS-word which allow editing HTML in WYSIWYG fashion, but this also
>  requires support of the preformatted tag in HTML.
>  

>  Al Leurck (al@eies2.njit.edu) developed the PRE tag and MS-word macros
>  here in the ScreenMode interface and we are adding it to the tkWWW X
>  interface.

The <PRE> tag is important, and much better SGML than the XMP tag.
I suggest that editors (including the NeXTStep editor, which I propose
to fix) which read <XMP> should save <PRE>.  I have only one
misgiving abou the format as is, and that is that newlines are
significant.

When you allow anchors and other tags to be put into the text, the
lines can become very long, and most applications will want to keep them
limited for mailing, viewing, etc.  As the PRE files you have
currently include <P> tags for blank lines, why not put a <p>
at the end of every line? This would make the processing of <PRE>
almost identical to the default text processing, except for the font.

I also wonder whether FIXED might be more apt than PRE.

If we can agree on this element we could rush it into Dan's DTD for MIME
and fix all outstanding browers?

Any comments?

	Tim BL


	

From rik@daneel.rdt.monash.edu.au  Tue Nov 24 11:42:33 1992
Return-Path: <rik@daneel.rdt.monash.edu.au>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19687; Tue, 24 Nov 92 11:42:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA29345; Tue, 24 Nov 92 11:55:18 +0100
Received: by daneel.rdt.monash.edu.au (5.57/Ultrix3.0-C)
	id AA28990; Tue, 24 Nov 92 21:54:37 +1100
Message-Id: <9211241054.AA28990@daneel.rdt.monash.edu.au>
To: www-talk@nxoc01.cern.ch
Subject: Re: The <PRE> tag
In-Reply-To: Your message of "24 Nov 92 11:19:44 +0100."
             <9211241019.AA03320@www3.cern.ch> 
Date: Tue, 24 Nov 92 21:54:37 -1000
From: Rik Harris <rik@daneel.rdt.monash.edu.au>
X-Mts: smtp

timbl wrote:
> 
> >  From: jim@wilbur.njit.edu (Jim Whitescarver)
> 
> >  The preformatted tag, PRE, unlike <PLAINTEXT>, allows anchors etc. to be 
> >  inserted in text that is already formatted.  It greatly simplifies the
> >  task of importing text from independant applications will anchors
> >  everywhere you want them.  In addition, we have a set of macros for
> >  MS-word which allow editing HTML in WYSIWYG fashion, but this also
> >  requires support of the preformatted tag in HTML.
> >  
> The <PRE> tag is important, and much better SGML than the XMP tag.
> I suggest that editors (including the NeXTStep editor, which I propose
> to fix) which read <XMP> should save <PRE>.  I have only one
> misgiving abou the format as is, and that is that newlines are
> significant.
> 
> When you allow anchors and other tags to be put into the text, the
> lines can become very long, and most applications will want to keep them
> limited for mailing, viewing, etc.  As the PRE files you have
> currently include <P> tags for blank lines, why not put a <p>
> at the end of every line? This would make the processing of <PRE>
> almost identical to the default text processing, except for the font.
> 
> I also wonder whether FIXED might be more apt than PRE.
> 
> Any comments?

I think the <PRE> tag is a great idea, too.  The problem with not
having newlines significant is that it makes it difficult to do
indenting, etc.  One of the reasons the <PRE> tag is nice is that you
can take text (eg, manual entries) and not worry about formatting:

eg

OPTIONS

  -b   this option performs the blah command.  And if this line is
       reasonably long, I can demonstrate what I'm talking about.

  -f   this option performs the foo command.  Another annoying prob-
       lem is hyphenation.


This sort of thing caused me quite a lot of bother in the first
version of my manual page formatter.  If the newline is not
significant, then does it put lots of spaces between the 'is' and the
'reasonably', or does it join them with a space?  Also, if the new
break was to be between 'can' and 'demonstrate' (for example), how
would the browser know where to start the new line ('demonstrate').

The only misgiving I have about it is that you are formatting text for
a set width, something avoided in the past, but I think the value of
having good-looking formatted text outweighs this.

rik.
--
Rik Harris - rik.harris@fcit.monash.edu.au
+61 3 571-2895 (AH & ans.mach) +61 3 573-2679 (BH)  (both soon changing)
Faculty of Computing and Information Technology,
Caulfield Campus, Monash University, Australia (soon moving to Clayton)

From timbl@www3.cern.ch  Tue Nov 24 12:02:44 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA19775; Tue, 24 Nov 92 12:02:44 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA01198; Tue, 24 Nov 92 12:15:33 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA03386; Tue, 24 Nov 92 12:10:56 +0100
Date: Tue, 24 Nov 92 12:10:56 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211241110.AA03386@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Rik Harris <rik@daneel.rdt.monash.edu.au>
Subject: Re: The <PRE> tag
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  Date: Tue, 24 Nov 92 21:54:37 -1000
>  From: Rik Harris <rik@daneel.rdt.monash.edu.au>

>  I think the <PRE> tag is a great idea, too.  The problem with not
>  having newlines significant is that it makes it difficult to do
>  indenting, etc.  One of the reasons the <PRE> tag is nice is that you
>  can take text (eg, manual entries) and not worry about formatting:
>  

>  eg
>  

>  OPTIONS
>  

>    -b   this option performs the blah command.  And if this line is
>         reasonably long, I can demonstrate what I'm talking about.
>  

>    -f   this option performs the foo command.  Another annoying prob-
>         lem is hyphenation.


I was sugesting that you should format the above like

  OPTIONS<p>
<p>
    -b   this option performs the blah command.  And if this line is<p>
         reasonably long, I can demonstrate what I'm talking about.<p>
<p>  

    -f   this option performs the foo command.  Another annoying prob-<p>
         lem is hyphenation.<p>

That is, you explicitly put in the line end, but all white space is significant  
on the line.. It means that lines like

	See also csh, cc, blah, fred and junk.

which would have to be a SINGLE LINE

See also  <a name=csh href=csh.html>csh</a>, <a name=cc href=cc.html>cc</a>, <a  
name=blah2 href=http://sdf.adf.uasdf.edu/fred/doc/junk/blah.html>blah</a>, <a  
name=fred href=fred.html>fred</a> and <a name=junk href=junk.html>csh</a>.

instead could out as for example

See also  

 <a name=csh href=csh.html>csh</a>, 

 <a name=cc href=cc.html>cc</a>, 

 <a name=blah2 href=http://sdf.adf.uasdf.edu/fred/doc/junk/blah.html>blah</a>,
 <a name=fred href=fred.html>fred</a> and <a name=junk href=junk.html>csh</a>.
<p>

which is mailable.  If you look atthe NJIT manual pages HTML, there is a  
mixture of significant line feeds and explicit <p> elements for blank lines:

  OPTIONS
<p>
    -b   this option performs the blah command.  And if this line is
         reasonably long, I can demonstrate what I'm talking about.
<p>  

    -f   this option performs the foo command.  Another annoying prob-
         lem is hyphenation.
<p>

I propose we settle for one or the other.  I wonder whether there is
anything in SGML to suggest which.

	Tim


	

From connolly@pixel.convex.com  Tue Nov 24 16:51:21 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21007; Tue, 24 Nov 92 16:51:21 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA28119; Tue, 24 Nov 92 17:03:46 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA04554; Tue, 24 Nov 92 10:03:25 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA07624; Tue, 24 Nov 92 10:03:21 -0600
Message-Id: <9211241603.AA07624@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: Rik Harris <rik@daneel.rdt.monash.edu.au>, www-talk@nxoc01.cern.ch
Subject: Re: The <PRE> tag 
Summary: Yeah, what Tim said.
In-Reply-To: Your message of "Tue, 24 Nov 92 12:10:56 +0100."
             <9211241110.AA03386@www3.cern.ch> 
Date: Tue, 24 Nov 92 10:03:21 CST
From: Dan Connolly <connolly@pixel.convex.com>


>>  Date: Tue, 24 Nov 92 21:54:37 -1000
>>  From: Rik Harris <rik@daneel.rdt.monash.edu.au>
>
>>  I think the <PRE> tag is a great idea, too.  The problem with not
>>  having newlines significant is that it makes it difficult to do
>>  indenting, etc.  One of the reasons the <PRE> tag is nice is that you
>>  can take text (eg, manual entries) and not worry about formatting:
>
>I was sugesting that you should format the above like
>
>  OPTIONS<p>
><p>
>    -b   this option performs the blah command.  And if this line is<p>
>         reasonably long, I can demonstrate what I'm talking about.<p>
><p>  
>
>    -f   this option performs the foo command.  Another annoying prob-<p>
>         lem is hyphenation.<p>
>
>That is, you explicitly put in the line end, but all white space is significan
t  
>on the line.. It means that lines like
>
>	See also csh, cc, blah, fred and junk.
>
>which would have to be a SINGLE LINE
>See also  <a name=csh href=csh.html>csh</a>, <a name=cc href=cc.html>cc</a>, <a  
>name=blah2 href=http://sdf.adf.uasdf.edu/fred/doc/junk/blah.html>blah</a>, <a 
>name=fred href=fred.html>fred</a> and <a name=junk href=junk.html>csh</a>.
>
>instead could out as for example
>
>See also  
>
> <a name=csh href=csh.html>csh</a>, 
>
> <a name=cc href=cc.html>cc</a>, 
>
> <a name=blah2 href=http://sdf.adf.uasdf.edu/fred/doc/junk/blah.html>blah</a>,
> <a name=fred href=fred.html>fred</a> and <a name=junk href=junk.html>csh</a>.
><p>
>
>which is mailable.  If you look atthe NJIT manual pages HTML, there is a  
>mixture of significant line feeds and explicit <p> elements for blank lines:
>
>  OPTIONS
><p>
>    -b   this option performs the blah command.  And if this line is
>         reasonably long, I can demonstrate what I'm talking about.
><p>  
>
>    -f   this option performs the foo command.  Another annoying prob-
>         lem is hyphenation.
><p>
>
>I propose we settle for one or the other.  I wonder whether there is
>anything in SGML to suggest which.

In fact, there is. Well, not actally in SGML, but in the "application
conventions" that I have used to map SGML onto WWW.

All elements in HTML have either mixed content, RCDATA, or CDATA.
Mixed content is a mixture of <tags>, &entity; references,
and #PCDATA. RCDATA is just &entities; and data. CDATA is just data.

[SGML actually has a couple other content modes: ANY and
element content, but I didn't use those.]

CDATA is only used for the TITLE. RCDATA is used for XMP and LISTING
(entity references _are_ recognized in RCDATA sections, so you
can inlclude the _full_ end tag like this: &lt;/XMP>. But the
string </ followed by a letter _ends_ the section, whether the
letter starts the XMP tag or not.)

The convention is that in PCDATA sections, newlines serve only
to delimit words, whereas in RCDATA, newlines are significant.

We can't use RCDATA for the PRE or FIXED tag, cuz the <a> tag
won't be recognized in RCDATA. So I'd suggest you ignore
newlines inside the PRE element, and use <p> to delimit lines.
And since we're not using the exact semantics of PRE, I like
the idea of using the name FIXED in stead.  In SGML:

<!ELEMENT FIXED - - (#PCDATA|A|P)*>

The fact that the MidasWWW browser can support the semantics
of PRE is due to its non-standard parsing, where it treats
illegal tags as data, rather than ignoring them. SGML says
they'r not data, whatever they are, and the HTML doc in
the web says to ignore them.

I'm integrating my low-level SGML reading routines into
MidasWWW now, and with the author's consent, the non-standard
behaviour will soon go away. [The MidasWWW 1.0 browser doesn't
do &lt; or &amp; either -- that too will change.]

I've got it running, but there are a couple integration bugs I haven't
yet tracked down.

I've also got something of a validation suite for HTML, so that
implementors can easily see if they've gotten it right. And the
suite goes from easy to hard, so they can see how much of it
they got right, and if they don't want to fix it, they can at least
document how much it's broken.

Dan


From connolly@pixel.convex.com  Tue Nov 24 17:27:07 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21258; Tue, 24 Nov 92 17:27:07 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA02525; Tue, 24 Nov 92 17:39:49 +0100
Received: from convex.convex.com by mcsun.EU.net with SMTP
	id AA03227 (5.65b/CWI-2.189); Tue, 24 Nov 1992 17:39:31 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA06055; Tue, 24 Nov 92 10:38:14 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA09205; Tue, 24 Nov 92 10:38:13 -0600
Message-Id: <9211241638.AA09205@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: more on PRE tag
Date: Tue, 24 Nov 92 10:38:12 CST
From: Dan Connolly <connolly@pixel.convex.com>

I take back what I said about the PRE tag.

I'm going to have to think about it a little more.

Newlines are pretty tricky business in SGML. I don't think
it's wise to have an element where they're just ignored.

I'll have to think about it some more.

Dan

From fine@cis.ohio-state.edu  Tue Nov 24 20:44:33 1992
Return-Path: <fine@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA22409; Tue, 24 Nov 92 20:44:33 MET
Received: by dxmint.cern.ch (dxcern) (5.57/3.14)
	id AA23201; Tue, 24 Nov 92 20:57:29 +0100
Received: by soccer.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA15795; Tue, 24 Nov 92 14:57:10 -0500
Date: Tue, 24 Nov 92 14:57:10 -0500
From: Thomas A. Fine <fine@cis.ohio-state.edu>
Message-Id: <9211241957.AA15795@soccer.cis.ohio-state.edu>
To: www-talk@nxoc01.cern.ch
Subject: Questions and comments
X-Mailer: Perl Mail System v1.1

I'm new to this list, so forgive me if I hit things already dealt with.

I'm implementing yet another browser (text mode, written in perl).
It's actually basically done.  I have implemented the following tags:

TITLE, A, NEXTID (currently ignored), ISINDEX (ignored), PLAINTEXT,
PRE, LISTING, XMP, P, H1-H6, HP1-HP6 (ignored), DL, UL, MENU, and DIR.

also, I have done PRE and OL. But along the way I've seen several other
things in several different places.  For instance the following seem to
be defined in viola:
  COMMENT, XMPA, S, ST, VOBJ, XMPA
I've also seen references to DOCUMENT, KEYWORDS, DOCTYPE, and perhaps others.

Which brings me to my main question:
Is there a definitive list somewhere of everything that's been proposed.

Other stuff:
I'm not sure what the difference is supposed to be between an OL and
a UL.  Should the browser actually sort the list items for a OL?

As far as the <PRE> discussion, I'm not sure I understand what the problem
is with interpreting new lines.  The visual line length won't change for
having added anchors.

Also, I was under the impression that PRE was like PLAINTEXT, meaning their
is no ending tag, just end of file.  I hope I've misunderstood, if you
are proposing to replace XMP with PRE.  Another problem with this replacement
is the quoting problem.  With XMP, you don't need to worry about whether
or not your arbitrary text contains something which looks like an HTML
tag.  This is an important feature, and one which should be kept IMHO.

            tom

From jim@wilbur.njit.edu  Wed Nov 25 18:31:08 1992
Return-Path: <jim@wilbur.njit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28163; Wed, 25 Nov 92 18:31:08 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA03834; Wed, 25 Nov 1992 18:43:48 +0100
Received: by njitgw.njit.edu (5.57/Ultrix3.0-C)
	id AA29142; Wed, 25 Nov 92 12:43:22 -0500
Message-Id: <9211251743.AA29142@njitgw.njit.edu>
Received: by wilbur.njit.edu; Wed, 25 Nov 92 12:41:49 est
Date: Wed, 25 Nov 92 12:41:49 est
From: jim@wilbur.njit.edu (Jim Whitescarver)
To: timbl@nxoc01.cern.ch
Subject: Re: The <PRE> tag
Cc: www-talk@nxoc01.cern.ch

We are not stuck on the <PRE> tag, only the functionality.  If <p> at
the end gave us single spaced output, that would be acceptable though a
bit more work.  I've been unable to duplicate the effect using existing
tags.  Whatever name, (I'd prefer <PREFORMATTED>), the standard should
include an end tag </PRE>.  We don't support an end tag, but should.  I
attampted to translate ms documents to html, with some success, but,
equations (neqn) and tables (tbl), were close to impossible.  I'd like
to use preformatted for those sections alone, and not the whole document
(http://eies2.njit.edu/rakesh/paper.html).

The idea of new lines being significant is only repungnant in the case
of generating new hypertext.  The express purpose of <PRE> is to make
use of externally formated text where new lines ARE significant.

I used the <p> tags within <PRE> text in order to marginally support
browsers that do not understand <PRE>.  I'll be glad to provide a
version of manual pages without the <p>,  http://eies2.njit.edu:1234/man-p.
The long term value of mixing <p> within <PRE> is dubious at best.

The MidasWWW update for <PRE> looked nice and simple.  I look forward
to trying it!

Let's get a <PRE> capability into the standard so we can put anchors everywhere!

jim

From marca@wintermute.ncsa.uiuc.edu  Thu Nov 26 01:18:39 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29770; Thu, 26 Nov 92 01:18:39 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA29790; Thu, 26 Nov 1992 01:31:25 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA26337
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 25 Nov 92 18:31:22 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA00309; Wed, 25 Nov 92 18:32:35 -0800
Date: Wed, 25 Nov 92 18:32:35 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211260232.AA00309@wintermute.ncsa.uiuc.edu>
To: Thomas A. Fine <fine@cis.ohio-state.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Questions and comments
In-Reply-To: <9211241957.AA15795@soccer.cis.ohio-state.edu>
References: <9211241957.AA15795@soccer.cis.ohio-state.edu>

Thomas A. Fine writes:
> As far as the <PRE> discussion, I'm not sure I understand what the
> problem is with interpreting new lines.  The visual line length
> won't change for having added anchors.

This is true.  As far as I can tell, the only real objection that's
been raised specifically to the increased real line length is that
long lines aren't safe to mail.  This problem can easily be
circumvented by using MIME & metamail (plug plug, although I have
nothing to do with it -- I'm just interested in seeing MIME used in
WWW).

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From fine@cis.ohio-state.edu  Thu Nov 26 01:31:09 1992
Return-Path: <fine@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29782; Thu, 26 Nov 92 01:31:09 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05489; Thu, 26 Nov 1992 01:43:55 +0100
Received: by soccer.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA26082; Wed, 25 Nov 92 19:43:50 -0500
Date: Wed, 25 Nov 92 19:43:50 -0500
From: Thomas A. Fine <fine@cis.ohio-state.edu>
Message-Id: <9211260043.AA26082@soccer.cis.ohio-state.edu>
To: www-talk@nxoc01.cern.ch
Subject: Re: Questions and comments
X-Mailer: Perl Mail System v1.1

>Thomas A. Fine writes:
>> As far as the <PRE> discussion, I'm not sure I understand what the
>> problem is with interpreting new lines.  The visual line length
>> won't change for having added anchors.
>
>This is true.  As far as I can tell, the only real objection that's
>been raised specifically to the increased real line length is that
>long lines aren't safe to mail.  This problem can easily be
>circumvented by using MIME & metamail (plug plug, although I have
>nothing to do with it -- I'm just interested in seeing MIME used in
>WWW).

If that's the case then I'd have to say that it's ridiculous to try
to fix mail (or any other transport mechanism) by mucking up HTML with
crud.  Anyway, threre are already various programs that will let you
break lines for use with mail.  Http shouldn't care at all about lines.

Yes, MIME would be good.  But would you make WWW pass around MIME
documents only, with HTML being one of the Content-Types, or would
you have http handle several different doc types, including both
MIME and HTML?

       tom

From marca@wintermute.ncsa.uiuc.edu  Thu Nov 26 01:40:09 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29796; Thu, 26 Nov 92 01:40:09 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10409; Thu, 26 Nov 1992 01:52:54 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA27071
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 25 Nov 92 18:52:51 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA00390; Wed, 25 Nov 92 18:54:03 -0800
Date: Wed, 25 Nov 92 18:54:03 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9211260254.AA00390@wintermute.ncsa.uiuc.edu>
To: Thomas A. Fine <fine@cis.ohio-state.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Questions and comments
In-Reply-To: <9211260043.AA26082@soccer.cis.ohio-state.edu>
References: <9211260043.AA26082@soccer.cis.ohio-state.edu>

Thomas A. Fine writes:
> Yes, MIME would be good.  But would you make WWW pass around MIME
> documents only, with HTML being one of the Content-Types, or would
> you have http handle several different doc types, including both
> MIME and HTML?

What I'd like to see, based on what I know now, is 'text/html' become
a MIME content type and the WWW code retrofitted to handle MIME
documents as a base type.  Then essentially a raw HTML document would
become the degenerate case for WWW (implicitly text/html).

It is important that other datatypes can be inlined in a document,
which is what MIME allows (as opposed to just allowing ordinary links
to GIF files, or something similar).

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From fine@cis.ohio-state.edu  Thu Nov 26 02:39:54 1992
Return-Path: <fine@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00122; Thu, 26 Nov 92 02:39:54 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA29656; Thu, 26 Nov 1992 02:52:40 +0100
Received: by soccer.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA26512; Wed, 25 Nov 92 20:52:37 -0500
Date: Wed, 25 Nov 92 20:52:37 -0500
From: Thomas A. Fine <fine@cis.ohio-state.edu>
Message-Id: <9211260152.AA26512@soccer.cis.ohio-state.edu>
To: www-talk@nxoc01.cern.ch
Subject: Another tty-based browser (Beta)
X-Mailer: Perl Mail System v1.1


I just put my tty-based browser up for ftp.  This is a Beta release (I
guess I'll find out just how beta it is :-).  It's written in perl, so
you may also need to pick up perl.

You can get the browser via ftp from archive.cis.ohio-state.edu, in
pub/w3browser/w3browser-0.1.shar.

It's a shar file, so unpack with
sh w3browser-0.1.shar

and it will create files in your current directory.

I've included my own version of termcap.pl (normally a standard perl
distribution file, I think), because I found a bug in ours.  I'll
check after thanksgiving to see if there's a more recent version with
an official bug fix.

Use, enjoy, comment, and flame.

	tom



From timbl@www3.cern.ch  Thu Nov 26 09:36:28 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01204; Thu, 26 Nov 92 09:36:28 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA11529; Thu, 26 Nov 1992 09:49:15 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01192; Thu, 26 Nov 92 09:44:42 +0100
Date: Thu, 26 Nov 92 09:44:42 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211260844.AA01192@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: re: Questions and comments
Reply-To: timbl@nxoc01.cern.ch



> Date: Wed, 25 Nov 92 19:43:50 -0500
> From: Thomas A. Fine <fine@cis.ohio-state.edu>


>  Yes, MIME would be good.  But would you make WWW pass
>  around MIME documents only, with HTML being one of the
>  Content-Types,

Yes, this way.  I am no great fan of the MIME wrappers
(they are so mail-oriented and human-readable!) but
I am so strongly in favor of merging related technlogies that
I feel MIME should do that, just as SGML should do the
mark-up.  So in HTTP2, a document will be returned as
a MIME message. That is one reason for getting
text/html registerd as a MIME format now.

>  or would you have http handle several
>  different doc types, including both MIME and HTML?

That's too many wheels within wheels.

>       tom

Tim



From timbl@www3.cern.ch  Thu Nov 26 10:24:23 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01394; Thu, 26 Nov 92 10:24:23 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA20075; Thu, 26 Nov 1992 10:37:10 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01230; Thu, 26 Nov 92 10:32:36 +0100
Date: Thu, 26 Nov 92 10:32:36 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9211260932.AA01230@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: jim@wilbur.njit.edu (Jim Whitescarver)
Subject: Re: The <PRE> tag
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>  Date: Wed, 25 Nov 92 12:41:49 est
>  From: jim@wilbur.njit.edu (Jim Whitescarver)

>  We are not stuck on the <PRE> tag, only the functionality.  If <p> at
>  the end gave us single spaced output, that would be acceptable though a
>  bit more work.  I've been unable to duplicate the effect using existing
>  tags.  Whatever name, (I'd prefer <PREFORMATTED>),

PREFORMATTED is too long for default SGML element length.
I feel FIXED is more descriptive of what the tag means -- in that the character  
spacing is fixed.  I feel the tag should describe the interpretation to be but  
onto the data, not just its origin. In fact, FIXED would be used in cases where  
XMP and LISTING are used now. It is trivial to convert.  I so no great use for
XMP and LISTING except for back-compatibility.

	WIDTH
	
I would like an attribute WIDTH=nn to specify the width of display.
This can allow the viewer to select a font which will fit. It will also
allow something 40 chars wide to be indented rather than having to 

start at the LH margin (and typically be filled out with tabs so that it
doesn't look silly) like in a quoted command.  I would put an implementor's
comment in that widths of 40, 80 and 132 are likely and handling those well
would be a good move. Any oethr widths can be rounded up of course.
In a style-oriented editor, that gives 3 styles: command, example,listing.


>  the standard should
>  include an end tag </PRE>.  We don't support an end tag, but should.

Definitely!

> I
>  attampted to translate ms documents to html, with some success, but,
>  equations (neqn) and tables (tbl), were close to impossible.  I'd like
>  to use preformatted for those sections alone, and not the whole document
>  (http://eies2.njit.edu/rakesh/paper.html).

	I get "Document address invalid or access not authorised" for
	that one ... have you sepelt it right?

	NEW LINE

Whether lines are ended with newline or <p> is in fact a question of  
practicality.

>  The idea of new lines being significant is only repungnant in the case
>  of generating new hypertext.  The express purpose of <PRE> is to make
>  use of externally formated text where new lines ARE significant.

Hold on. Let's get our ideas straight. We want FIXED to allow us
to inlcude preformatted text.  We can never, however, just paste preformatted
text into a <PRE> section because we will have to change the < and & characters
to entities.  At the same time as we add those it's easy to add a <p> at the  
end of every line.

It isn't just mail which has problems with newlines. There are horrible
mainframe systems which have trouble with things which don't fit into card or  
lineprinter images, and even VMS complains when a line buffer overflows. There  
are probably a lot of finite line buffers in the world. When you imagine  
(pathalogical case) putting an anchor on each of 80 characters, we can end up  
with of the order of 1kB per line. When it totally resonable for you and me but  
I bet someone will hate it.

But then of course we can always break lines before any tag closer > so it  
doesn't matter anyway, right?

Dan's aygument remains that by SGML convention (only?) newlines are significant  
only in "RCDATA" (replacable character data) in which one cannot have anchors.  
If you need anchors, you need PCDATA (parsable CDATA) in which newlines are
by convention not signifiant.

>  I used the <p> tags within <PRE> text in order to marginally support
>  browsers that do not understand <PRE>.  I'll be glad to provide a
>  version of manual pages without the <p>,  http://eies2.njit.edu:1234/man-p.
>  The long term value of mixing <p> within <PRE> is dubious at best.

I absoltely agree that we don't mix <p> with significant newlines!
My attempts to interpret your man pages lead to a lot of white
space, as \n<p>\n was interpreted as 3 newlines!

Let's not bother marginally supporting any browsers. All the parser authors are  
in this discussion, we can get it right and define it. We can then all
retrofit it in time for the MIME text/html definition. OK?

I would like to see a /man/fixed with either <p> throughout or no <p>.

	<FIXED>
	Every line ends with &lt;p><p>
	<p>
	Blank or not<p>
	</FIXED>


>  The MidasWWW update for <PRE> looked nice and simple.  I look forward
>  to trying it!
>  

>  Let's get a <PRE> capability into the standard so we can put anchors  
everywhere!

Absoltely.  We just need discussion or votes on 3 issues:

  Tag name:		<FIXED>		<PRE>		(other)

  Newlines:		\n		<p>

  WIDTH=nn		yes		no


>  

>  jim
>  

	Tim

From connolly@pixel.convex.com  Mon Nov 30 13:14:41 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01112; Mon, 30 Nov 92 13:14:41 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA17248; Sun, 29 Nov 1992 21:34:49 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA20685; Sun, 29 Nov 92 14:34:41 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA22237; Sun, 29 Nov 92 14:34:40 -0600
Message-Id: <9211292034.AA22237@pixel.convex.com>
To: "Thomas A. Fine" <fine@cis.ohio-state.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Questions and comments 
In-Reply-To: Your message of "Tue, 24 Nov 92 14:57:10 EST."
             <9211241957.AA15795@soccer.cis.ohio-state.edu> 
Date: Sun, 29 Nov 92 14:34:39 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I'm new to this list, so forgive me if I hit things already dealt with.

Actually, your questions are quite timely.

>I'm implementing yet another browser (text mode, written in perl).
>It's actually basically done.  I have implemented the following tags:
>
>TITLE, A, NEXTID (currently ignored), ISINDEX (ignored), PLAINTEXT,
>PRE, LISTING, XMP, P, H1-H6, HP1-HP6 (ignored), DL, UL, MENU, and DIR.
>
>also, I have done PRE and OL. But along the way I've seen several other
>things in several different places.  For instance the following seem to
>be defined in viola:
>  COMMENT, XMPA, S, ST, VOBJ, XMPA
>I've also seen references to DOCUMENT, KEYWORDS, DOCTYPE, and perhaps others.
>
>Which brings me to my main question:
>Is there a definitive list somewhere of everything that's been proposed.

The current specification is

http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html

I hope to replace that with a more rigorous specification soon.
I hope to use the same spec to register text/html with the IANA for
MIME purposes.

>Other stuff:
>I'm not sure what the difference is supposed to be between an OL and
>a UL.  Should the browser actually sort the list items for a OL?

An OL was never a sorted list. It's just a numbered list, as opposed
to a bulleted list. It's for stuff where the order of the items in
the list is significant; e.g. step 1: do this. step 2: do that...

>Also, I was under the impression that PRE was like PLAINTEXT, meaning their
>is no ending tag, just end of file.  I hope I've misunderstood, if you
>are proposing to replace XMP with PRE.  Another problem with this replacement
>is the quoting problem.  With XMP, you don't need to worry about whether
>or not your arbitrary text contains something which looks like an HTML
>tag.  This is an important feature, and one which should be kept IMHO.

Well, you have to throw out SGML conformance if you want the current
PLAINTEXT semantics. Even the XMP semantics are no good. In SGML, the
string "</" is recognized as markup iff it's followed by a name start
character (a letter). The above HTML documentation says </ is only
markup if it's followed by XMP, i.e. "</XMP>" is the _only_ string
that ends an XMP section. This is not expressible in SGML.

I'm defining HTML in terms of SGML. Period. I'm punting on Plaintext. The
idea is that plaintext data is not part of the HTML data format. Plaintext
is governed by the MIME text/plain data format. Any HTTP servers
that return some HTML followed by <PLAINTEXT> followed by more data
are thought to return two MIME entities: a text/html entity, terminated
by the <PLAINTEXT> tag, and a text/plain entity.

As for the <PRE> tag, I think I'm going to call it FIXED, and go with
a <p> tag at the end of every line.

Details as they develop...

Dan


From connolly@pixel.convex.com  Mon Nov 30 14:11:26 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01542; Mon, 30 Nov 92 14:11:26 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA27420; Sun, 29 Nov 1992 22:23:28 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA21660; Sun, 29 Nov 92 15:23:25 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23851; Sun, 29 Nov 92 15:23:23 -0600
Message-Id: <9211292123.AA23851@pixel.convex.com>
To: "Thomas A. Fine" <fine@cis.ohio-state.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Questions and comments 
In-Reply-To: Your message of "Wed, 25 Nov 92 19:43:50 EST."
             <9211260043.AA26082@soccer.cis.ohio-state.edu> 
Date: Sun, 29 Nov 92 15:23:23 CST
From: Dan Connolly <connolly@pixel.convex.com>


>>been raised specifically to the increased real line length is that
>>long lines aren't safe to mail.  This problem can easily be
>>circumvented by using MIME & metamail (plug plug, although I have
>>nothing to do with it -- I'm just interested in seeing MIME used in
>>WWW).
>
>If that's the case then I'd have to say that it's ridiculous to try
>to fix mail (or any other transport mechanism) by mucking up HTML with
>crud.  Anyway, threre are already various programs that will let you
>break lines for use with mail.  Http shouldn't care at all about lines.

Amen, brother. Line length certainly should not be part
of the HTML spec.

As for HTTP, the 80 character line length was, is, and always will
be, merely a suggestion. HTTP implementations that assume 80 character
lines are broken. But I'm sure they're out there.

>Yes, MIME would be good.  But would you make WWW pass around MIME
>documents only, with HTML being one of the Content-Types, or would
>you have http handle several different doc types, including both
>MIME and HTML?

My strategy on integrating MIME is this:

Currently, a WWW or gopher client sends "gimme foo" and expects the
server to send foo back. The client _must know_ the data format of foo
in order to convey it to the user.

A gopher client knows foo's format from the first character of the
MenuItem where it got foo in the first place (it assumes gopher format
when foo is the empty string.)

A WWW client assumes foo's format is HTML, until it sees <PLAINTEXT>,
where it switches to plain text format.

Now if we just use the name text/plain for gopher type 0, application/gopher
for gopher type 1, text/html for the WWW data stream, and text/plain
for the stuff after the <PLAINTEXT> tag, we begin to see how MIME
fits into the picture.

I'd like to see the gopher protocol extended to include the actual MIME
content-type in the Menu, like this:

0#About This Gopher#about.txt#some.internet.host#70#text/plain
1#Departmental Publications#publications#some.internet.host#70#application/gopher

Now with text/plain and application/gopher, the MIME content-type
is redundant, and not so important. But consider:

9#My picture#connolly.gif#some.internet.host#70#image/gif
9#Pronunciation of my name#connolly.snd#some.internet.host#70#audio/basic

So in stead of registering zillions of special characters for new
gopher types (i, w, M, etc.) we just add a field to the Menu item,
and use type 9 for everything besides menus and text files.

The same holds for WWW references. They should include the data
type, with text/html as the default. So I should be able to
reference the above picture and sound in WWW:

<A HREF="gopher://some.internet.host:70/9connolly.gif"
	CONTENT-TYPE="image/gif">

<A HREF="gopher://some.internet.host:70/9connolly.snd"
	CONTENT-TYPE="audio/basic">

This is especially important for protocols that have no implicit data
type, like FTP.  I could reference a DVI on an FTP server, and have my
WWW client launch xdvi ala metamail:

<A HREF="ftp://export.lcs.mit.edu/contrib/foo.dvi"
	content-type="application/x-dvi">

Now the WWW gang has always talked about format negotiation.
This is where the client gives the server several options
for the data format, and the server chooses between them.
So what's the data type of the returned information?
We need a type that's a "union" of all the data types, right?

Now we see the need for the MIME message/rfc822 content type.
Consider the following scenario:

CLIENT: GET foo HTTP-Version-2 Content-Types:
	1000 text/html
	900 application/postscript
	200 text/plain
	400 application/x-dvi
	100 text/x-latex
	.

SERVER: 0200 Message follows:
From: author@his.host
Message-ID: <lasting-name-for-this-document>
Subject: ... fullfills role of HTML <TITLE> element ...
Mime-Version: 1.0
Content-Type: application/postscript
Content-Transfer-Encoding: binary

%!PS-Adobe-2.0
...


The next possibility to consider is multimedia documents, e.g.
one document that contains plain text, HTML text, gif images,
sounds, etc.

That's where the MIME multipart/mixed content type comes
in. If the client is prepared to receive multipart messages,
this is gravy.

Get it?

Dan


From connolly@pixel.convex.com  Mon Nov 30 14:14:14 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01580; Mon, 30 Nov 92 14:14:14 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA18736; Mon, 30 Nov 1992 14:27:07 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09143; Mon, 30 Nov 92 07:27:03 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA05269; Mon, 30 Nov 92 07:27:02 -0600
Message-Id: <9211301327.AA05269@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: An HTML specification and Implementors' Guide
Date: Mon, 30 Nov 92 07:27:01 CST
From: Dan Connolly <connolly@pixel.convex.com>


I just uploaded

html_spec-0.3.tar.Z

to info.cern.ch in pub/incoming.

It's hypertext including

* MarkUp.html -- the root node
* Text.html -- an introduction to SGML syntax
* html.dtd -- the spec expressed in HTML
* several example files that form a validation suite
* libHTML.tar -- some code that implements the low-level
		SGML reading state machine (with a test driver)

Tim: please link this into the web somehow.

Implementors: please grab the whole thing and validate
your implementation against it.

Tony: I've got some patches for the MidasWWW browser.
I'm not quite done cleaning them up.

Linemode fans: I haven't started messing with linemode
yet.

Issues Closed Pending Review:

Long Names

I included an SGML declaration that increases NAMELEN to 34,
and LITLEN to 1024. I got these numbers from the DocBook DTD.


SGML IDs for Anchor Names

The NAME attribute of the A element is an ID. It must start
with a name, and it must be unique among all the IDs in
the document. [Note that there is no way to validate the #anchor
part of the HREF attribute. I'm working on that...]


Multimedia Links

I included a content-type attribute for links so that you can tell the
browser what type of data you're pointing to, and it can decide what to
do with it (at a minimum, use this attribute and pass the data to
metamail). I added a content-description attribute in case you want the
reader to be able to get some information about the data without
transfering it, but now I'm not sure it's a good idea. The description
should go in the content of the A element.


Formatted Text with Anchors

I took the semantics of the PRE tag, added the WIDTH attribute, and
called it TYPEWRITER (inspired by the nroff man page). It's parsed like
most other elements, but displayed like XMP or LISTING or PLAINTEXT.

Newline handling isn't a parsing issue -- it's a display issue. I think
it will be more straightforward to define newlines in TYPEWRITER
content to be significant. That way, once the data is parsed, XMP
and TYPEWRITER work just the same. Lines may get real long. That's
life. If you want to mail it, use MIME or uuencode or something.

XMP and LISTING elements are CDATA: they have no markup in their
content. There's no way to put </TITLE> inside an XMP element.

PLAINTEXT is an empty element that signals the end of a text/html
entity and begins a text/plain entity.


Ordered Lists

I included them in the DTD. Any objections?


ISO Latin 1 Characters:

I included a reference to "ISO 8879:1986//ENTITIES Added Latin 1//EN"
in the HTML DTD. This defines entities for all ISO latin 1 characters.
Clients will need a table of the names and local translations.


Open Issues:

Highlighting: Who's tags should we use? LaTeX seems to be an adequate
markup system for lots of folks. Its tags are
	em | it | bf | sf | sl | tt

The DocBook folks use only semantic tags: they don't have bold or italic
tags. The MIME richtext stuff has only typographic tags: no <emphasis>
or <booktitle> or any such thing.

Dan

From jim@wilbur.njit.edu  Mon Nov 30 17:59:41 1992
Return-Path: <jim@wilbur.njit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03312; Mon, 30 Nov 92 17:59:41 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA16636; Fri, 27 Nov 1992 21:55:37 +0100
Received: by njitgw.njit.edu (5.57/Ultrix3.0-C)
	id AA12117; Fri, 27 Nov 92 15:55:15 -0500
Message-Id: <9211272055.AA12117@njitgw.njit.edu>
Received: by wilbur.njit.edu; Fri, 27 Nov 92 15:53:44 est
Date: Fri, 27 Nov 92 15:53:44 est
From: jim@wilbur.njit.edu (Jim Whitescarver)
To: www-talk@nxoc01.cern.ch
Subject: interactive hypermedia
Cc: al@eies2.njit.edu, murray@eies2.njit.edu, reddy@eies2.njit.edu

At NJIT we are going beyond the scope of the WWW.  We will support HTML
for access, plus extensions for interactive group hypermedia.  Some issues
involve the larger WWW community others may be better suited for another
forum.  Although nothing is cast in stone, we must impliment these capabilities
now, before the standards arrive.  We seek to maximize our WWW compliance.
This is a summary of our current direction for your comments.

We will NOT obey the pricipal that the same reference always accesses the
same hypertext object.  We plan a <VAR> tag to indicate variable data in
the text.  Text within the <VAR> to </VAR> should not be cached.  It would
be helpful if other clients supported this convention.  Initially, we will
not cache the entire document is it contains one or more <VAR>, later we
want to be able to request only the <VAR> fields for the document and
merge them with a cached version with minimal communication.  VAR should
have a TIMEOUT parameter ultimately.

We will add an <INPUT> tag, with parameters for length, type, and default.
We will allow inputs to be sent using the format of search keywords over
http.  It would be helpful if other browsers allow serches on documents
containing the <INPUT> tag.  The length suggests how much space to leave
for the input, not a maximum necesarily.  Text through </INPUT>  may be
the prompt. A name parameter will allow addressing inputs like anchors.
An input is, afterall, like an achor for keyboard data.  In addition to
query (search) for input data, we will also require a submit, as http
has no PUT operation, we will use mail (as with comments, see below).

We eventually want an <INCLUDE> tag with an HREF parameter.  This will allow
breaking documents into smaller pieces that can be maintained independantly.

A fallback mechanism will be required.  I don't know if that issue has 
been settled.  We will need a rules file capability for the client back 
end and support for fallback entries in our rules file.  We should consider
restructuring our rules mechanism to better support caching of documents.

We look forward to the dust settling in the multi-media mechanisms for the
web.  In the mean time, and in addition, we plan to support file name
conventions to determine the type of the document when it is otherwise
unspecified.  Innitially we will support .html, .man, .mm, .ms, .jpeg, .gif,
.au, .tar and the .Z suffix. Support for .mime might also be quite nice
dispite the recursion.  We have not resolved all the issues of supporting
this over an http link or dividing the responsibilities between the
client back end and the server.  We may innitially restrict this to
local and ftp file addresses.

We have tenativly selected tcl as our machine independant procedure
language to define group activities accociated with the WEB "group
memory".  Though we prefer Smalltalk, tcl provides a sufficient meta
language capability across Unix, pc's and mac's in the public domain.
The wish (tk) extensions to tcl for Xwindows and tkWWW are an added
plus.  I'd like feedback from others on the use of tcl.

I've been planning an interactive service via http://eies2.njit.edu/
(or telnet://www@eies2.njit.edu/), but lacked time to make it releasable.
I promise to get around to it soon.  Comments are sent to www@eies2.njit.edu
as mail with the HREF as the subject and the text of the comment after
a blank line in the message body.  If the comment does not begin with
an HTML markup, <FIXED> will be assumed, <> quoted (i.e. \<\>), and anchors
added for imbedded HREFS.   (Yes, we do plan to support MIME eventually).
Hopefully the service will be up soon enough for your comments.
Check http://eies2.njit.edu/interactive.

jim

From jim@wilbur.njit.edu  Mon Nov 30 18:00:06 1992
Return-Path: <jim@wilbur.njit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03338; Mon, 30 Nov 92 18:00:06 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA09734; Fri, 27 Nov 1992 17:44:02 +0100
Received: by njitgw.njit.edu (5.57/Ultrix3.0-C)
	id AA09646; Fri, 27 Nov 92 11:43:39 -0500
Message-Id: <9211271643.AA09646@njitgw.njit.edu>
Received: by wilbur.njit.edu; Fri, 27 Nov 92 11:42:09 est
Date: Fri, 27 Nov 92 11:42:09 est
From: jim@wilbur.njit.edu (Jim Whitescarver)
To: timbl@nxoc01.cern.ch
Subject: Re: The <PRE> tag
Cc: www-talk@nxoc01.cern.ch

I vote for <FIXED>, significant newlines (\n), and WIDTH=nn with 80 default.

The standard should explicitly discourage the use of <FIXED>, because of
the new line significance.  Its use should be researved for cases where
conversion to full html is impractical.

http://eies2.njit.edu:1234/man-p/manpage give no <p>s within <PRE>

I released the shell source for my experimental server in
ftp://wilbur.njit.edu/www/unix/htfiled.sh, it has man, man-p, and a local
directory browser-- in case anyone wants to play with it.

I fixed the reference http://eies2.njit.edu/rakesh/paper.html, but I need
to regererate it to get back equations and format the tables.  If anyone
has a converter for ms and mm documents it would save me some trouble.

jim

From weber@eitech.com  Mon Nov 30 18:00:12 1992
Return-Path: <weber@eitech.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03341; Mon, 30 Nov 92 18:00:12 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA00620; Fri, 27 Nov 1992 19:48:03 +0100
Received: from kyle.eitech.com by eitech.com (4.1/SMI-4.1)
	id AA13149; Fri, 27 Nov 92 10:46:33 PST
Date: Fri, 27 Nov 92 10:46:33 PST
From: weber@eitech.com (Jay C. Weber)
Message-Id: <9211271846.AA13149@eitech.com>
To: www-talk@nxoc01.cern.ch
Subject: an idea for integrating WWW and MIME
Cc: notemail-designers@eitech.com

I've been reading this list second hand for a while (could someone put me
on the list, please?), and I have an idea that bears on a number of recent
messages regarding WWW and MIME.  In summary, the idea is to add a new WWW
document access type that refers to sibling parts of a MIME multipart, and
in so doing

  o integrates the MIME typing mechanism into WWW  (as Dan has championed)
    while making a MIME reader do the work (e.g., without requiring that an
    html parser parse content-types, nor that it know what how to handle
    those types);

  o provides a bundling mechanism (as Dave has requested) so the various
    media pieces are part of a single "compound document";

  o suggests a variation where the media pieces are physically part of the
    document layout (instead of being a button push away and a separate
    window (as I think Dave also requested);

  o allows for recursive embedding to create larger structures (like Dave's
    "books");

  o supports typing on either end of the link;

  o relates the WWW (remote) document names to MIME message/external-body
    types.

Right, so enough hype.  These compound documents are MIME multipart objects
like the following:

  Content-type: multipart/x-presentation; boundary=foo

  --foo
  Content-type: text/html

  You know, <a HREF=part:id1> the world </a> is a funny place.

  --foo
  Content-ID: id1
  Content-type: image/gif
  Content-description: an image of a globe
  Content-transfer-description: base64

  JKLAHFKHKJHL53645NBDL3W45Y5KYKN...

  --foo

A multipart/x-presentation is like a multipart/mixed (and will be treated
as such in simple MIME readers), except that the first part defines the
layout of the presentation.  The interesting case for this crowd is when
that part is an html document with references to the remaining parts.  In
the above example, I've implemented a reference through a new document
access type called "part", which looks for a sibling in the multipart with
content-id "id1".  De-referencing that HREF cranks up the MIME reader
(e.g., metamail) on that part.

Using this bundling mechanism, multiple media types can appear in a single
document (the granularity of the web should be defined on conceptual
grounds, not media boundaries!).  But the referenced parts can be of type
text/x-html, providing a bundling mechanism for portions of the web --
which at least partly addresses Daves request for book structures.  Note
that the bundled parts can even be of type multipart/x-presentation, so one
can recursively intermix media and web bundling.

One can also imaging an alternative to anchors ("frames"?) where the
referenced object gets physically embedded in the layout of the text
(someone must have done this in SGML by now).  Format-wise this would be
almost identical to my example above, and you could mix the two.

Note that the typing information is not in the anchor, it's in the
referenced part.  Of course, you could allow typing in the anchor and have
it default or override the typing in the part, but it seems to me that in
general you want the typing at the destination. (I've probably touched on a
controversial point.)  This is more important in my next point.

So I mentioned a relation between document naming in WWW and
message/external-body types in MIME.  Suppose that instead of including the
GIF image in the above example, I had the following:

  --foo
  Content-ID: id1
  Content-type: message/external-body; access-type=anon-ftp;
     site=eitech.com; directory=/pub; file=globe.gif
  Content-description: pointer to picture of globe

  Content-type: image/gif
  
  --foo--

When the reference to id1 is dereferenced, the MIME reader would fetch the
file from the remote site.  (The second content-type acts as a default for
the file type, which can be overridden by typing information in the
destination.) Thus the "part" document access type, through MIME
interactions, can do remote references; one could view the anchor

  <a HREF=anon-ftp://eitech.com/pub/globe.gif TYPE=image/gif>

as a shorthand for anchor referencing the external-body (do WWW addresses
have an anon-ftp access type?  MIME external-body and WWW access type sets
are overlapping; they could be sync'ed).

I've gone way past the length limit for optimal readership :-), but I hope
many of you (especially Dave and Dan) have gotten all the way through.
Comments?

Jay
---------------------------------------------------------------------
Jay C. Weber					weber@eitech.com
Enterprise Integration Technologies		weber@cis.stanford.edu
459 Hamilton Avenue, Suite #100			(415)617-8002
Palo Alto, CA 94301

From TONYJ@scs.slac.stanford.edu  Tue Dec  1 03:46:20 1992
Return-Path: <TONYJ@scs.slac.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06036; Tue, 1 Dec 92 03:46:20 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA25410; Tue, 1 Dec 1992 03:59:26 +0100
Date: Mon, 30 Nov 1992 18:59 PDT
From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: quotes around tags and escape sequences
To: www-talk@nxoc01.cern.ch
Message-Id: <69FDBB0140801933@SCS.SLAC.STANFORD.EDU>
X-Envelope-To: www-talk@nxoc01.CERN.CH
X-Vms-To: in%"www-talk@nxoc01.cern.ch"
X-Vms-Cc: TONYJ

Three questions, 

  1) If we now expect quotes around tags, are we still meant to understand % as
     an escape character within tags?

  2) Which of the following do I need to support, and which is the "approved"      
     method of accessing gopher?

         href="gopher://gopher.micro.umn.edu:70/00/Some Stuff"
     or
         href="gopher://gopher.micro.umn.edu:70/00/Some%20Stuff"
     or 
         href=gopher://gopher.micro.umn.edu:70/00/Some%20Stuff

  3) Is the % meant to act as an escape character in search strings? ie

         href="http://slacvm.slac.stanford.edu/FIND/PARTICLE?PI%nn"

     meant to find entries for PI+ ? (where nn is the ascii code for +).

Just wondering....Tony 

From jdanner@leland.stanford.edu  Tue Dec  1 04:14:48 1992
Return-Path: <jdanner@leland.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06134; Tue, 1 Dec 92 04:14:48 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA25917; Tue, 1 Dec 1992 04:27:53 +0100
Received: from elaine22.Stanford.EDU by sunlight.Stanford.EDU (4.1/AIR-1.0)
	id AA23105; Mon, 30 Nov 92 19:27:50 PST
Date: Mon, 30 Nov 92 19:27:50 PST
From: jdanner@leland.stanford.edu
Message-Id: <9212010327.AA23105@sunlight.Stanford.EDU>
To: www-talk@nxoc01.cern.ch
Subject: MIME vs. HyTime

I claim no expertise on HyTime, but I believe the intent
is to allow multimedia data in an SGML DTD.  Given Dan's
current efforts to make HTML a true DTD, it seems like
HyTime tags might be an easier addition than incorporating
HTML as a MIME datatype.  Has anyone looked at HyTime vs.
MIME?  I guess I'm wondering about this for the mail world
as well, since there is already a great deal of commercial
interest in SGML-ifying all documents.

John Danner
Oracle Multimedia


From connolly@pixel.convex.com  Tue Dec  1 04:29:53 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06221; Tue, 1 Dec 92 04:29:53 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA26213; Tue, 1 Dec 1992 04:42:58 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12672; Mon, 30 Nov 92 21:42:49 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA06729; Mon, 30 Nov 92 21:42:48 -0600
Message-Id: <9212010342.AA06729@pixel.convex.com>
To: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: quotes around tags and escape sequences 
In-Reply-To: Your message of "Mon, 30 Nov 92 18:59:00 PDT."
             <69FDBB0140801933@SCS.SLAC.STANFORD.EDU> 
Date: Mon, 30 Nov 92 21:42:47 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Three questions, 
>
>  1) If we now expect quotes around tags, are we still meant to understand % as
>     an escape character within tags?

In short, I think so.

These dang things get parsed twice: once by the SGML parser, and once
by the URL parser.

After the HREF=, the SGML parser is looking for an attribute value,
which may be a token or a literal. The syntax of a URL conflicts with
the syntax of a token, so you've got to use a literal, i.e. you've
got to put quotes around it.

To compute the value of the HREF attribute, the SGML parser grabs
everything between ""s (or ''s, actually. In fact, it expands
&entity; references too!).

Then you hand the value of the HREF attribute to the URL parser.
It better be a legal URL at this point. I don't know if the URL
parsing code can handle spaces in a URL or not. If not, they've
got to be represented by the %nn construct.

NOTE: There's an SGML construct: &#SPACE; or &#123; designed for the same
purpose. We might want to remove the quoting mechanism from the
URL spec, and say that you use whatever quoting mechanisms the
enclosing data format requires.


>  2) Which of the following do I need to support, and which is the "approved"      
>     method of accessing gopher?
>
>         href="gopher://gopher.micro.umn.edu:70/00/Some Stuff"

This is legal SGML -- dunno if it's a legal URL.

>         href="gopher://gopher.micro.umn.edu:70/00/Some%20Stuff"

This is probably your best bet for the current linemode code.

>         href=gopher://gopher.micro.umn.edu:70/00/Some%20Stuff

SGML parsers won't grok this.

For starters, you've got kind of a bad design for handling SGML
attributes: you parse them twice: once to stick them in the param
resource, and once to take them out of the param resource and stick
them in the href and name resources.

Rather than a param resource, the parsing code should build an XtArglist
with the attribute names and values. Then it can just call XtSetValues
when it's done parsing the start tag. This would be a minor modification
to my current version of the MidasWWW code using my HTML parsing library.

>  3) Is the % meant to act as an escape character in search strings? ie
>
>         href="http://slacvm.slac.stanford.edu/FIND/PARTICLE?PI%nn"
>
>     meant to find entries for PI+ ? (where nn is the ascii code for +).

Yeah... I've got a bunch of questions like this one. My understanding
is that everything after the scheme: is defined by the individual scheme.
It's not safe to just replace %nn by the corresponding ASCII character
in all URLs. The %nn quoting mechanism is specific to the gopher scheme.
(It might be used by other schemes too, but it's not a universal mechanism.)

I've got some design ideas for the WWW library that I think would obviate
the need for implemntors like Tony to even mess with this stuff.

Details as the develop...

Tony: I'll send you my HTML parsing work separately.

Dan


From connolly@pixel.convex.com  Tue Dec  1 04:49:29 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06359; Tue, 1 Dec 92 04:49:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA26534; Tue, 1 Dec 1992 05:02:34 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12833; Mon, 30 Nov 92 22:02:30 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA06943; Mon, 30 Nov 92 22:02:29 -0600
Message-Id: <9212010402.AA06943@pixel.convex.com>
To: jdanner@leland.stanford.edu
Cc: www-talk@nxoc01.cern.ch
Subject: Re: MIME vs. HyTime 
In-Reply-To: Your message of "Mon, 30 Nov 92 19:27:50 PST."
             <9212010327.AA23105@sunlight.Stanford.EDU> 
Date: Mon, 30 Nov 92 22:02:29 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I claim no expertise on HyTime, but I believe the intent
>is to allow multimedia data in an SGML DTD.

Good point. I don't know as much about HyTime as I should
either. All I know is that it's complex and obscure enough
that I don't have a working knowledge of it after two
years of sniffing around the internet.

>  Given Dan's
>current efforts to make HTML a true DTD, it seems like
>HyTime tags might be an easier addition than incorporating
>HTML as a MIME datatype.

I'm almost sure that's not true. Incorporating HTML as
a MIME datatype is as easy as sending an email message
to the IETF. Now the interesting stuff: incorporating
the nifty features of MIME into WWW is anther story.
But I still think it's several orders of magnitude
easier than implementing a HyTime engine.

>  Has anyone looked at HyTime vs.
>MIME?

The relavence of HyTime to WWW isn't so much in the
realm of data formats (where MIME is key), as in
hyperlink semantics and addressing schemes.

HyTime architectural forms have immense expressive
power, but I gather they're pretty heavy to implement.
They do stuff like:

<LINK target=loc1>click here to see a film</LINK>

<FILM HyTime=FCS ID=loc1>REEL 100<START>100.23sec<STOP>134.56sec</FILM>

I don't have a firm grasp of how it all works, but most of
the link mechanisms involve cooking up some element that
describes referent data, and then using the id of that
element elsewhere in the document.

It would mean turning
<A HREF="http://info.cern.ch/hypertext/WWW/TheProject.html>Click here.</a>

into

<A HREF=loc2>Click Here.</a>

<RESOURCE ID=loc2><SCHEME>http<HOST>info.cern.ch<PATH>
	<ROOT>hypertext<COMPONENT>WWW<COMPONENT>TheProject.html</RESOURCE>

or something like that.

>  I guess I'm wondering about this for the mail world
>as well, since there is already a great deal of commercial
>interest in SGML-ifying all documents.

The purpose of SGML is interchange. It's a pretty painful
investment unless you want to exchange documents among
diverse systems at the source level. The WWW project
is paying the price, and I think it's working well.

So far, WWW is just for text, where SGML is sufficiently
epressive. SGML has hooks for the kind of multimedia
that WWW is about. HyTime is overkill for graphics and simple sounds,
IMHO.

If WWW ever involves complex multimedia documents, especially
documents where timing and event ordering is significant,
we might want to take another look at HyTime.

Dan


From emv@garnet.msen.com  Tue Dec  1 05:24:39 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06659; Tue, 1 Dec 92 05:24:39 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA27104; Tue, 1 Dec 1992 05:37:44 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mwPMf-0000A7C@garnet.msen.com>; Mon, 30 Nov 92 23:37 WET
Message-Id: <m0mwPMf-0000A7C@garnet.msen.com>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>,
        www-talk@nxoc01.cern.ch
Subject: Re: quotes around tags and escape sequences 
In-Reply-To: Your message of Mon, 30 Nov 92 21:42:47.
             <9212010342.AA06729@pixel.convex.com> 
Date: Mon, 30 Nov 92 23:37:23 EST
From: Edward Vielmetti <emv@msen.com>

if we're double-quoting the
	
         href="gopher://gopher.micro.umn.edu:70/00/Some Stuff"

so there's no question where the beginning of the reference is and
where the end of the reference is, then I should think there's no
problem.

Really, though, the gopher reference is (in gopherspeak)

Name=An arbitrary, but meaningful name
Host=gopher.micro.umn.edu
Port=70
Type=0
Path=Some Stuff

And the "href=" is just a way to squash it down to a single string.
It could just as well be a set of attributes and not a single one.
E.g.

<a gopherhost="gopher.micro.umn.edu" 
   gopherport="70" 
   gopherpath="/Some Stuff" 
   gophertype="0">
An arbitrary, but meaningful, name</a>

expresses the meaning of what's going on in a way that's far closer to
how SGML might do it as far as I have been able to make out...Dan is
that actually legal SGML?

This being a general flaw of URL, really - the idea was to make short
strings that are printable, but as access methods get more complex a
set of attribute=value pairs may make things quite a bit easier, 
for parsing and quoting as well as mapping from one access class
(gopher links to telnet sites) to another (www native support for telnet).

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From connolly@pixel.convex.com  Tue Dec  1 07:22:38 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA07119; Tue, 1 Dec 92 07:22:38 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA28928; Tue, 1 Dec 1992 07:35:43 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA15228; Tue, 1 Dec 92 00:35:25 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23999; Tue, 1 Dec 92 00:35:22 -0600
Message-Id: <9212010635.AA23999@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>,
        www-talk@nxoc01.cern.ch
Subject: Global HyperLinks was: quotes around tags and escape sequences 
In-Reply-To: Your message of "Mon, 30 Nov 92 23:37:23 EST."
             <m0mwPMf-0000A7C@garnet.msen.com> 
Date: Tue, 01 Dec 92 00:35:22 CST
From: Dan Connolly <connolly@pixel.convex.com>


OK, now you're asking for it. I've been mulling this
stuff over in my head for a couple weeks, and I've got some
pretty good ideas as to how it all fits together.

My model of global hypermedia includes the following terms:

Entity -- SGML and MIME use this term. WAIS calls it a document.
	Gopher calls it an item or a textfile or something.
	WWW used to call it a document, and now calls it
	a resource.

	The meaning is the same in all of them: a unit
	of retrieval [from the URL document].

Content-Type -- MIME coined this term. SGML calls it a NOTATION.
		WAIS used to call it :type, but they'll call
		it :content-type if they follow up on what they
		told me. Most gopher types fall under this scheme
		(telnet, cso, and other types that don't use gopher
		protocol don't fit)

Reference -- This is the WWW anchor, the Gopher Menu item, the WAIS
	:document-id structure, The MIME message/external-body. It is
	enough information to 1) decide whether to retrieve the entity,
	2) perform the retrieval transaction, and 3) process the entity
	once you've got it.

>Really, though, the gopher reference is (in gopherspeak)
>
>Name=An arbitrary, but meaningful name
>Host=gopher.micro.umn.edu
>Port=70
>Type=0
>Path=Some Stuff

NOTE: Some Stuff is terminated by a newline, and may not contain tabs.

>And the "href=" is just a way to squash it down to a single string.
>It could just as well be a set of attributes and not a single one.
>E.g.
>
><a gopherhost="gopher.micro.umn.edu" 
>   gopherport="70" 
>   gopherpath="/Some Stuff" 
>   gophertype="0">
>An arbitrary, but meaningful, name</a>

NOTE: for type 7 items, you need gophersearch="terms" too.

>expresses the meaning of what's going on in a way that's far closer to
>how SGML might do it as far as I have been able to make out...Dan is
>that actually legal SGML?

Sure, that's legal. I suggested that URLs be expressed in SGML a long
time ago. Tim said it was overkill, and I'm starting to agree.

Let's take a closer look at references:

1) What features allow users and clients to decide to retrieve an entity:

WWW	context and content of the anchor (Is it relevant?)

MIME	content-id (do I have this entity cached already?)
	content-description (relevant?)
	content-type (can I process it once I've got it?)
	SIZE (is it too big to bother?)

WAIS	:score (relavent to my query?)
	:headline (relevant?)
	:doc-id (in cache?)
	 original/distributor-server,database,local-id particularly useful
	:number-of-lines, :number-of-bytes (too big?)
	:type, :content-type (can I process it?)
	:date (how old is it?)

Gopher	name (is it interesting?)
	type (can I process it?)

2) What features allow the client to make the transfer?

WWW	URL -- protocol, host, port, path, type, size, search terms
	handles local files, HTTP, gopher, WAIS connections.
	includes search terms for fulltext indexes.
	scheme mechanism allows gateways to new protocols

MIME	access-type, etc.: handles ftp, anon-ftp, local-file
	Ghost body allows arbitrary extra data.

Gopher	host, port, path, search words

WAIS	source (host, port, database), doc-id, search terms,
	relavent documents (these are the novel feature. Quite handy)

3) What features allow the client to process the entity?
(Keep in mind that these are features of the reference -- this
is information we have _before_ we transfer the entity).

WWW	processing is tied to the protocol. Content-Type
	of local files is inferred from file extensions.

	Entities from HTTP connections are assumed to
	be text/x-html.

	Gopher entites are typed: 0=text/plain, 1=application/x-gopher,
	w=text/x-html.

	WAIS entites are typed: TEXT=text/plain, WSRC=application/x-wais.

MIME	content-type mechanism is quite expressive. Any content-type
	can be encapsulated in a message/rfc822 entity. Multiple
	entities can be encapsulated in a multipart/mixed entity.

Gopher	gopher type tells you what to do with the data.
	text/plain, application/x-gopher are universally supported.
	other types are supported by pilot projects.

WAIS	:type tells what to do. text/plain and application/x-wsrc are
	supported. Other types are supported by pilot projects.


Now let's see how we should change the WWW reference mechanism.

Here's what we've got currently:

<!ELEMENT A	- -  (#PCDATA)>
<!ATTLIST A
	NAME ID #IMPLIED
	HREF CDATA #IMPLIED
	TYPE CDATA #IMPLIED
	>

What's the TYPE used for? It's not a data type. There's some
code in LineMode to handle it, but I'm not sure what it does.

The NAME identifies the anchor as the target of some other anchor.
We should have NAME (or ID) attributes on pretty much all elements,
for example:

<DL>
<DT ID=term>term<DD>definition
</DL>

The HREF attribute is enough information to retrieve and Entity.
Good. But it's got thie #anchor stuck on the end. That should
be a separate attribute. It should be an IDREF, so that we
can validate that it references an existing ID with an SGML
parser.

"But," you say, "what if it references an ID outside the current document?"

I suggest we treat a group of nodes that reference each other not
as separate documents, but as entities of one big document. That
way, an author can validate the internal links in his/her web.

I suggest two new elements: XREF, for intra-document links (i.e.
links within the local web), and SEE for inter-document links
(i.e. links that go outside the local web).

<!ELEMENT XREF - - (#PCDATA)
 -- This element is for links within an HTML document. (a document
    is a collection of entities, or a web of nodes).
 -->
<!ATTLIST XREF
	CONTEXT CDATA #IMPLIED -- entity containing the XREF is implied --
	-- SGML purists would make this attribute an ENTITY reference,
	   and put the URL in the SYSTEM identifier in the prologue.
	   For expediency, we put the URL right in the attribute.
	--
	ORIGIN CDATA #IMPLIED
	-- another URL, used as an identifier, rather than a locator.
	   Ala the WAIS original-server,database,local-id triple.
	--
	REF IDREF #REQUIRED  -- ID of referent element --
	>

<!ELEMENT SEE - - (#PCDATA)
 -- This element is for links from an HTML document to any entity
    in the global web. The location and content-type of the entity
    are sufficient to resolve the reference.

    The other attributes could be specified in the text of the
    SEE content, but by making them attributes, the client software
    can process them, for example, to display a table of references
    sorted by date.
 -->
<!ATTLIST SEE
	LOCATION CDATA #REQUIRED -- URL of referent entity --
	CONTENT-TYPE CDATA #REQUIRED -- MIME Content-Type for the entity --
	CHUNK CDATA #IMPLIED
	-- This is the analogue of the #anchor mechanism.
	   If CONTEXT is an SGML entity, this would be an ID,
	   though it won't be validated.
	   However, if CONTEXT is a text file, this could be a line number.
	   The meaning is defined by the content-type.
	--
	ORIGIN CDATA #IMPLIED
	FROM CDATA #IMPLIED -- email address or name of author/provider --
	DATE NUMBER #IMPLIED -- in ISO format: YYYYMMDDHHMMSSZ --
	BYTES NUMBER #IMPLIED -- useful in many cases --
	MD5 CDATA #IMPLIED -- data signature --
	>

What do you think?

Dan


From timbl@www3.cern.ch  Tue Dec  1 16:33:03 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00861; Tue, 1 Dec 92 16:33:03 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA21551; Tue, 1 Dec 1992 16:46:11 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01877; Tue, 1 Dec 92 16:41:19 +0100
Date: Tue, 1 Dec 92 16:41:19 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212011541.AA01877@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: jim@wilbur.njit.edu (Jim Whitescarver)
Subject: Re: The <PRE> tag
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


Perhaps we should have all three.

<FIXED>		newlines not significant 	anchors		PCDATA

<PRE>		newlines significant		no anchors	RCDATA

<XMP>		newlines significant		no anchors	CDATA

I understand that these are the only SGML-conformant combinations.  Is this too  
much of a mess?

Tony, can you make a similar patch for <fixed> as above for Midas?

I have put Dan's new spec (which contains <typewriter> -- what's going on,  
Dan?!) in the web at  
http://info.cern.ch/hypertext/WWW/MarkUp/Connolly/MarkUp.html with a link from  
the current spec.  The DTD was not in the tar file, so Dan's previous one is  
linked in. This includes all Dan's test HTML.

I would like to include <HEADER> and <BODY> tags too.

	Tim

From timbl@www3.cern.ch  Tue Dec  1 16:44:31 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00977; Tue, 1 Dec 92 16:44:31 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA26953; Tue, 1 Dec 1992 16:57:39 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01907; Tue, 1 Dec 92 16:52:50 +0100
Date: Tue, 1 Dec 92 16:52:50 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212011552.AA01907@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Lets keep the web together
Reply-To: timbl@nxoc01.cern.ch


- CERN distributes a WWW protocol/parser library.
- Tony Johnson is extending the MidasWWW code the other protocols.
- Dave Ragget is writing a completely new browser.
- Jim WhiteScarver is "going beyond the scope of WWW".
- So are lots of others.
- Dan Connolly is writing a definitive HTML engine for the new spec,
- Dan was also making a parallel version of Midas.
- At CERN, somone (else) is making a modified viola,
- Pei Wei works on a new Viola with completely new parts.

This is all great, except for two things: consistency and support.

Getting the protocol code and parsing code right and tracking bugs and external  
changes will be some work, I feel that it is important that we do end up with  
common code.

I know what it is like to have to maintain code on lots of platforms.
You have to write the code specially. There are W3 code style guidelines in the  
web which say what we found out to be necessary.  It's a pain. Noone is going  
to support 8 parsers on 12 platforms.

I am therefore a little worried about the proliferation of implementations.
(I know, I'm rather pleased about it too! :-) I would like to see one or maybe  
two definitive libraries around (two, so to test the first one for  
self-consistent bugs), but not four. I feel that if there are too many, then  
there will be cases of little things which work on one but not on the others,  
because there is not enough support effort for each. And we want to keep the  
quality high, in terms of reliability, conformance, and portability.
The smarts are all very well. So could I encourage everyone with a bit of  
motherhood and apple pie.

If you are thinking of a smart extra to EITHER HTTP or HTML then please define  
it and discuss it here on www-talk.  Don't try just to get it out before the  
next guy. He is probably doing it too, a different way, and theese are all  
exciting ideas which benefit from being hacked around on the net.

When the idea has come out, we can put it into a tentative "future" spec
for comment and everyone can work from it.

There is more than plenty of work for everyone out there!  With all this drive  
we are going to accomplish some incredible things over then next few months.
We don't need to be over-competitive, and we need to try to get things right  
first time.

Jim's comment system is neat, and I'd like to adopt it here too.

Tim

From marca@wintermute.ncsa.uiuc.edu  Tue Dec  1 18:11:11 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01523; Tue, 1 Dec 92 18:11:11 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA18677; Tue, 1 Dec 1992 18:24:18 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA24870
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 1 Dec 92 11:24:14 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA22449; Tue, 1 Dec 92 11:25:27 -0800
Date: Tue, 1 Dec 92 11:25:27 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212011925.AA22449@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: NCSA http server

I'm running an experimental HTTP server at NCSA -- it's entirely a
prototype and none of the information on it should be taken to be
official or serious or any way that might get me in trouble.

        http://hoohoo.ncsa.uiuc.edu:80/

It's a hacked server and it will become more hacked in the future; if
you find it doesn't work, send me a nice mail message because I may
not realize that I broke something.

Cheers,
Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From connolly@pixel.convex.com  Tue Dec  1 18:28:35 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01687; Tue, 1 Dec 92 18:28:35 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA23023; Tue, 1 Dec 1992 18:41:41 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA13710; Tue, 1 Dec 92 11:41:38 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA22962; Tue, 1 Dec 92 11:41:34 -0600
Message-Id: <9212011741.AA22962@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: jim@wilbur.njit.edu (Jim Whitescarver), www-talk@nxoc01.cern.ch
Subject: Re: The <PRE> tag 
In-Reply-To: Your message of "Tue, 01 Dec 92 16:41:19 +0100."
             <9212011541.AA01877@www3.cern.ch> 
Date: Tue, 01 Dec 92 11:41:34 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Perhaps we should have all three.

>I understand that these are the only SGML-conformant combinations.  Is
>this too much of a mess?

I think so. The processing should be broken into two parts: SGML parsing,
and application processing. The significance of newlines is an application
issue: the SGML parser never throws out newlines in data (it does throw
out newlines between tags and in some other places that I don't fully
understand).

These are the choices for SGML parsing:

	CDATA		all characters treated as data.
			Terminated by </A where A is any letter.
	RCDATA		characters and entities only. &entity; recognized.
			Terminated by </A as above
	mixed content	tags and #PCDATA.
			Tags, entity references, comments, etc. recognized.
			The pattern of tags and data is regulated
			by the element declaration.
	element content	tags only. Pattern of tags is regulated.
	ANY		like mixed content, but tags aren't regulated

CDATA is simplest to process, but you can't do things like

	char* any_string;
	printf("<XMP>%s</XMP>", any_string);

because any_string might contain </A, and you're screwed.

RCDATA is capable of the above construct, but at a cost:

	char* any_string;
	char* rcdata = HTML_replace_specials(any_string);
	printf("<XMP>%s</XMP>", rcdata);
	free(rcdata);

where HTML_replace_specials changes '<' to &lt; (to prevent </A), '>' to &gt;
(to prevent ]]>, the marked-section close delimiter. Ugh!), and
'&' to &amp; (to prevent &xxx from being mistaken for an entity reference).

But if you're going to go to that trouble, you might as well
use mixed content. That's why I changed my mind about using RCDATA
for XMP and LISTING elements.

My current DTD only uses element content (for the HTML document element*),
CDATA (for XMP and LISTING) and mixed content (for everything else).

As to your suggestions...

><XMP>		newlines significant		no anchors	CDATA

This is already supported, except that most implementations don't
quite parse CDATA correctly. The "newlines significant" isn't a
parsing issue. It's an issue of how the application processes character
data. Let's call this mode of application processing where the
characters are written to the screen as-is, rather than
typeset into paragraphs TYPEWRITER mode. We'll call the default TYPESET mode.

><PRE>		newlines significant		no anchors	RCDATA

The only implementation of the PRE tag that I know of looks more like:

<PRE>		newlines significant		anchors		PCDATA

It's actually pretty clean: you use
mixed content SGML parsing, and TYPEWRITER application processing.
So I changed the name to TYPEWRITER, for no good reason, really.

The newlines significant/no anchors/RCDATA is what I suggested for
XMP and LISTING, so they could contain any string. But since current
implementations don't process entities in these elements, it's
not worth it.

><FIXED>		newlines not significant 	anchors		PCDATA

This introduces a third application mode besides RAW and TYPESET:
it's kinda like RAW, but you toss the newlines, and start a newline
at every <P> tag. I don't like it.

>Tony, can you make a similar patch for <fixed> as above for Midas?

You could, but it doesn't fit neatly into the current architecture.
Tony wrote one widget to do TYPESET processing (SGMLCompoundText)
and one to do TYPEWRITER processing (SGMLPlainText). The FIXED
widget calls for a new widget, or a modification of SGMLPlainText
to ignore newlines in some cases. (You can't just use the SGMLCompoundText
with a fixed-width font, because it compresses whitespace.)

>I have put Dan's new spec (which contains <typewriter> -- what's going on,  
>Dan?!) in the web at  
>http://info.cern.ch/hypertext/WWW/MarkUp/Connolly/MarkUp.html with a link from
>the current spec.

Thanks.

>  The DTD was not in the tar file, so Dan's previous one is  
>linked in. This includes all Dan's test HTML.

Ack! I think the DTD is pretty important. I'll get the new
one there ASAP. I highly suggest that _all_ data providers grab the DTD
and the sgmls parser and try validating samples of the data they're
serving up. It's the quickest and surest way to check for compliance.
I need to write a section for data providers in the spec.

>I would like to include <HEADER> and <BODY> tags too.

* I wrestled with this at great length to come up with a DTD
lends _some_ structure to HTML wihthout clashing badly with
existing data.

The document element declaration is:
<!ELEMENT HTML O O  ((TITLE? & NEXTID? & ISINDEX?), BODY)>

The O O means the HTML start and end tags can be omitted.
They'll be inferred by the parser. Since there's no #PCDATA
in the content model, it has element content, so that
whitespace between tags is thrown out.

The TITLE, NEXTID, and ISINDEX can come in any order, and
they can are optional, but they can appear at most once,
and they have to be before the BODY.

I made the <BODY> tags minimizable so current
HTML is legal. I couldn't seem to work in a HEADER
element the same way.

Dan


From connolly@pixel.convex.com  Tue Dec  1 18:51:52 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01941; Tue, 1 Dec 92 18:51:52 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA27242; Tue, 1 Dec 1992 19:04:56 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA14593; Tue, 1 Dec 92 12:04:53 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA24775; Tue, 1 Dec 92 12:04:52 -0600
Message-Id: <9212011804.AA24775@pixel.convex.com>
To: timbl@nxoc01.cern.ch
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Lets keep the web together 
In-Reply-To: Your message of "Tue, 01 Dec 92 16:52:50 +0100."
             <9212011552.AA01907@www3.cern.ch> 
Date: Tue, 01 Dec 92 12:04:51 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Getting the protocol code and parsing code right and tracking bugs and external
>changes will be some work, I feel that it is important that we do end up with 
>common code.
>
>I know what it is like to have to maintain code on lots of platforms.
>You have to write the code specially. There are W3 code style guidelines in the
>web which say what we found out to be necessary.  It's a pain. Noone is going
>to support 8 parsers on 12 platforms.
>
>I am therefore a little worried about the proliferation of implementations.
>(I know, I'm rather pleased about it too! :-) I would like to see one or maybe
>two definitive libraries around (two, so to test the first one for  
>self-consistent bugs), but not four. I feel that if there are too many, then  
>there will be cases of little things which work on one but not on the others, 
>because there is not enough support effort for each. And we want to keep the  
>quality high, in terms of reliability, conformance, and portability.

Well said. With this in mind, I'd like to take issue with the state
of libWWW:

You can't use any of the parts without using the whole
thing: you can't use the parser unless you use the HText
data structures, including the HTMainText global variable!

The Gopher processing is intertwingled with everything else too.
There should be a GopherOpen() routine, for establishing
a gopher connection and handling seletors and searches, and a GopherMenu()
routine, that handles application/x-gopher entities just
like text/plain and text/x-html entities are currently handled.

Similarly, there should be an FTPOpen, LocalFileOpen, HTTPOpen,
etc routines with an easy way to plug in a WAISOpen routine
when somebody gets around to it.

I should be able to add MIMEMessage(), MIMEMultipart(), PostScript(),
etc. format handling routines alongside the text/html and text/plain
routines.

There is *no reason* for the NOARGS, ARGS1, ARGS2, etc. macros.
You just use the PARAMS() macro in the header, and use K&R style
in the .c file. The only place where this doesn't work is
with varargs foo.

There are #ifdefs for VAX, unix, and ThinkC all over the place.
I'm sure these could be localized.

This is why Tony Johnson started from scratch, and why other
implementors will do the same.

>If you are thinking of a smart extra to EITHER HTTP or HTML then please define
>it and discuss it here on www-talk.  Don't try just to get it out before the  
>next guy. He is probably doing it too, a different way, and theese are all  
>exciting ideas which benefit from being hacked around on the net.
>
>When the idea has come out, we can put it into a tentative "future" spec
>for comment and everyone can work from it.

Again, we see the need for a CSCW platform.

I think that if we archived the www-talk mailing list, and built
an HTTP server that would serve the articles up with hypertext
links between folloups etc, it would be a good start.

If I code up a server in perl that can do this, will somebody
provide disk space and network access?

Dan


From marca@wintermute.ncsa.uiuc.edu  Tue Dec  1 19:01:25 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01993; Tue, 1 Dec 92 19:01:25 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA29024; Tue, 1 Dec 1992 19:14:31 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA28320
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 1 Dec 92 12:14:29 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:timbl@nxoc01.cern.ch id AA22660; Tue, 1 Dec 92 12:15:42 -0800
Date: Tue, 1 Dec 92 12:15:42 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212012015.AA22660@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Subject: Re: Lets keep the web together 
In-Reply-To: <9212011804.AA24775@pixel.convex.com>
References: <9212011552.AA01907@www3.cern.ch>
	<9212011804.AA24775@pixel.convex.com>

Dan Connolly writes:
> You can't use any of the parts without using the whole thing: you
> can't use the parser unless you use the HText data structures,
> including the HTMainText global variable! [...]

I have to agree with this as a negative assessment.  Trying to figure
out how to deal with the library hasn't been very much fun.

> Again, we see the need for a CSCW platform.

Well, for what it's worth, the server running on
hoohoo.ncsa.uiuc.edu:80 will accept the ANNOTATE command as proposed
in a previous message of mine, and I can send the patches to enable
this (as well as modify the linemode browser and library to provide
annotation functionality) to anyone who wants them.  A more complex
system is certainly desirable, though.

> I think that if we archived the www-talk mailing list, and built an
> HTTP server that would serve the articles up with hypertext links
> between folloups etc, it would be a good start.
> 
> If I code up a server in perl that can do this, will somebody
> provide disk space and network access?

I would, but it already exists:

        http://eies2.njit.edu:80/wmail.html

Dan, if you want to do a mailing list archive also, contact me and
we'll set it up...

Marc


From raisch@cthulhu.control.com  Tue Dec  1 19:49:40 1992
Return-Path: <raisch@cthulhu.control.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02300; Tue, 1 Dec 92 19:49:40 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05835; Tue, 1 Dec 1992 20:02:46 +0100
Received: by control.com (4.1/Spike-2.0)
	id AA01217; Tue, 1 Dec 92 14:00:41 EST
Date: Tue, 1 Dec 1992 13:54:43 -0500 (EST)
From: Robert Raisch <raisch@cthulhu.control.com>
Subject: Re: Lets keep the web together 
To: Dan Connolly <connolly@pixel.convex.com>
Cc: timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
In-Reply-To: <9212011804.AA24775@pixel.convex.com>
Message-Id: <Pine.3.03.9212011343.K24748-b100000@cthulhu.control.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Tue, 1 Dec 1992, Dan Connolly wrote:

> Well said. With this in mind, I'd like to take issue with the state
> of libWWW:
> 
> You can't use any of the parts without using the whole
> thing: you can't use the parser unless you use the HText
> data structures, including the HTMainText global variable!
> 
> The Gopher processing is intertwingled with everything else too.
> There should be a GopherOpen() routine, for establishing
> a gopher connection and handling seletors and searches, and a GopherMenu()
> routine, that handles application/x-gopher entities just
> like text/plain and text/x-html entities are currently handled.

	ABSOLUTELY!

	I do not wish to denigrate two marvelous tools and the
considerable effort which went into them, but from a software support and
development environment, both approaches leave MUCH to be desired. 

	I believe that it is high time we took a very hard look at the
future of WWW and gopher, and retooled them to fulfill the role that they
seem to be headed towards.

	We are talking about tools which represent the future of the
Global Internet.  They should be developed with a keen awareness of
modularity, useability, portability and supportability.

	I'd be willing to participate in such an effort, but lack the time
to coordinate it.

> I should be able to add MIMEMessage(), MIMEMultipart(), PostScript(),
> etc. format handling routines alongside the text/html and text/plain
> routines.

	Oh bliss! Oh joy!  Would that it were so.  <sigh>

-- </rr>
As a matter of conscience, I will no longer support any business in Colorado.



From emv@garnet.msen.com  Tue Dec  1 20:50:13 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02821; Tue, 1 Dec 92 20:50:13 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA14217; Tue, 1 Dec 1992 21:03:20 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mwdoU-0000AOC@garnet.msen.com>; Tue, 1 Dec 92 15:03 WET
Message-Id: <m0mwdoU-0000AOC@garnet.msen.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: NCSA http server 
In-Reply-To: Your message of Tue, 01 Dec 92 11:25:27.
             <9212011925.AA22449@wintermute.ncsa.uiuc.edu> 
Date: Tue, 01 Dec 92 15:03:04 EST
From: Edward Vielmetti <emv@msen.com>

i like the "back to top" stuff at the bottom of the 'x collage' menus!
didn't feel like i was getting lost there at all.

--Ed

From marca@wintermute.ncsa.uiuc.edu  Tue Dec  1 23:18:53 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03658; Tue, 1 Dec 92 23:18:53 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05693; Tue, 1 Dec 1992 23:32:01 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA16039
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 1 Dec 92 16:31:59 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA23439; Tue, 1 Dec 92 16:33:13 -0800
Date: Tue, 1 Dec 92 16:33:13 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212020033.AA23439@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: question on databases

This is a slightly incongruous forum for this question, but then
again, not really, since if I get an answer then we can release some
interesting networked information system software that otherwise
wouldn't be made available.... so:

Is there a free relational database that understands SQL that is
available on the net?

Thanks,
Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From fine@cis.ohio-state.edu  Wed Dec  2 01:44:09 1992
Return-Path: <fine@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04342; Wed, 2 Dec 92 01:44:09 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA22811; Wed, 2 Dec 1992 01:57:17 +0100
Received: by soccer.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA18034; Tue, 1 Dec 92 19:57:14 -0500
Date: Tue, 1 Dec 92 19:57:14 -0500
From: Thomas A. Fine <fine@cis.ohio-state.edu>
Message-Id: <9212020057.AA18034@soccer.cis.ohio-state.edu>
To: www-talk@nxoc01.cern.ch
Subject: Ideas for the future
X-Mailer: Perl Mail System v1.1


Idea 1.  HTML  (Just a nice feature)
------------------------------------

I'd like to be able to PUT files onto remote sites.

The idea is, that documents might be maintained by people at different
sites.  As it is, they have to coordinate updates through email, and it's
generally a pain.  What you'd want is to just connect, get the docuement,
edit it, and put it back.  (Ideally, you'd have an editor built into your
browser to do this, but that's another problem.)

(BTW, Is the only proposed new HTTP stuff in
 http://info.cern.ch/hypertext/WWW/Protocols/HTTP.html ?  I couldn't find
 anything mentioning either disconnection or end of document in that proposal)

PUT docuement
  If you don't have permission -> Permission Denied
  If the file already exists, and you don't have a lock -> Document not locked
  Otherwise, the server would return READY, the client would send the
    data, unlock the file (if locked), and disconnect.

LOCK document
  If you don't have permission -> Permission Denied
  If the file doesn't exist -> No such document
  If the file is already locked -> Document already locked
  Otherwise the server marks the document as locked, and returns a copy to you.

If you want to keep the server stateless, then you can't store lock
information.  This means you have to do the LOCK and the PUT in the same
connection.  This has the advantage that you can't possibly have stale
locks - if the connection dies, the lock is automatically deleted.  But
you can no longer rely on a disconnect to mean end of document.  You'd
have to make another addition to the protocol - the response from the server
would have to include the size of the document about to be transmitted.
The other disadvantage to this is that editing may take a while -

On the other hand, if you are willing to make the server stateful, then
you could still rely on disconnect to mark end of document, in the case of
PUT the disconnect would come from the client.  Of course, with a stateful
server, you'd have to expire the locks after a couple of days, in case some
bozo forgot that he started to edit something.

Note that this will also gunk up your config file with access control stuff,
especially if you want to selectively control write access.

This could potentially be useful for setting up free areas where anyone
can document anything they like - we hope to set an area up like this here
for local use, just to see if anything develops from it (but we still need
a good editor).

Also, this might make a useful way to discuss things like this - rather than
responding to my article, you could just add anchors to it in appropriate
places that point to your response(s).

Idea 2.  HTML/HTTP  (something I think is needed)
-------------------------------------------------

When you get lots of good documentation into WWW, there's going to need
to be some guarentee of access to that information.  The best way to
do that is with multiple servers.  From an HTTP standpoint, that only
requires another attribute (or list of attributes if > 2 sites) be added
for fallbacks:

<A NAME=id1 HREF=//info.cern.ch/hypertext/ImportantDocument
     FALLBACK=//www.cis.ohio-state.edu/hypertext/ImportantDocument> ... </A>

or you could add numbered HREFS, or call them IREF, JREF, etc. :-), doesn't
matter. (Or can you even have multiple attributes with the same identifier?)

I see this being used in two different ways.  In the first, a single site
would run servers on more than one machine, in case one goes down.  The
physical data would all be on the same disk(s), but mounted on both machines.
In the second, different sites would provide mirroring of information,
for instance, Ohio State would GET all of cerns documents and store them
locally, and cern would include references to ohio state.

This looks like it might complicate things if we have implemented LOCK
in the protocol.  In the second case, no problem.  Cern is the master,
Ohio State just picks things up from cern.  In the first case, we can
solve the problem similarly - configure one server to allow editing, and
one to be read only.  Then if the main server goes down, you have no
editing capability but you can still view the data.

Lastly, a good idea even if you don't implement multiple servers:  ping the
site before you connect.

Idea 3.  Documents
------------------

Once we get things more settled, a good showcase for this system, and
one that would really sell "The Net" on it, would be to convert all of
the newsgroup FAQs to html documentation.  This wouldn't exactly be a
trivial task (perhaps we could recruit some FAQ maintainers to help)
but it would be of enormous value.  We could start on it now, and have
it ready together with the software.

      tom


From connolly@pixel.convex.com  Wed Dec  2 03:09:11 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05557; Wed, 2 Dec 92 03:09:11 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA03629; Wed, 2 Dec 1992 03:22:20 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09445; Tue, 1 Dec 92 20:22:17 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20569; Tue, 1 Dec 92 20:22:15 -0600
Message-Id: <9212020222.AA20569@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML providers: please grab sgmls and the DTD
Date: Tue, 01 Dec 92 20:22:15 CST
From: Dan Connolly <connolly@pixel.convex.com>

Tim,

I noticed you've been diddling with the HTML files
on info.cern.ch -- quoted your attributes, dotted
your i's and crossed your t's, so to speak.

But the files still don't fit into SGML.

Please: grab the sgmls-0.8.tar ... wait! there's a 1.0!
on ifi.uio.no in /pub/SGML/SGMLS. I have experience
with the sgmls-0.8.tar.Z -- I know it builds and runs
like a champ. I'll have to check the 1.0 version out.

Then check a few of your files by doing

% sgmls -s html.dtd yourfile.html

If you get errors, either fix your software or
diddle with the DTD until you get something that
works. Even if the official HTML dtd is never
modified to match your data, you'll have _some_
SGML DTD that specifies what you produce.

A word of warning: there's a rule-of-thumb everybody
ought to follow in writing DTD's: only used mixed
content for repeatable-or groups. That is, if you've
got an element that can contain a mixture of PCDATA
and elements, don't impose any special order on
the elements.

For example: I wanted to do this:

<!ELEMENT HTML - - ((TITLE? & ISINDEX?), (H1|H2|DL|OL|XMP|#PCDATA)+)>

But then the HTML element would have mixed content (see
the TITLE, H1, elements along with #PCDATA). The problem
is that if you write:

<TITLE>foo</title>
<ISINDEX>
<h1>a header</h1>
some data...

The newline after </title> is treated as PCDATA, which is not
allowed before ISINDEX. The options you're left with are:

1. Watch out where you put newlines (we hate this.)

2. Use a repeatable-or group, like this:
<!ELEMENT HTML - - (TITLE | ISINDEX | H1|H2|DL|OL|XMP|#PCDATA)*>
Then all your structure is gone (TITLES are allowed anywhere...).

3. Only use element content (move the #PCDATA out
	of the HTML element) like this:
<!ELEMENT HTML - - ((TITLE? & ISINDEX?), BODY>
<!ELEMENT BODY - - (H1|H2|DL|OL|XMP|#PCDATA)+)>
This is what I did.

[Notice that these tags are minimizable,
so that existing HTML documents that don't have them are
still legal. This was perhaps a bad idea. For example, I
had to hack the BODY model group badly to get the desired
effect.]

I've wrestled quite a bit with the header/body thing, and
I can't seem to come up with a DTD that 1) makes most existing
HTML legal, and 2) imposes _any_ structure on the thing.

I'm just about to give up on the structure business. Do any
implementations have problems with <TITLE> elements in
the middle of the document? If not, I can just change the
DTD so that HTML is just "tag soup" -- anything goes anywhere.

Another idea is to move the TITLE and other header
info outside the HTML format and MIME messages for
HTTP transport, so that

<TITLE>the title</TITLE>
<h1>the header</h1>
... the text...

becomes

Subject: the title
Content-type: text/x-html

<h1>the header</h1>

The header information would be part of the protocol, and
not part of the HTML data. Local files would get their
header information from the filesystem. WAIS documents
would get their header information from the :document
structure.

Anyway... get the sgmls parser and validate the data
you provide! I'd like to have more folks than just
me bumping up against the SGML issues.

Dan


From connolly@pixel.convex.com  Wed Dec  2 03:18:35 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05780; Wed, 2 Dec 92 03:18:35 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05355; Wed, 2 Dec 1992 03:31:44 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09612; Tue, 1 Dec 92 20:31:41 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA20968; Tue, 1 Dec 92 20:31:39 -0600
Message-Id: <9212020231.AA20968@pixel.convex.com>
To: "Thomas A. Fine" <fine@cis.ohio-state.edu>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Ideas for the future 
In-Reply-To: Your message of "Tue, 01 Dec 92 19:57:14 EST."
             <9212020057.AA18034@soccer.cis.ohio-state.edu> 
Date: Tue, 01 Dec 92 20:31:39 CST
From: Dan Connolly <connolly@pixel.convex.com>


Has anybody else noticed how much HTTP is starting to
look like NNTP? I think NNTP does most of what we need,
especially when restricted to nntpd's xfer mode -- then
it's stateless.

* it's a distributed database
* with MIME, it's multimedia
* it works.
* it's telnet-based, and easy to mess with.

Wouldn't it be nice to be able to send NEWNEWS commands
to a hypertext server?

Just a thought...

By the way... see RFC977 (ftp://nnsc.nsf.net/rfc/rfc977.txt)
for the whole story.

Dan


From marca@wintermute.ncsa.uiuc.edu  Wed Dec  2 03:21:52 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05835; Wed, 2 Dec 92 03:21:52 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05433; Wed, 2 Dec 1992 03:35:01 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA27675
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Tue, 1 Dec 92 20:34:59 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA24215; Tue, 1 Dec 92 20:36:09 -0800
Date: Tue, 1 Dec 92 20:36:09 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212020436.AA24215@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: HTML providers: please grab sgmls and the DTD
In-Reply-To: <9212020222.AA20569@pixel.convex.com>
References: <9212020222.AA20569@pixel.convex.com>

Dan Connolly writes:
> I noticed you've been diddling with the HTML files
> on info.cern.ch -- quoted your attributes, dotted
> your i's and crossed your t's, so to speak.
> 
> But the files still don't fit into SGML.

Can you expand on this a little more?  Specifically what is he doing
that isn't good?

Marc


From connolly@pixel.convex.com  Wed Dec  2 03:29:19 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05970; Wed, 2 Dec 92 03:29:19 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA06962; Wed, 2 Dec 1992 03:42:28 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA09725; Tue, 1 Dec 92 20:42:25 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA21137; Tue, 1 Dec 92 20:42:24 -0600
Message-Id: <9212020242.AA21137@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: HTML providers: please grab sgmls and the DTD 
In-Reply-To: Your message of "Tue, 01 Dec 92 20:36:09 PST."
             <9212020436.AA24215@wintermute.ncsa.uiuc.edu> 
Date: Tue, 01 Dec 92 20:42:24 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Dan Connolly writes:
>> I noticed you've been diddling with the HTML files
>> on info.cern.ch -- quoted your attributes, dotted
>> your i's and crossed your t's, so to speak.
>> 
>> But the files still don't fit into SGML.
>
>Can you expand on this a little more?  Specifically what is he doing
>that isn't good?

I misspoke: the files he's generating are now to
the point where they can be described by some DTD,
just not the one I suggested.

Mostly he's added <HEADER> and <BODY> tags and quoted
his HREFs.

But, for example, he's still putting numbers in the
NAME attribute of anchors. I wanted to use SGML
ids, which are guaranteed to be distinct per
anchor (modulo case of letters). But they
must start with a letter.

You can change the DTD so that the NAME attribute
is a NUMBER or NMTOKEN, but then you lose the distinctness
guarantee (or you change it from an SGML construct
to an application convention.)

And adding the HEADER and BODY elements to the DTD
the way he's used them makes most of the HTML out there broken.

Dan


From TONYJ@scs.slac.stanford.edu  Wed Dec  2 05:46:25 1992
Return-Path: <TONYJ@scs.slac.stanford.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06496; Wed, 2 Dec 92 05:46:25 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA25822; Wed, 2 Dec 1992 05:59:34 +0100
Date: Tue, 1 Dec 1992 20:59 PDT
From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: Bug fix for MidasWWW-1.0
To: www-talk@nxoc01.cern.ch
Message-Id: <43F19679F0801933@SCS.SLAC.STANFORD.EDU>
X-Envelope-To: www-talk@nxoc01.CERN.CH
X-Vms-To: in%"www-talk@nxoc01.CERN.CH"
X-Vms-Cc: TONYJ

Since many of the CERN HTML documents (in particular the CERN home page) were 
changed recently to include " "'s around the document references and since version 
1.0 of midas did not support this, many of the links from the CERN home pages no 
longer work with midaswww. The sympom is a message of the form:

Error:

  Gateway was unable to connect to: "http://info.cern.ch/" 

The fix involves changing one small routine in the midaswww-1.0 distribution, 
SGMLAnchorText.c ... The fixed routine is now available as a plain text file via 
anonymous ftp from   FreeHEP.Scri.Fsu.Edu as    

/freehep/networking_email_news/midaswww/midaswww-1.0-fix001-SGMLAnchorText.c


As many people have pointed out, there are many more bugs in version 1.0 of 
midaswww. I am working to fix them all and expect to have a new release in the next 
month. Thanks to everyone who has been sending bug reports (and even more thanks to 
those who have sent fixes!).

Tony

From timbl@www3.cern.ch  Wed Dec  2 19:03:57 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10672; Wed, 2 Dec 92 19:03:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA23770; Wed, 2 Dec 1992 19:17:06 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02549; Wed, 2 Dec 92 19:12:17 +0100
Date: Wed, 2 Dec 92 19:12:17 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212021812.AA02549@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Mailing list server
Reply-To: timbl@nxoc01.cern.ch


I certainly have a www-talk archive kept by the mailing list
distributer, so I have the disk space already used up.
I'm very happy to serve it on the web.

I'd be interested in the scripts Jim used to serve up the HTML.

These are a useful tool.  Perhaps the scripts and basic instructions
should be in the web -- lots of people could use them.
(I would unsubscribe to several lists if they were on the web :-)

Do the scripts scale to infinity with an idnex, or should we include the  
month-year in the http address of an archived mail message?

(Jim, escaping:    < becomes &lt; and & becomes &amp;  )

Tim


From timbl@www3.cern.ch  Wed Dec  2 19:30:00 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10867; Wed, 2 Dec 92 19:30:00 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA29752; Wed, 2 Dec 1992 19:43:10 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02566; Wed, 2 Dec 92 19:38:18 +0100
Date: Wed, 2 Dec 92 19:38:18 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212021838.AA02566@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>
Subject: Port numbers: Clarification
Cc: F.Zwarts@kvi.nl, timbl@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>  Date: Tue, 1 Dec 1992 18:28 PDT
>  From: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>

>  >>  b) There is some confusion about what port to use by default. MidasWWW  
uses port
>  >>     80 by default, although some older versions of the LineMode browser  
used port
>  >>     2784. You can change the default by putting a line...
>  >>
>  >>     midaswww*defaultHTTPPort: 2784
>  >>
>  >>     into the midaswww.ad file, although this is not really recommended.

It is NOT RECOMMENDED. 

ALL BROWSERS SHOULD DEFAULT TO PORT 80 IN ALL CASES IRRESPECTIVE OF THE 

CONTEXT OF THE REFERENCE. Some of the doc was out of date on this point,
I hope I have fixed it all now.

Given the
>  >>     above confusion it is probably a good idea to always put the port  
number in
>  >>     explicitly in your links.

That is true, as some old browsers will still be around, unless the server
supports both port numbers.

Anyone who has an old browser which defaults
to port 2784 should upgrade it.

(By the way, the WWW library will, if the port number is 80 and no connection
is made, try 2784 just in case, but this will be phased out).

If you have a server which does not run on port 80 and there is any link
to it without an explicit port number, tell the author of the link
(if me, me).


>  my parser in fact does not use the defaultHTTPPort, it actually inherits the  
port number 

>  from the source document,

That is not the way it is supposed to work.
>  I will try to fix this, but I still think it would be a good idea for Tim to  
add explicit 

>  port numbers.

Tell me where.
>  

>  Tony
>  

	Tim
	

From weber@eitech.com  Thu Dec  3 02:26:07 1992
Return-Path: <weber@eitech.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13332; Thu, 3 Dec 92 02:26:07 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA29919; Thu, 3 Dec 1992 02:39:17 +0100
Received: from hewey.eitech.com by eitech.com (4.1/SMI-4.1)
	id AA20266; Wed, 2 Dec 92 17:37:52 PST
Date: Wed, 2 Dec 92 17:37:52 PST
From: weber@eitech.com (Jay C. Weber)
Message-Id: <9212030137.AA20266@eitech.com>
To: www-talk@nxoc01.cern.ch
Subject: HyTime?
Content-Type: text/plain; charset=us-ascii


Can someone provide a reference to find out more on HyTime?

Thanks, Jay
---------------------------------------------------------------------
Jay C. Weber					weber@eitech.com
Enterprise Integration Technologies		weber@cis.stanford.edu
459 Hamilton Avenue, Suite #100			(415)617-8002
Palo Alto, CA 94301

From connolly@pixel.convex.com  Thu Dec  3 02:57:33 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13472; Thu, 3 Dec 92 02:57:33 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA02926; Thu, 3 Dec 1992 03:10:44 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA02270; Wed, 2 Dec 92 20:10:39 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA10364; Wed, 2 Dec 92 20:10:38 -0600
Message-Id: <9212030210.AA10364@pixel.convex.com>
To: weber@eitech.com (Jay C. Weber)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: HyTime? 
In-Reply-To: Your message of "Wed, 02 Dec 92 17:37:52 PST."
             <9212030137.AA20266@eitech.com> 
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="cut-here"
Date: Wed, 02 Dec 92 20:10:37 CST
From: Dan Connolly <connolly@pixel.convex.com>


--cut-here

>Can someone provide a reference to find out more on HyTime?

Try comp.text.sgml or the FTP archive at ftp.ifi.uio.no
I'ts not much, but it's something.

comp.text.sgml is archived via a WAIS server too:

--cut-here
Content-Type: application/x-wais-source

(:source
:version  3
:ip-name "ifi.uio.no"
:tcp-port 210
:database-name "SGML"
   :cost 0 
   :cost-unit :free 
   :maintainer "anders@ifi.uio.no"
:description "Server created with WAIS release 8 b4.1 on May  7 16:28:27 1992
 by anders@ifi.uio.no
Standard Generalized Markup Language information
")

--cut-here--


From davis@dri.cornell.edu  Thu Dec  3 03:47:02 1992
Return-Path: <davis@dri.cornell.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13655; Thu, 3 Dec 92 03:47:02 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA08441; Thu, 3 Dec 1992 04:00:13 +0100
Received: by willow.tc.cornell.edu id AA05903
  (5.65c/IDA-1.4.4 for www-talk@nxoc01.cern.ch); Wed, 2 Dec 1992 22:00:14 -0500
Date: Wed, 2 Dec 1992 22:00:14 -0500
From: Jim Davis <davis@dri.cornell.edu>
Message-Id: <199212030300.AA05903@willow.tc.cornell.edu>
To: weber@eitech.com
Subject: Re: HyTime?
Cc: www-talk@nxoc01.cern.ch

Stephen R Newcomb et al
The HyTime Hypermedia/Time-based Document Structuring Language
CACM vol 34 number 11 Nov 1991 67-83

From what I can tell, HyTime began as a language for describing music
in the mid 80s, as a generalization of MIDI.  HyTIme retains much of
this musical influence in the choice of metaphors.  HyTime devotes
much effort to schedulinging in space and time the appearance of
events (which might be musical notes, might be documents

HyTime documents are available by FTP from mailer.cs.fsu.edu in pub/sgml
(Old info, not sure if still true)

From marca@wintermute.ncsa.uiuc.edu  Thu Dec  3 03:50:14 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA13674; Thu, 3 Dec 92 03:50:14 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA08551; Thu, 3 Dec 1992 04:03:25 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA13721
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 2 Dec 92 21:03:22 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA27055; Wed, 2 Dec 92 21:04:35 -0800
Date: Wed, 2 Dec 92 21:04:35 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212030504.AA27055@wintermute.ncsa.uiuc.edu>
To: weber@eitech.com
Cc: www-talk@nxoc01.cern.ch
Subject: Re: HyTime?
In-Reply-To: <199212030300.AA05903@willow.tc.cornell.edu>
References: <199212030300.AA05903@willow.tc.cornell.edu>

Jim Davis writes:
> Stephen R Newcomb et al
> The HyTime Hypermedia/Time-based Document Structuring Language
> CACM vol 34 number 11 Nov 1991 67-83

This article is available via WAIS in (I think) cacm.src.

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From mcclanah@dlgeo.cr.usgs.gov  Thu Dec  3 20:57:08 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA22526; Thu, 3 Dec 92 20:57:08 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA18290; Thu, 3 Dec 1992 21:10:20 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA15202; Thu, 3 Dec 92 14:06:55 CST
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA22852; Thu, 3 Dec 1992 14:11:23 -0600
Date: Thu, 3 Dec 1992 14:11:23 -0600
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9212032011.AA22852@dlgeo.cr.usgs.gov>
To: "Tony Johnson (415) 926 2278" <TONYJ@scs.slac.stanford.edu>,
        www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: Re: Bug fix for MidasWWW-1.0


Okay I found you other message, ftp'd it and recompiled - everything
(well relatively speaking) is okay now.

Thanks again.
Pat

From connolly@pixel.convex.com  Fri Dec  4 19:58:25 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28440; Fri, 4 Dec 92 19:58:25 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA19150; Fri, 4 Dec 1992 20:11:39 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA02028; Fri, 4 Dec 92 13:11:34 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23347; Fri, 4 Dec 92 13:11:32 -0600
Message-Id: <9212041911.AA23347@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: The spec evolves...
Date: Fri, 04 Dec 92 13:11:32 CST
From: Dan Connolly <connolly@pixel.convex.com>


I just uploaded to ftp://info.cern.ch/pub/incoming:

libHTML-921202.tar.Z -- HTML parsing library with demo
	program. (includes current DTD)

html_spec-921202.tar.Z -- HTML.html and related files,
	moving toward a spec.


I've made some significant changes to the DTD.

1. I put SHORTTAG NO in the SGML declaraion. This
means a) _all_ attributes have to be quoted (numbers,
names, ids, CDATA -- everything), but b) it makes
parsing cleaner: minimization isn't allowed. The NET
feature is disabled (that's for doing

	<bold/foo bar/   in stead of
	<bold>foo bar</bold>

tricky to parse.)

2. I figured out a way to support HEAD/BODY tags
without breaking things. We lose some structure, but
we gain some too. And this time I stuck by the
mixed content rule-of-thumb.

3. I got rid of the TYPE attribute on anchor tags.
What's that thing for anyway. Does anybody use it?

4. I changed TYPEWRITER to PRE. My new motto is:
just describe it; don't prescribe it.

4. I added a TEXT attribute to anchor tags. The idea
is that all <A HREF=...> point to MIME text/* objects. The
TEXT parameter tells you the subtype, so you don't have
to zen it from the filename (or so you can override the
filename.) For example:

	<A HREF="TheProject.html" TEXT=PLAIN>This is
		a link to that file treated as a plain text
		file.</A>

	<A HREF="abcdef" TEXT=HTML>abcdef is an HTML entity,
	even though it doesn't have and extension.</A>

It's a little prescriptive, but those semantics are
mostly implemented already.

5. I changed anchor names from SGML Id's to NMTOKENS, so you
can use numbers or whatever you want. Since we don't have any
IDREFs pointing to them, there's no reason to use ID's.
In other words, I've moved this feature into the realm of
application conventions rather than SGML features.

6. I changed XMP and LISTING back to RCDATA. I was messing with
the MidasWWW browser, and I couln't figure out how, when I'm
dumping the SGML out of the data structures into a file, to
tell whether I should change '<'s to "&lt;" or not. If we avoid
CDATA, we can use entities everywhere, and processing is simpler.
How's that sound?

Now some ideas to kick around...

* Somebody mentioned a <VAR>...</VAR> tag for stuff that shouldn't be
cached. I'm thinking it should be a node-wide empty tag, like
ISINDEX. Maybe <VOLATILE> is a good word.

Then I think to myself, why not make it an attribute on the HEAD
element:

<!ATTLIST HEAD     STATUS (OK, ERROR, VOLATILE) OK>


More later...

Dan


From emv@garnet.msen.com  Fri Dec  4 23:33:30 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29626; Fri, 4 Dec 92 23:33:30 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA04256; Fri, 4 Dec 1992 23:46:41 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mxlnB-00009qC@garnet.msen.com>; Fri, 4 Dec 92 17:46 WET
Message-Id: <m0mxlnB-00009qC@garnet.msen.com>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of Fri, 04 Dec 92 13:11:32.
             <9212041911.AA23347@pixel.convex.com> 
Date: Fri, 04 Dec 92 17:46:23 EST
From: Edward Vielmetti <emv@msen.com>

  4. I added a TEXT attribute to anchor tags. The idea
  is that all <A HREF=...> point to MIME text/* objects. The
  TEXT parameter tells you the subtype, so you don't have
  to zen it from the filename (or so you can override the
  filename.) For example:
  
  	<A HREF="TheProject.html" TEXT=PLAIN>This is
  		a link to that file treated as a plain text
  		file.</A>

Is there an SGML reason (apart from a W3 reason) not to also recommend
that we do a
   <A HREF="ftp://wuarchive.wustl.edu:/graphics/gif/f/fishies"
      CONTENTTYPE="image/gif"> 
   This is a link to a picture of some fishies.</A>
where the CONTENTTYPE matches the MIME/IANA registry of same?  This
would be a simple enough way to stick in links to graphics.  

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB





From emv@garnet.msen.com  Fri Dec  4 23:34:28 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29643; Fri, 4 Dec 92 23:34:28 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA04293; Fri, 4 Dec 1992 23:47:43 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0mxlo0-00009qC@garnet.msen.com>; Fri, 4 Dec 92 17:47 WET
Message-Id: <m0mxlo0-00009qC@garnet.msen.com>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of Fri, 04 Dec 92 13:11:32.
             <9212041911.AA23347@pixel.convex.com> 
Date: Fri, 04 Dec 92 17:47:14 EST
From: Edward Vielmetti <emv@msen.com>

Dan, I'd suggest posting some of these idea to "comp.text.sgml", if
only to let that part of the world in on what we're all up to.  Plenty
of DTD experts there to catch you on any quibbles...

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From marca@wintermute.ncsa.uiuc.edu  Sat Dec  5 00:44:38 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00147; Sat, 5 Dec 92 00:44:38 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA09862; Sat, 5 Dec 1992 00:57:52 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA10492
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 4 Dec 92 17:57:51 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA01046; Fri, 4 Dec 92 17:59:05 -0800
Date: Fri, 4 Dec 92 17:59:05 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212050159.AA01046@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Cc: marca@ncsa.uiuc.edu
Subject: last-modified document info?

Would it be a good, bad, or indifferent idea to allow clients to take
advantage of last-modified dates for documents when such information
exists and the document server can provide it?  Specifically, should
httpd be able to provide this information somehow, and/or should
last-modified become an optional field in the header of an HTML
document?

Just random thoughts, based on the assumption that it sure would be
nice to be able to tell that document A was last modified in 1973...

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From connolly@pixel.convex.com  Sat Dec  5 00:54:42 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00192; Sat, 5 Dec 92 00:54:42 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10889; Sat, 5 Dec 1992 01:07:56 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA17605; Fri, 4 Dec 92 18:07:51 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23595; Fri, 4 Dec 92 18:07:49 -0600
Message-Id: <9212050007.AA23595@pixel.convex.com>
To: Edward Vielmetti <emv@msen.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of "Fri, 04 Dec 92 17:46:23 EST."
             <m0mxlnB-00009qC@garnet.msen.com> 
Date: Fri, 04 Dec 92 18:07:49 CST
From: Dan Connolly <connolly@pixel.convex.com>


>Is there an SGML reason (apart from a W3 reason) not to also recommend
>that we do a
>   <A HREF="ftp://wuarchive.wustl.edu:/graphics/gif/f/fishies"
>      CONTENTTYPE="image/gif"> 
>   This is a link to a picture of some fishies.</A>
>where the CONTENTTYPE matches the MIME/IANA registry of same?  This
>would be a simple enough way to stick in links to graphics.  

There's no SGML reason. The reason I didn't generalize to arbitrary
MIME entities is that the A tag has never had those semantics, and
it would be problematic to introduce them now.

Imagine what would happen if you fed that sample to the current linemode
browser: it would gladly ftp to wuarchive and barf gif data on
your screen.

This is not so much of a problem as long as the referent entity
is some subtype of text/* -- that's the reason for the two-level
hierarchy of mime types in the first place.

I'm trying to keep up with all sorts of HTML ideas.  Some things can be
added to html.dtd without significant changes to W3 code (like adding a
BLOCKQUOTE tag for a new paragraph style). But for things that will
require changes to the architecture, I'm developing a separate DTD from
the descriptive html.dtd.

First, I'm suggesting a change in terminology. The representation
of a node, which used to be called a document, and is sometimes
now called a resource (e.g. Universal Resource Locator), should
be called an Entity. This coincides with the SGML and MIME
usage of the term for "a unit of retreival."

Then the term "document" is not used for a unit of retrieval.
The WAIS protocol, for example, allows you to retrieve individual
"chunks" -- paragraphs, lines, etc. The term "entity" is well
suited to these chunks.

In stead, a "document" is a collection of entities that share
some context. This context is what the client uses to translate
relative URL's into absolute URLs. So the document that a node
belongs to consists of all the nodes you can reach from that node
by following only local links (i.e. a maximally-connected subgraph
of the web).

This allows the author to differentiate between links between
nodes of the corpus s/he's writing and links outside to
other works.

From my new DTD...

<!-- I think the A tag is overloaded. I'd like to deprecate
     it in favor of the XREF and SEE elements.
  --> 

<!ELEMENT XREF - - (#PCDATA)
 -- This element is for links within an HTML document. (a document
    is a collection of entities, or a web of nodes that share context).
 -->

<!ATTLIST XREF
        CONTEXT CDATA #IMPLIED -- defaults to the entity containing the XREF --
        -- SGML purists would make this attribute an ENTITY reference,
           and put the URL in the SYSTEM identifier in the prologue.
           For expediency, we put the URL right in the attribute.
        --
        ORIGIN CDATA #IMPLIED
        -- another URL, used as an identifier, rather than a locator.
           Ala the WAIS original-server,database,local-id triple.
        --
        REF IDREF #REQUIRED  -- ID of referent element --
        >

<!ELEMENT SEE - - (#PCDATA)
 -- This element is for links from an HTML document to any entity
    in the global web. The address and content-type of the entity
    are sufficient to resolve the reference.

    The other attributes could be specified in the text of the
    SEE content, but by making them attributes, the client software
    can process them, for example, to display a table of references
    sorted by date.
 -->
<!ATTLIST SEE
        ADDRESS CDATA #REQUIRED -- URL of referent entity --
        CONTENT-TYPE CDATA #REQUIRED -- MIME Content-Type for the entity --
        TARGET CDATA #IMPLIED
        -- This is the analogue of the #anchor mechanism.
           If CONTEXT is an SGML entity, this could be an ID,
           though it won't be validated.
           However, if CONTEXT is a text file, this could be a line number
	   to scroll to.
           The meaning depends on the content-type.
        --
        ORIGIN CDATA #IMPLIED
        -- another URL, used as an identifier, rather than a locator.
           Ala the WAIS original-server,database,local-id triple.
        --
        FROM CDATA #IMPLIED -- email address or name of author/provider --
        DATE NUMBER #IMPLIED -- in ISO format: YYYYMMDDHHMMSSZ --
        BYTES NUMBER #IMPLIED -- useful in many cases --
        MD5 CDATA #IMPLIED -- data signature --
        >

Comments are solicited...


Dan


From connolly@pixel.convex.com  Sat Dec  5 08:10:29 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01782; Sat, 5 Dec 92 08:10:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA13073; Sat, 5 Dec 1992 08:23:44 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA03122; Sat, 5 Dec 92 01:23:11 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA03414; Sat, 5 Dec 92 01:23:07 -0600
Message-Id: <9212050723.AA03414@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: multimedia projects survey...
Date: Sat, 05 Dec 92 01:23:07 CST
From: Dan Connolly <connolly@pixel.convex.com>


Tim: you wanna reply to this?

------- Forwarded Message

Xref: convex comp.compression:5352 comp.protocols.iso:3234 comp.mail.multi-media:933 comp.multimedia:4515
Path: convex!convex!cs.utexas.edu!wupost!uunet!mcsun!uknet!edcastle!cja
From: cja@castle.ed.ac.uk (C Adie)
Newsgroups: comp.compression,comp.protocols.iso,comp.mail.multi-media,comp.multimedia
Subject: Networked multimedia
Summary: Survey of multimedia networking
Keywords: multimedia, networks
Message-Id: <29035@castle.ed.ac.uk>
Date: 3 Dec 92 12:41:56 GMT
Organization: Edinburgh University
Lines: 254


I have been requested by RARE to carry out a survey on NETWORKED MULTIMEDIA,
and I'm writing to ask for your help.

RARE (Reseaux Associes pour la Recherche Europeenne) is the organisation
which looks after the networking needs of Europe's researchers, and it
has recently formed a Working Group on multimedia networking.  The
survey has been instigated by that group, and will be used to guide its
further work.

The survey covers RESEARCH projects, published STANDARDS, and PRODUCTS
available in the field of networked multimedia.  Obviously, this could
be a huge task.  It can only be managable if we get good cooperation and
input from people on the net.  What we'd like is some information about
things we've missed, and about things which we know exist but have
insufficient information on.

                                 RESEARCH
                                 ========
This part of the survey is a listing of current research projects involving
networked multimedia.  We don't know enough, and have no-one to ask, about
the following projects:

PROJECT         INSTITUTION
- -------         -----------
ISA		? (Esprit)
MUSE		CECI, MIT, USA
CIO		U of Ulm, Germany
TINA (Telecommunications Networking Information Architecture)
ACME		UC Berkeley, USA
Cruiser		Bellcore, USA

We're also looking for other research projects which we have missed. 
I'm sure there are several more CEC-funded research projects which we
need to find out about.  We already know (or know who to ask) about the
following projects:

MNI		Lancaster University, GB
OSI95		Lancaster University, GB
CAR		UCL, GB
MICE		UCL, GB
DARPA teleconferencing
PACT		UCL, GB
ACT		UCL, GB
PREPARE		UCL, GB
Multi-G		SICS, Sweden
Zenith		Lancaster University, GB; Kent University, GB
EVAN		HW University, GB
MM over Janet	UCL, GB
MADE		BT
Palantir	Kent University, GB
EuroBridge	RWTH Aachen, Germany
Berkom II	DEC, Germany

                                 STANDARDS
                                 =========
This part of the survey covers standards (de facto and industry
standards as well as standards-bodies standards) which are concerned
with networked multimedia and with compound document exchange.  We don't
know enough about the following standards:

STANDARD        DESCRIPTION
- --------        -----------
JBIG		Binary image encoding form
T.101 - T.106	unknown

We're also looking for other relevant standards which we have missed. 
We already know enough (or know who to ask) about the following
standards:

RTP		Real-time Transport Protocol for audio & video over IP
MIME		Multimedia mail standard on the Internet
ST2		High speed protocol to run alongside IP for multimedia
Bento		Platform-independant compound document format from Apple
HyTime		SGML-based standard for hypermedia documents
MHEG		ASN.1-based standard for hypermedia documents
MPEG		Video & audio compression, synchronization
JPEG		Compression algorithm for continuous-tone colour stills
ODA		Office Document Architecture
G.711		64kbps 8kHz 8-bit PCM audio encoding
G.721		32kbps ADPCM audio encoding
G.722		64kbps SB-ADPCM audio encoding
H.242		Point-to-point conferencing codec standard
H.243		Multipoint video codec standard
H.261		px64kbps video encoding
H.320		Umbrella for compression, data rates, audio encoding
T.80 - T.83	Still image compression techniques for communications
T.170 - T.176	Multimedia/hypermedia objects, functions and protocols
T.121 - T.124	Network-independent audio-conferencing protocols
X.400		Multimedia mail
QuickTime Movie Format 	Apple Macintosh sequenced information file format
MIDI		Musical Instrument Digital Interface
Carousel	Platform-independant compound document format from Adobe

                                 PRODUCTS
                                 ========
This part of the survey covers products which are concerned with
networked multimedia, including desktop conferencing.  "Products" covers
commercial offerings, freeware developed in academia, and also
freely-available research tools such as vat.  We need further
information on the following products:

SUPPLIER                PRODUCT
- --------                -------
Specom Technologies Corp Picfon	
Bitfield		BVCS			
Tandberg Telecom	VC7000		
Memtec			VS-1000			
TechnoTeacher		HyMinder		
IIS Technologies	MacMica		
Group Technologies	Aspects		

We're also looking for other relevant products which we have missed.  We
already know enough (or know who to ask) about the following products:

IBM			Person to Person/2	
Xanadu			?			
The Electronic Studio	ES.F2F		
Stanford University	Maestro		
Starlight		Media Server		
CLI			Cameo PVS		
CoSA			PACo			
Bellcore		MetaMail		
Microsoft		Mail			
LBL			vat			
INRIA			ivs			
Xerox/PARC		nv			

If you can provide information about any of these, or if you know of
things we have missed, please mail me.

We plan to produce a draft survey report before the end of December. 
When complete, the survey will be made freely available over anonymous
ftp. 

Chris Adie                                   Phone:  +44 31 650 3363
Edinburgh University Computing Service       Fax:    +44 31 662 4809
University Library, George Square            Email:  C.J.Adie@edinburgh.ac.uk
Edinburgh EH8 9LJ, United Kingdom

- ------------------------------------------------------------------------------

If you do provide information for the survey, it would really be
appreciated if you could use one of these forms:

RESEARCH PROJECTS
=================

Project name:		.............................................

Funding body:		.............................................

Participators:		.............................................
                        (list of participating organisations)

Timescale:		.............................................
                        (project start date and approximate finish date)

Project aims:		.............................................

Description:		.............................................
                        (up to a page of information - or point me at
                         an existing description which I could palagerise)

Standards used:		.............................................
                        (any distributed multimedia standards which are
                         used in the project)

Papers/reports:		.............................................
                        (list of papers, reports etc describing project
                         results)

Contact point:		.............................................
                        (name/email address of a contact person for
                         the project)


STANDARDS
=========

Name of standard:	.............................................
                        (the name by which the standard is colloquially known)

Reference number:	.............................................
                        (assigned by the standards body, if any)

Version:		.............................................
                        (eg "1988" or "II")

Sponsoring body:	.............................................
                        (could be a standards body or [for de facto
                         standards] a company name)

Current status:		.............................................
                        (eg DIS, or whatever)

One-line description:	.............................................

Detailed description:	.............................................
                        (up to a page of information - or point me at
                         an existing description which I could palagerise)

Future development:	.............................................
                        (where the standard is going)

Products:		.............................................
                        (any commercial/free products using the standard)

Further information:	.............................................
                        (references to the standard specification, to
                         user groups, to FTP sites, mailing lists, etc)


PRODUCTS
========

Product name:		...............................................

Current version:	...............................................

Manufacturer:		...............................................
                        (name, address and email address)

Supplier:		...............................................
                        (if different from manufacturer)

Platform:		...............................................
                        (hardware & system software requirements)

Description:		...............................................
                        (up to a page of information - or point me at
                         an existing description which I could palagerise)

Future plans:		...............................................
                        (future intentions for this or similar products)

Availability:		...............................................
                        (eg "available 1Q93", or whatever)

Price:			...............................................
                        (in currency of supplier's country - mention any
                         site licence arrangements)

Standards:		...............................................
                        (distributed multimedia standards [industry standards
                         or ISO/CCITT standards] used by the product)

Further information:	...............................................
                        (user group details, ftp site for product, published
                         reviews, etc)



Thanks for reading down to here!

------- End of Forwarded Message


From CSP1DWD@mvs.oac.ucla.edu  Sat Dec  5 21:00:45 1992
Return-Path: <CSP1DWD@mvs.oac.ucla.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03649; Sat, 5 Dec 92 21:00:45 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA00584; Sat, 5 Dec 1992 21:14:02 +0100
Message-Id: <9212052014.AA00584@dxmint.cern.ch>
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 7472; Sat, 05 Dec 92 21:13:02 SET
Received: from UCLAMVS.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 4878; Sat, 05 Dec 92 21:13:01 SET
Date:    Sat, 05 Dec 92 12:13 PST
To: www-talk@nxoc01.cern.ch
From: Denis DeLaRoca (310) 825-4580        <CSP1DWD@mvs.oac.ucla.edu>
Subject: Reshow command (LineMode) ???

I am playing with the LineMode browser in an IBM/MVS/TSO environment
and have the following problem... the VM and MVS versions add a
clear_screen() call after every prompt to stay away from VM/MVS's
builtin screen pagers, when the response of the browser is an error/
status message the previous hypertext display is lost, it'd be nice
to rig a "reshow" command that would merely regenerate the last
hypertext display... anybody can outline what data structures and
calls I have to manipulate to accomplish this?

-- Denis


From marca@wintermute.ncsa.uiuc.edu  Sun Dec  6 03:51:52 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA04910; Sun, 6 Dec 92 03:51:52 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA20948; Sun, 6 Dec 1992 04:05:09 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA12528
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Sat, 5 Dec 92 21:05:07 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA03315; Sat, 5 Dec 92 21:06:22 -0800
Date: Sat, 5 Dec 92 21:06:22 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212060506.AA03315@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: info.cern.ch ftp mirror at NCSA

A partial mirror of Web software from info.cern.ch:/pub/www is now at:

        ftp.ncsa.uiuc.edu:/Web

There are also directories 'incoming' and 'beta'; anyone is welcome to
drop off files in 'incoming', send me a note, and I'll put 'em in
'beta'.

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From marca@wintermute.ncsa.uiuc.edu  Sun Dec  6 06:22:57 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05508; Sun, 6 Dec 92 06:22:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10370; Sun, 6 Dec 1992 06:36:14 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA17586
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Sat, 5 Dec 92 23:36:11 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA03767; Sat, 5 Dec 92 23:37:25 -0800
Date: Sat, 5 Dec 92 23:37:25 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212060737.AA03767@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: html-mode.el v1.25, and wysiwyg html-mode

Since Midaswww now handles quotes around HREF fields, here is a
revised html-mode.el that does the right thing wrt quotes.

As a side note, I am starting work on a WYSIWYG html-mode that will
use Epoch's zone mechanism (or equivalently Lucid Emacs's extents) to
both remove the need to show html syntax as well as to provide
formatted screen display.  If you have user interface ideas or any
other ideas, please let me know...

Marc

;;; --------------------------------------------------------------------------
;;; HTML mode, based on text mode.
;;; Copyright (C) 1985 Free Software Foundation, Inc.
;;; Copyright (C) 1992 National Center for Supercomputing Applications.
;;; NCSA modifications by Marc Andreessen (marca@ncsa.uiuc.edu).
;;;
;;; This program is free software; you can redistribute it and/or
;;; modify it under the terms of the GNU General Public License as
;;; published by the Free Software Foundation; either version 1, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;;; General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with GNU Emacs; see the file COPYING.  If not, write to the
;;; Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
;;;
;;; -------------------------------- CONTENTS --------------------------------
;;;
;;; html-mode: Major mode for editing HTML hypertext documents.
;;; $Revision: 1.25 $
;;; $Date: 1992/12/06 07:31:30 $
;;;
;;; Canonical list of features:
;;;   See below.
;;;
;;; ------------------------------ INSTRUCTIONS ------------------------------
;;;
;;; Put the following code in your .emacs file:
;;;
;;; (autoload 'html-mode "html-mode" "HTML major mode." t)
;;; (or (assoc "\\.html$" auto-mode-alist)
;;;   (setq auto-mode-alist (cons '("\\.html$" . html-mode) 
;;;                               auto-mode-alist)))
;;;
;;; Emacs will detect the ``.html'' suffix and activate html-mode
;;; appropriately.
;;;
;;; You are assumed to be at least somewhat familiar with HTML format.
;;; If you aren't, read about it first (see below).
;;;
;;; Here are key sequences and corresponding commands:
;;;
;;; NORMAL COMMANDS:
;;;
;;; C-c a         html-add-address
;;;   Open an address element.
;;;
;;; C-c d         html-add-definition-list
;;;   Open a definition list.  The initial entry is created for you.
;;;   To create subsequent entries, use 'C-c e'.
;;;
;;; C-c e         html-add-definition-entry
;;;   Add a new definition entry in a definition list.  You are
;;;   assumed to be inside a definition list (specifically, at the end
;;;   of another definition entry).
;;;
;;; C-c h         html-add-header
;;;   Add a header.  You are prompted for size (1 is biggest, 2 is
;;;   next biggest) and header contents.
;;;
;;; C-c i         html-add-list-or-menu-item
;;;   Add a new list or menu item in a list or menu.  You are assumed
;;;   to be inside a list or menu (specifically, at the end of another
;;;   item).
;;;
;;; C-c l         html-add-normal-link
;;;   Add a link.  You will be prompted for the link (any string;
;;;   e.g., http://foo.bar/argh/blagh).  The cursor will be left where
;;;   you can type the text that will represent the link in the
;;;   document.
;;;
;;; C-c m         html-add-menu
;;;   Open a menu.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c p         html-add-paragraph-separator
;;;   Use this command at the end of each paragraph.
;;;
;;; C-c s         html-add-list
;;;   Open a list.  The initial item is created for you.  To create
;;;   additional items, use 'C-c i'.
;;;
;;; C-c t         html-add-title
;;;   Add a title to the document.  You will be prompted for the
;;;   contents of the title.  If a title already exists at the very
;;;   top of the document, the existing contents will be replaced.
;;;
;;; C-c x         html-add-plaintext
;;;   Add plaintext.  The cursor will be positioned where you can type
;;;   plaintext (or insert another file, or whatever).
;;;
;;; COMMANDS THAT OPERATE ON THE CURRENT REGION:
;;;
;;; C-c C-r l     html-add-normal-link-to-region
;;;   Add a link that will be represented by the current region.  You
;;;   will be prompted for the link (any string, as with
;;;   html-add-normal-link).
;;;
;;; C-c C-r r     html-add-reference-to-region
;;;   Add a reference (a link that does not reference anything) that
;;;   will be represented by the current region.  You will be prompted
;;;   for the name of the link; if you just press RET, a numeric name
;;;   will be created for you.
;;;
;;; SPECIAL COMMANDS:
;;;
;;; <, >, &
;;;   These are overridden to output &lt;, &gt;, and &amp;
;;;   respectively.  The real characters <, >, and & can be entered
;;;   into the text either by prepending 'C-c' to the character or by
;;;   using the Emacs quoted-insert (C-q) command.
;;;
;;; C-c <, C-c >, C-c &
;;;   See '<, >, &' above.
;;;
;;; NOTE: The key bindings above are what I find to be useful and easy
;;; to remember.  If you have ideas on how to make them easier to
;;; handle for yourself or other people, please let me know.
;;; (Ideally, these commands all go in menus; to that end, someday
;;; soon I'll add a Lucid Emacs menu to html-mode.)
;;;
;;; ---------------------------- ADDITIONAL NOTES ----------------------------
;;;
;;; If you are running Epoch or Lucid Emacs, highlighting will be used
;;; to deemphasize HTML message elements as they are created.  You can
;;; turn this off; see the variable 'html-use-highlighting'.
;;;
;;; To reorder all of the link NAME fields in your message (in order
;;; of their occurrence in the text), use:
;;;
;;; html-reorder-numeric-names
;;;   Reorder the NAME fields for links in the current buffer.  The
;;;   new ordering starts at 1 and increases monotonically through the
;;;   buffer.  If optional arg REORDER-NON-NUMERIC is non-nil, then
;;;   non-numeric NAME's will also be numbered, else they won't.
;;;
;;; In most current HTML documents, HREF arguments are not quoted.
;;; They really should be, so HTML can be fully SGML-compliant.  Since
;;; most browsers now understand quoted HREF's, html-mode will
;;; automatically quote all new HREF's, as well as automatically
;;; convert existing HREF's to quotified format.
;;;
;;; html-quote-hrefs                 (variable, default t)
;;;   If this is non-nil, new HREF arguments will be quoted.
;;;
;;; html-quotify-hrefs-on-find       (variable, default t)
;;;   If this is non-nil, all HREF arguments will be quotified
;;;   automatically when a HTML document is loaded into Emacs
;;;   (actually when html-mode is entered).
;;;
;;; html-quotify-hrefs
;;;   This command will quotify all HREF arguments in the current
;;;   document.
;;;
;;; -------------------------------- GOTCHAS ---------------------------------
;;;
;;; HTML documents can be tricky.  html-mode is not smart enough to
;;; enforce correctness or sanity, so you have to do that yourself.
;;;
;;; In particular, html-mode is smart enough to generate unique
;;; numeric NAME id's for all links that were (1) created via an
;;; html-mode command or (2) present in the file when it was loaded.
;;; Any other links (e.g. links added via Emacs cut and paste) may
;;; have ID's that conflict with ID's html-mode generates.  You must
;;; watch for this and fix it when appropriate; otherwise, your
;;; hypertext document will not work correctly.
;;;
;;; html-reorder-numeric-names can be used to reset all of the NAME
;;; id's in a document to an ordered sequence; this will also give
;;; html-mode a chance to look over the document and figure out what
;;; new links should be named to be unique.
;;;
;;; ------------------------- WHAT HTML-MODE IS NOT --------------------------
;;;
;;; html-mode is not a mode for *browsing* HTML documents.  In
;;; particular, html-mode provides no hypertext capabilities.  There
;;; is a clear need for an HTML browser; if you write one, let me
;;; know.
;;;
;;; ------------------------------ WHAT HTML IS ------------------------------
;;;
;;; HTML (HyperText Markup Language) is a format for hypertext
;;; documents.  For more information on HTML, telnet to info.cern.ch.
;;;
;;; ---------------------------- ACKNOWLEDGEMENTS ----------------------------
;;;
;;; Some code herein provided by:
;;;   Dan Connolly <connolly@pixel.convex.com>
;;;
;;; --------------------------------------------------------------------------
;;; LCD Archive Entry:
;;; html-mode|Marc Andreessen|marca@ncsa.uiuc.edu|
;;; Major mode for editing HTML hypertext files.|
;;; $Date: 1992/12/06 07:31:30 $|$Revision: 1.25 $|~/modes/html-mode.el.Z|
;;; --------------------------------------------------------------------------

(provide 'html-mode)

;;; ------------------------------- variables --------------------------------

(defvar html-quote-hrefs t
  "*New HREF fields will be quoted if this is non-nil; else they won't be.")

(defvar html-quotify-hrefs-on-find t
  "*If non-nil, all HREF's in a file will be automatically quotified when
the file is loaded.  This is useful for converting old HTML documents
to the new SGML-compatible syntax, which mandates quoted HREF's.")

(defvar html-use-highlighting t
  "*Flag to use highlighting for HTML directives in Epoch or Lucid Emacs; 
if non-NIL, highlighting will be used.")

(defvar html-deemphasize-color "grey80"
  "*Color for de-highlighting HTML directives in Epoch or Lucid Emacs.")

(defvar html-emphasize-color "yellow"
  "*Color for highlighting HTML something-or-others in Epoch or Lucid Emacs.")

;;; --------------------------------- setup ----------------------------------

(defvar html-mode-syntax-table nil
  "Syntax table used while in html mode.")

(defvar html-mode-abbrev-table nil
  "Abbrev table used while in html mode.")
(define-abbrev-table 'html-mode-abbrev-table ())

(if html-mode-syntax-table
    ()
  (setq html-mode-syntax-table (make-syntax-table))
  (modify-syntax-entry ?\" ".   " html-mode-syntax-table)
  (modify-syntax-entry ?\\ ".   " html-mode-syntax-table)
  (modify-syntax-entry ?' "w   " html-mode-syntax-table))

(defvar html-mode-map nil "")
(if html-mode-map
    ()
  (setq html-mode-map (make-sparse-keymap))
  (define-key html-mode-map "\t" 'tab-to-tab-stop)
  (define-key html-mode-map "\C-ca" 'html-add-address)
  (define-key html-mode-map "\C-cd" 'html-add-definition-list)
  (define-key html-mode-map "\C-ce" 'html-add-definition-entry)
  (define-key html-mode-map "\C-ch" 'html-add-header)
  (define-key html-mode-map "\C-ci" 'html-add-list-or-menu-item)
  (define-key html-mode-map "\C-cl" 'html-add-normal-link)
  (define-key html-mode-map "\C-cm" 'html-add-menu)
  (define-key html-mode-map "\C-cp" 'html-add-paragraph-separator)
  (define-key html-mode-map "\C-cs" 'html-add-list)
  (define-key html-mode-map "\C-ct" 'html-add-title)
  (define-key html-mode-map "\C-cx" 'html-add-plaintext)
  (define-key html-mode-map "<" 'html-less-than)
  (define-key html-mode-map ">" 'html-greater-than)
  (define-key html-mode-map "&" 'html-ampersand)
  (define-key html-mode-map "\C-c<" 'html-real-less-than)
  (define-key html-mode-map "\C-c>" 'html-real-greater-than)
  (define-key html-mode-map "\C-c&" 'html-real-ampersand)
  (define-key html-mode-map "\C-c\C-rl" 'html-add-normal-link-to-region)
  (define-key html-mode-map "\C-c\C-rr" 'html-add-reference-to-region)
)

;;; --------------------------- buffer-local vars ----------------------------

(defvar html-link-counter-default 0)
(defvar html-link-counter nil)
(make-variable-buffer-local 'html-link-counter)
(setq-default html-link-counter html-link-counter-default)

;;; ------------------------------ highlighting ------------------------------

(defvar html-running-lemacs (string-match "Lucid" emacs-version)
  "Non-nil if running Lucid Emacs.")

(defvar html-running-epoch (boundp 'epoch::version)
  "Non-nil if running Epoch.")

(if (and html-running-epoch html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-style))
      (set-style-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-style))
      (set-style-foreground html-emphasize-style html-emphasize-color)))

(if (and html-running-lemacs html-use-highlighting)
    (progn
      (defvar html-deemphasize-style (make-face 'html-deemphasize-face))
      (set-face-foreground html-deemphasize-style html-deemphasize-color)
      (defvar html-emphasize-style (make-face 'html-emphasize-face))
      (set-face-foreground html-emphasize-style html-emphasize-color)))

(if html-use-highlighting
    (progn
      (if html-running-lemacs
          (defun html-add-zone (start end style)
            "Add a Lucid Emacs extent from START to END with STYLE."
            (let ((extent (make-extent start end)))
              (set-extent-face extent style)
              (set-extent-data extent 'html-mode))))
      (if html-running-epoch
          (defun html-add-zone (start end style)
            "Add an Epoch zone from START to END with STYLE."
            (let ((zone (add-zone start end style)))
              (epoch::set-zone-data zone 'html-mode))))))

(defun html-maybe-deemphasize-region (start end)
  "Maybe deemphasize a region of text.  Region is from START to END."
  (and (or html-running-epoch html-running-lemacs)
       html-use-highlighting
       (html-add-zone start end html-deemphasize-style)))

;;; ----------------------------- link commands ------------------------------

(defun html-add-link (link-object)
  "Add a link."
  (let ((start (point)))
    (setq html-link-counter (1+ html-link-counter))
    (if html-quote-hrefs
        (insert "<A NAME=" (format "%d" html-link-counter) 
                " HREF=\"" link-object "\">")
      (insert "<A NAME=" (format "%d" html-link-counter) 
              " HREF=" link-object ">"))
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "</A>")
    (push-mark)
    (forward-char -4)
    (html-maybe-deemphasize-region (1+ (point)) (+ (point) 4))))

(defun html-add-normal-link (link)
  "Make a link.  There is no completion of any kind yet."
  (interactive "sLink to: ")
  (html-add-link link))

(defun html-add-normal-link-to-region (link start end)
  "Make a link that applies to the current region.  Again,
no completion."
  (interactive "sLink to: \nr")
  (save-excursion
    (goto-char end)
    (save-excursion
      (goto-char start)
      (setq html-link-counter (1+ html-link-counter))
      (if html-quote-hrefs
          (insert "<A NAME=" (format "%d" html-link-counter)
                  " HREF=\"" link "\">")
        (insert "<A NAME=" (format "%d" html-link-counter)
                " HREF=" link ">"))
      (html-maybe-deemphasize-region start (1- (point))))
    (insert "</A>")
    (html-maybe-deemphasize-region (- (point) 3) (point))))

(defun html-add-reference-to-region (name start end)
  "Add a reference point (a link with no reference of its own) to
the current region."
  (interactive "sName (or RET for numeric): \nr")
  (and (string= name "")
       (progn
         (setq html-link-counter (1+ html-link-counter))
         (setq name (format "%d" html-link-counter))))
  (save-excursion
    (goto-char end)
    (save-excursion
      (goto-char start)
      (insert "<A NAME=" name ">")
      (html-maybe-deemphasize-region start (1- (point))))
    (insert "</A>")
    (html-maybe-deemphasize-region (- (point) 3) (point))))

;;; --------------------------- document elements ----------------------------

(defun html-add-title (title)
  "Add or modify a title."
  (interactive "sTitle: ")
  (save-excursion
    (goto-char (point-min))
    (if (and (looking-at "<TITLE>")
             (save-excursion
               (forward-char 7)
               (re-search-forward "[^<]*" 
                                  (save-excursion (end-of-line) (point)) 
                                  t)))
        ;; Plop the new title in its place.
        (replace-match title t)
      (insert "<TITLE>")
      (html-maybe-deemphasize-region (point-min) (1- (point)))
      (insert title)
      (insert "</TITLE>")
      (html-maybe-deemphasize-region (- (point) 7) (point))
      (insert "\n"))))

(defun html-add-header (size header)
  "Add a header."
  (interactive "sSize (1 or 2): \nsHeader: ")
  (let ((start (point)))
    (insert "<H" size ">")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert header)
    (setq start (point))
    (insert "</H" size ">\n")
    (html-maybe-deemphasize-region (1+ start) (1- (point)))))

(defun html-add-paragraph-separator ()
  "Add a paragraph separator."
  (interactive)
  (let ((start (point)))
    (insert "  <P>\n\n")
    (html-maybe-deemphasize-region (+ start 2) (- (point) 2))))

(defun html-add-definition-list ()
  "Add a definition list."
  (interactive)
  (let ((start (point)))
    (insert "<DL>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<DT> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n<DD> \n")
      (setq start (point))
      (insert "</DL>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-definition-entry ()
  "Add a definition entry.  Assume we're at the end of a previous
entry."
  (interactive)
  (let ((start (point)))
    (insert "\n<DT> ")
    (save-excursion
      (insert "\n<DD> "))))

(defun html-add-plaintext ()
  "Add plaintext."
  (interactive)
  (let ((start (point)))
    (insert "<XMP>\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</XMP>\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; This doesn't work.
      (push-mark))))

(defun html-add-list-internal (type)
  (let ((start (point)))
    (insert "<" type ">\n")
    (html-maybe-deemphasize-region start (1- (point)))
    (insert "<LI> ")
    ;; Point goes right there.
    (save-excursion
      (insert "\n")
      (setq start (point))
      (insert "</" type ">\n")
      (html-maybe-deemphasize-region start (1- (point)))
      ;; Mark goes after list -- this doesn't work.
      (push-mark))))

(defun html-add-list ()
  "Add a list."
  (interactive)
  (html-add-list-internal "UL"))

;; Is this correct?  Viola doesn't seem to do anything with it.
(defun html-add-menu ()
  "Add a menu."
  (interactive)
  (html-add-list-internal "MENU"))

(defun html-add-list-or-menu-item ()
  "Add a list or menu item.  Assume we're at the end of the
last item."
  (interactive)
  (let ((start (point)))
    (insert "\n<LI> ")))

(defun html-add-address ()
  "Add an address."
  (interactive)
  (let ((start (point)))
    (insert "<ADDRESS> ")
    (html-maybe-deemphasize-region start (1- (point)))
    (save-excursion
      (setq start (point))
      (insert "  </ADDRESS>\n")
      (html-maybe-deemphasize-region (+ start 2) (1- (point)))
      ;; Obviously this doesn't work here, so I don't
      ;; see why you're being an idiot and still doing it
      ;; like this....
      (push-mark))))

(defun html-less-than ()
  (interactive)
  (insert "&lt;"))

(defun html-greater-than ()
  (interactive)
  (insert "&gt;"))

(defun html-ampersand ()
  (interactive)
  (insert "&amp;"))

(defun html-real-less-than ()
  (interactive)
  (insert "<"))

(defun html-real-greater-than ()
  (interactive)
  (insert ">"))

(defun html-real-ampersand ()
  (interactive)
  (insert "&"))

;;; ----------------------- html-reorder-numeric-names -----------------------

(defun replace-string-in-buffer (start end newstring)
  (save-excursion
    (goto-char start)
    (delete-char (1+ (- end start)))
    (insert newstring)))

(defun html-reorder-numeric-names (&optional reorder-non-numeric)
  "Reorder the NAME fields for links in the current buffer.  The
new ordering starts at 1 and increases monotonically through the buffer.
If optional arg REORDER-NON-NUMERIC is non-nil, then non-numeric NAME's
will also be numbered, else they won't.

Beware that doing this will possibly mess up references to specific
links within this document (e.g., HREF=\"#12\") or by other documents.
This command is mainly intended for use during the initial creation
stage of a document, especially when this creation involves cutting
and pasting from other documents (which it shouldn't, since this is
hypertext :-)."
  (interactive)
  (save-excursion
    (goto-char (point-min))
    (setq html-link-counter 0)
    (while (re-search-forward "<A[ \t\n]+NAME=" (point-max) t)
      (let* ((start (match-end 0))
             (end (save-excursion
                    (re-search-forward "[ \t\n>]" 
                                       (point-max) 
                                       t)
                    (match-beginning 0)))
             (subst (buffer-substring start end)))
        (and subst
             ;; Proceed only if we reorder non-numeric links or
             ;; this is in fact numeric (i.e. > 0).
             (or reorder-non-numeric (> (string-to-int subst) 0))
             (progn
               (setq html-link-counter (1+ html-link-counter))
               (replace-string-in-buffer start (1- end)
                (format "%d" html-link-counter))))))))

;;; --------------------------- html-quotify-hrefs ---------------------------

(defun html-quotify-hrefs ()
  "Insert quotes around all HREF attribute value literals.

This remedies the problem with old HTML files that can't be processed
by SGML parsers. That is, changes <A HREF=foo> to <A HREF=\"foo\">."
  (interactive)
  (save-excursion
    (goto-char (point-min))
    (while 
        (re-search-forward
         "<[aA][ \t\n]+\\([nN][aA][mM][eE]=[a-zA-Z0-9]+[ \t\n]+\\)?[hH][rR][eE][fF]="
         (point-max)
         t)
      (cond
       ((null (looking-at "\""))
        (insert "\"")
        (re-search-forward "[ \t\n>]" (point-max) t)
        (forward-char -1)
        (insert "\""))))))

;;; ------------------------------- html-mode --------------------------------

(defun html-mode ()
  "Major mode for editing HTML hypertext documents.  Special commands:\\{html-mode-map}
Turning on html-mode calls the value of the variable html-mode-hook,
if that value is non-nil.

More extensive documentation is available in the file 'html-mode.el'.
The latest (possibly unstable) version of this file will always be available
on anonymous FTP server ftp.ncsa.uiuc.edu in /outgoing/marca."
  (interactive)
  (kill-all-local-variables)
  (use-local-map html-mode-map)
  (setq mode-name "HTML")
  (setq major-mode 'html-mode)
  (setq local-abbrev-table html-mode-abbrev-table)
  (set-syntax-table html-mode-syntax-table)
  (run-hooks 'html-mode-hook))

;;; ------------------------------- our hooks --------------------------------

(defun html-html-mode-hook ()
  "Hook called from html-mode-hooks.  Set html-link-counter to 
the highest link value in the document (the next link created will
be one greater than that) to insure unique (numeric) link ID's.
Also run htlm-quotify-hrefs if html-quotify-hrefs-on-find is non-nil."
  (save-excursion
    (goto-char (point-min))
    (while (re-search-forward "<A[ \t\n]+NAME=" (point-max) t)
      (let* ((start (match-end 0))
             (end (save-excursion
                    (re-search-forward "[ \t\n>]"
                                       (point-max)
                                       t)
                    (match-beginning 0)))
             (subst (buffer-substring start end)))
        (and subst
             ;; Safe to do compare, since string-to-int passed a non-number
             ;; returns 0.
             (> (string-to-int subst) html-link-counter)
             (setq html-link-counter (string-to-int subst))))))
  ;; Quotify existing HREF's if html-quotify-hrefs-on-find is non-nil.
  (and html-quotify-hrefs-on-find (html-quotify-hrefs)))

;;; ------------------------------- hook setup -------------------------------

;; Author: Daniel LaLiberte (liberte@cs.uiuc.edu).
(defun html-postpend-unique-hook (hook-var hook-function)
  "Postpend HOOK-VAR with HOOK-FUNCTION, if it is not already an element.
hook-var's value may be a single function or a list of functions."
  (if (boundp hook-var)
      (let ((value (symbol-value hook-var)))
        (if (and (listp value) (not (eq (car value) 'lambda)))
            (and (not (memq hook-function value))
                 (set hook-var (append value (list hook-function))))
          (and (not (eq hook-function value))
               (set hook-var (append value (list hook-function))))))
    (set hook-var (list hook-function))))

(html-postpend-unique-hook 'html-mode-hook 'html-html-mode-hook)

;;; ------------------------------ final setup -------------------------------

(or (assoc "\\.html$" auto-mode-alist)
    (setq auto-mode-alist (cons '("\\.html$" . html-mode) auto-mode-alist)))


From guido@cwi.nl  Mon Dec  7 00:54:41 1992
Return-Path: <guido@cwi.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08914; Mon, 7 Dec 92 00:54:41 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA24122; Mon, 7 Dec 1992 01:07:59 +0100
Received: from voorn.cwi.nl by charon.cwi.nl with SMTP
	id AA06397 (5.65b/3.2/CWI-Amsterdam); Mon, 7 Dec 1992 01:07:56 +0100
Received: by voorn.cwi.nl with SMTP
	id AA16719 (5.65b/3.2/CWI-Amsterdam); Mon, 7 Dec 1992 01:07:53 +0100
Message-Id: <9212070007.AA16719.guido@voorn.cwi.nl>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of "Fri, 04 Dec 1992 13:11:32 MET."
             <9212041911.AA23347@pixel.convex.com> 
From: Guido.van.Rossum@cwi.nl
X-Organization: CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands
X-Phone: +31 20 5924127 (work), +31 20 6225521 (home), +31 20 5924199 (fax)
Date: Mon, 07 Dec 1992 01:07:52 +0100
Sender: Guido.van.Rossum@cwi.nl

I just subscribed to www-talk, and haven't been able to read all the
previous exchanges, so please forgive me if this is inappropriate...

>3. I got rid of the TYPE attribute on anchor tags.
>What's that thing for anyway. Does anybody use it?

Yes, I have the following (experimental) use for it.

I have written a program that translates texinfo (the GNU Emacs
documentation format, which can be typeset using a special set of TeX
macros as well as converted to a form of hypertext called Emacs INFO
files) to HTML.  Texinfo files contain the usual cross references
between nodes as well as some more structured links that shape the set
of nodes into a tree.  Typical trees ("documents" in your proposed new
terminology -- I like it!) can contain hundreds of nodes.  My
translator adds types to structured links that indicate whether it is
a link to a child, a left or right sibling, a parent, or the root of
the tree.  This type is then used by a special WWW browser that I
wrote to support tree browsing operations (which are actually
compatible with the operations of the Emacs INFO browser).  I think
this is useful, and better than second-guessing the tree structure
from where the links lead to.

BTW, the results of my conversions (applied to several standard Emacs
manuals as well as to documentation for Python, the language I'm using
to write all my software in) can be viewed in the web rooted at

	http://voorn.cwi.nl:2784/default.html

I have added all sorts of other tags and attributes that don't exist
officially but which my own browser supports (e.g. font changes).
Later I'll try to catch up with the current proposals for HTML and
use that instead.  I might also suggest other changes from which my
texinfo conversion might benefit.

Cheers,

--Guido van Rossum, CWI, Amsterdam <guido@cwi.nl>
"Are all your pets called Eric?"

From connolly@pixel.convex.com  Mon Dec  7 04:41:51 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09727; Mon, 7 Dec 92 04:41:51 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA25599; Mon, 7 Dec 1992 04:55:10 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA28015; Sun, 6 Dec 92 21:55:06 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA05717; Sun, 6 Dec 92 21:55:04 -0600
Message-Id: <9212070355.AA05717@pixel.convex.com>
To: Guido.van.Rossum@cwi.nl
Cc: www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of "Mon, 07 Dec 92 01:07:52 +0100."
             <9212070007.AA16719.guido@voorn.cwi.nl> 
Date: Sun, 06 Dec 92 21:55:04 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I just subscribed to www-talk, and haven't been able to read all the
>previous exchanges, so please forgive me if this is inappropriate...

On the contrary... this is great stuff!!!

>>3. I got rid of the TYPE attribute on anchor tags.
>>What's that thing for anyway. Does anybody use it?
>
>Yes, I have the following (experimental) use for it.
>
>I have written a program that translates texinfo (the GNU Emacs
>documentation format, which can be typeset using a special set of TeX
>macros as well as converted to a form of hypertext called Emacs INFO
>files) to HTML.

Yea! TeXinfo is a Good Thing, and I think it's highly appropriate
that W3 support it as an authoring environment. The beauty of TeXinfo
is that it's _not_ a programming language like TeX or troff. That
makes it possible to develop correct translators. (Otherwise you
run into the halting problem... it's everywhere!)

I studied the TeXinfo documentation for a couple hours before I
released the last version of the HTML spec. The major feature
of TeXinfo lacking in HTML is character-level formatting (font
changes.)

There were a few TeXinfo commands (@ctrl for one) that don't
fit the HTML mold. So I looked at the LaTeX options: em, tt, bd, sl, sf
and the DocBook options, and nroff, and decided I didn't have
time to choose the right set.

[I'm also keeping MS Word (RTF) and FrameMaker (MIF) in mind.]

>... My
>translator adds types to structured links that indicate whether it is
>a link to a child, a left or right sibling, a parent, or the root of
>the tree.  This type is then used by a special WWW browser that I
>wrote to support tree browsing operations (which are actually
>compatible with the operations of the Emacs INFO browser).  I think
>this is useful, and better than second-guessing the tree structure
>from where the links lead to.

Very true. I think the A tag is _highly_ overloaded. One click on
an anchor might take you anywhere from the next sentence to
somewhere in New Zealand. I suggested the XREF and SEE elements
to distinguish between intradocument and interdocument references.

I agree that a "relationship" attribute to the XREF element would
be useful.

But I'm not sure it should go in the HTML spec. I think the spec
currently does a pretty good job of describing the current usage
of HTML. Your use of TYPE is local to your site. It could just
go in the category of "tolerated error."

Meanwhile, I think it's time to redesign HTML. I've been reading
up on HyTime, and I think it's a Good Thing after all. I think
we should make the Universal Resource Locator a HyTime architectural
form. In general, we should use HyTime as a way to guide the
architecture of W3, so that it may grow to interoperate with
for example, the Draft Advisory Standard on Hypertext (DASH)
from the Davenport group.


>BTW, the results of my conversions (applied to several standard Emacs
>manuals as well as to documentation for Python, the language I'm using
>to write all my software in)

Python -- I read a bunch of stuff about that a while ago. I wonder
if the Midas language used by the Midaswww browser could be subsumed
by Python. Aside from the pascalish syntax, I think Python is just
what we need: an object oriented language for distributed applications.
I've been hoping GNU smalltalk would mature, but maybe I should
look at Python again. Tony: have you heard of it?

Hmm... as I study the documentation, I see it's got all sorts
of good stuff: exceptions, packages, regexp processing...
Maybe I should abandon XLisp (that's what I've been writing
translators in) for Python.

>I have added all sorts of other tags and attributes that don't exist
>officially but which my own browser supports (e.g. font changes).
>Later I'll try to catch up with the current proposals for HTML and
>use that instead.  I might also suggest other changes from which my
>texinfo conversion might benefit.

I highly suggest you grab the sgmls parser and diddle with the DTD
until you find something that matches the output of your conversion.
You'll have to struggle a little while you learn about SGML, but
that's the whole point. I think you'll catch on fast.

Dan

From marca@wintermute.ncsa.uiuc.edu  Mon Dec  7 05:26:51 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09884; Mon, 7 Dec 92 05:26:51 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA14847; Mon, 7 Dec 1992 05:40:10 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA09009
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Sun, 6 Dec 92 22:40:00 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:Guido.van.Rossum@cwi.nl id AA05810; Sun, 6 Dec 92 22:41:10 -0800
Date: Sun, 6 Dec 92 22:41:10 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212070641.AA05810@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: Guido.van.Rossum@cwi.nl, www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: <9212070355.AA05717@pixel.convex.com>
References: <9212070007.AA16719.guido@voorn.cwi.nl>
	<9212070355.AA05717@pixel.convex.com>

Dan Connolly writes:
> Very true. I think the A tag is _highly_ overloaded. One click on an
> anchor might take you anywhere from the next sentence to somewhere
> in New Zealand. 

This is part of the beauty of HTML and the Web, and should not be
abandoned lightly -- complete user-oriented transparency lifts the
concept of information up from its physical grounding
(network/machine/directory/file) and removes the need to think of it
as anything *but* information.  Who cares where it comes from, so long
as it's there?

Granted, better navigation mechanisms are needed to keep track of
position and orientation in this kind of environment, but that's
always been the case in hypertext -- not a new problem, but one
becoming even more ripe for active research.  Why not just consider
location transparency to be a challenge?

> Meanwhile, I think it's time to redesign HTML. 

I emphatically disagree.  With all due respect (and a lot is due) to
your efforts with formalizing HTML, it's high time to shoot the
engineers and stabilize the product.  Widespread success of the
current implementation will be the single best reason for further
redesign, which can take place well down the road in the form of HTML
version 2, after lots of real-life experiences with the current system
can be catalogued and analyzed -- something currently lacking.  In the
meantime, HTML and the Web need to work on becoming entrenched and
widely and generally used, or God help us, we're all gonna be using
Gopher five years from now.

> Python -- I read a bunch of stuff about that a while ago. I wonder
> if the Midas language used by the Midaswww browser could be subsumed
> by Python. Aside from the pascalish syntax, I think Python is just
> what we need: an object oriented language for distributed applications.
> I've been hoping GNU smalltalk would mature, but maybe I should
> look at Python again. Tony: have you heard of it?

These object-oriented toolkits and interpreters and interface builders
and so on are all wonderful, but keep in mind that (1) sustained use
of interpreters impacts performance; (2) sustained use of any of them
impacts long-term viability of systems based on them, particularly
when it comes time to start embedding HTML browsing in other tools;
and (3) look at the proliferation of different systems already in use
and removing all hope of abstracting more than a very small amount of
common code (Viola, tk/tcl, Midas, VUIT, NeXT interface builder,
etc.).  Doesn't it make more sense to just use portable C (or,
possibly, C++) and allow others to benefit from and build upon your
labors without forcing yet another toolkit/language/interpreter on
them, and more often than not forcing them to reinvent the wheel?

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From connolly@pixel.convex.com  Mon Dec  7 07:04:29 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10054; Mon, 7 Dec 92 07:04:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA24383; Mon, 7 Dec 1992 07:17:47 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA04353; Mon, 7 Dec 92 00:17:40 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA12781; Mon, 7 Dec 92 00:17:37 -0600
Message-Id: <9212070617.AA12781@pixel.convex.com>
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Cc: Guido.van.Rossum@cwi.nl, www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: Your message of "Sun, 06 Dec 92 22:41:10 PST."
             <9212070641.AA05810@wintermute.ncsa.uiuc.edu> 
Date: Mon, 07 Dec 92 00:17:37 CST
From: Dan Connolly <connolly@pixel.convex.com>


Look out folks -- we're getting into religious issues here.
I think Marc's made a lot of good points, but be warned:
I've spent a lot of time thinking about this stuff, and
I might state my opinions a little forcefully. :-)

>Dan Connolly writes:
>> Very true. I think the A tag is _highly_ overloaded. One click on an
>> anchor might take you anywhere from the next sentence to somewhere
>> in New Zealand. 
>
>This is part of the beauty of HTML and the Web, and should not be
>abandoned lightly -- complete user-oriented transparency lifts the
>concept of information up from its physical grounding
>(network/machine/directory/file) and removes the need to think of it
>as anything *but* information.  Who cares where it comes from, so long
>as it's there?

Good point. I didn't mean that we should make the physical distance
to the link destination known to the user. But I think users would
benefit from knowledge about the logical distance -- i.e. is
it part of the same node, part of the same document, or in some
other work completely? Is it more specific or more general
than this node?

[By the way Guido: if the information is used by the server to locate
the information, rather than by the client to label the reference,
you should put it in the HREF somewhere.]

>> Meanwhile, I think it's time to redesign HTML. 
>
>I emphatically disagree.  With all due respect (and a lot is due) to
>your efforts with formalizing HTML, it's high time to shoot the
>engineers and stabilize the product.

My communication skills are really failing me lately. This is exactly
what I meant to say: I'm happy with the HTML DTD: it describes
the way HTML is used, fairly completely and exactly. But HTML
leaves a lot to be desired that cannot be fixed in an upwards
compatible way.

>  Widespread success of the
>current implementation will be the single best reason for further
>redesign, which can take place well down the road in the form of HTML
>version 2, after lots of real-life experiences with the current system
>can be catalogued and analyzed -- something currently lacking.  In the
>meantime, HTML and the Web need to work on becoming entrenched and
>widely and generally used, or God help us, we're all gonna be using
>Gopher five years from now.

I see nothing wrong with gopher. It's just NFS without the kernel
hacks, and with fulltext searching wedged in. Gopher+ is a
mess. No two ways about it.

But HTTP is nearly identical to Gopher. In some ways, gopher is
cleaner than W3: the gopher "path" is opaque. Clients never
parse it (except some wierd clients that use the file extension).
An HTTP client parses the path, so there's a syntax imposed
on it -- have you looked at the massive hacks in the W3
browser to support VMS paths?

I think we need to seriously rethink relative addresses.

And a Gopher reference (the information the client has _before_
it traverses a link) includes the type of the information.
A W3 reference does not, and so the client must assume HTML.
(unless it's an FTP address, in which case it sneaks a peek
at the file extension. Yuk! Or unless it's a Gopher address,
where the data format interpretation is hacked into the
routine that opens the connection. Yuk!)

This is the problem: suppose I put a pointer to
<A HREF="wais://wais.host/stuff.gif">a GIF image </A>
in an HTML document and serve it up. Clients have
no way of knowing any better than to grab the data
an barf it on the screen.

And adding <A Content-Type="image/gif" HREF="wais:...>
won't help: the content-type will be ignored by most
browsers.

Hmm... perhaps there's a way out after all.
I could, on the other hand, put

<See HREF="wais://wais.host/stuff.gif" Content-Type="image/gif">
a new kind of link</See>

in the document, and only browsers that know about SEE
elements would even attempt to get the data. And they'd
know better than to treat it as text.

So perhaps it's not the HTML data format that's doomed,
but the <A> element. I guess the lesson is: you can't
teach an old element new tricks.


About python...

>These object-oriented toolkits and interpreters and interface builders
>and so on are all wonderful, but keep in mind that

> (1) sustained use
>of interpreters impacts performance; 

Counterpoint: when the design is complete, performance-critical code
can always be written in C and added as a module. In the mean time, the
benefits of rapid-prototyping outweigh the performance penalties.

>(2) sustained use of any of them
>impacts long-term viability of systems based on them, particularly
>when it comes time to start embedding HTML browsing in other tools;
>and 

I'm not sure I understand what you mean here.
I don't mean to base the W3 architecture on Python -- only some
implementations.

>(3) look at the proliferation of different systems already in use
>and removing all hope of abstracting more than a very small amount of
>common code (Viola, tk/tcl, Midas, VUIT, NeXT interface builder,
>etc.).

Viola and tk/tcl: These try to do what's already been done in
the Xaw and Motif toolkits, and they don't do it as well. (I suppose
this is your point...)

Midas: This is a specially designed language highly suited to
it's purpose. Only the highest level of code in the Midaswww
browser is written in Midas. All the rest is reusable. Tony
did a heck of a job.

VUIT: how did this get in there?

NeXT: I'd drop X/Xt/Xaw for NextStep in a second if it
was an option. NextStep isn't free, so it hasn't proliferated
like X. That's pretty much the end of the story. If I could
limit my user base to NeXT boxes, I'd like to!

>  Doesn't it make more sense to just use portable C (or,
>possibly, C++) and allow others to benefit from and build upon your
>labors without forcing yet another toolkit/language/interpreter on
>them, and more often than not forcing them to reinvent the wheel?

The key is reusable software. You've hit that on the head.
I think python can be a good platform, but I'm having
trouble supporting my point. Maybe I need to think some more...

Certainly I expect core algorithms to be coded in portable
C. That was the purpose of libHTML. But I hate dealing
with dynamic memory allocation. When you're building big
applications in C, you spend all your time getting this
right.

I think the right combination of C and an object-oriented
high level language is the way to go. Folks _love_ Tk
and tcl. But it lacks an object system, recursive list
data structures, symbols, and other essentials.

I like languages that are tailored to special applications.
In my mind, the less code you have to use to solve a problem,
the better.

Dan


From marca@wintermute.ncsa.uiuc.edu  Mon Dec  7 08:22:49 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10206; Mon, 7 Dec 92 08:22:49 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA01237; Mon, 7 Dec 1992 08:36:08 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA18698
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Mon, 7 Dec 92 01:36:03 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:Guido.van.Rossum@cwi.nl id AA06202; Mon, 7 Dec 92 01:37:12 -0800
Date: Mon, 7 Dec 92 01:37:12 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212070937.AA06202@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: Guido.van.Rossum@cwi.nl, marca@ncsa.uiuc.edu (Marc Andreessen),
        www-talk@nxoc01.cern.ch
Subject: Re: The spec evolves... 
In-Reply-To: <9212070617.AA12781@pixel.convex.com>
References: <9212070617.AA12781@pixel.convex.com>
	<9212070641.AA05810@wintermute.ncsa.uiuc.edu>

Dan Connolly writes:
> Good point. I didn't mean that we should make the physical distance
> to the link destination known to the user. But I think users would
> benefit from knowledge about the logical distance -- i.e. is
> it part of the same node, part of the same document, or in some
> other work completely? Is it more specific or more general
> than this node?

Maybe a compromise: if linking to a point in the same document, color
the anchor orange; if linking to a point on the same server, color it
red; if linking to somewhere else entirely, color it violet.  Or a
variation on that theme.  This wouldn't require changing HTML and
wouldn't be too obtrusive to those of us who like transparency.

> [Discussion on what to do with links to GIF files.]  So perhaps it's
> not the HTML data format that's doomed, but the <A> element. I guess
> the lesson is: you can't teach an old element new tricks.

I think looking at the file extension will solve 95% of the cases
(that's what extensions are for, after all).  The remaining 5% could
be addressed by Content-Type.  The browsers should be brought up to
speed.  That's one approach -- just getting multimedia out the door
and merged into the current HTML spec calls for the simplest solution
possible, at the moment.

> Counterpoint: when the design is complete, performance-critical code
> can always be written in C and added as a module. In the mean time,
> the benefits of rapid-prototyping outweigh the performance
> penalties.

Yeah but, yeah but, once something is written with rapid prototyping
in mind and turns out to work, odds are it's going to be *the*
implementation, as its implementor goes on to bigger and better
things.

> I don't mean to base the W3 architecture on Python -- only some
> implementations.

Right.  Those implementations then will be (no offense to the Python
folks intended, but here it comes...) chained to Python, which will
put an instant damper on their general usefulness -- they're never
gonna be merged into anything else and thus made more useful, unless
that something else uses Python also, which (as is the case with all
the rest of these systems) is just plain doubtful.

> Viola and tk/tcl: These try to do what's already been done in
> the Xaw and Motif toolkits, and they don't do it as well. (I suppose
> this is your point...)

Yup.

> Midas: This is a specially designed language highly suited to it's
> purpose. Only the highest level of code in the Midaswww browser is
> written in Midas. All the rest is reusable. Tony did a heck of a
> job.

I agree with the latter point, but not the former.  There's very
little reusable code in Midaswww.  I spent quite a bit of time trying
to rip the SGML widget out and use it separately, and it's just not
possible with the current Midaswww architecture.

> VUIT: how did this get in there?

It (or something similar) is being used to generate UIL code for
Midaswww, which counts as another toolkit in my book, since I can't
effectively edit it by hand -- despite the fact I know Motif a lot
better than I'd like to, very little of my existing knowledge carries
over.

> NeXT: I'd drop X/Xt/Xaw for NextStep in a second if it was an
> option. NextStep isn't free, so it hasn't proliferated like X.
> That's pretty much the end of the story.

Agreed on all counts.  Again, my point.

I'm not arguing *against* special toolkits and builders in the
abstract -- I think they're great, for the lone programmer.  But it's
just plain a fact that there's nothing standardized about them;
they're not available on most systems; they're not going to make code
reusability practically possible, and their use causes too much
reinventing of the wheel.

Cheers,
Marc


From marca@wintermute.ncsa.uiuc.edu  Mon Dec  7 08:32:11 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10227; Mon, 7 Dec 92 08:32:11 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA01685; Mon, 7 Dec 1992 08:45:31 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA19081
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Mon, 7 Dec 92 01:45:29 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA06230; Mon, 7 Dec 92 01:46:44 -0800
Date: Mon, 7 Dec 92 01:46:44 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212070946.AA06230@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: C++?

What if I went away and came back in four or six months with a
completely object-oriented C++ implementation of the base WWW code?
I.e., classes for Document, Anchor, et al, with enough hooks to
support a hell of a lot of browsers.  Would it be used?  (It is
possible that this could happen next year, so let me know what you
think.)

Marc

--
Marc Andreessen
Software Development Group
National Center for Supercomputing Applications
marca@ncsa.uiuc.edu


From evas@cs.few.eur.nl  Mon Dec  7 09:26:56 1992
Return-Path: <evas@cs.few.eur.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10366; Mon, 7 Dec 92 09:26:56 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA03141; Mon, 7 Dec 1992 09:40:08 +0100
Received: from evas@slc01.cs.few.eur.nl by cs.few.eur.nl (5.67/EUR)
	id AA03095; Mon, 7 Dec 92 09:40:01 +0100
From: Eelco van Asperen <evas@cs.few.eur.nl>
Received: by slc01.cs.few.eur.nl (5.67/EUR/BSD)
	id AA02199; Mon, 7 Dec 92 09:39:54 +0100
Date: Mon, 7 Dec 92 09:39:54 +0100
Message-Id: <9212070839.AA02199@slc01.cs.few.eur.nl>
To: marca@ncsa.uiuc.edu
Subject: Re: C++?
Cc: www-talk@nxoc01.cern.ch

> What if I went away and came back in four or six months with a
> completely object-oriented C++ implementation of the base WWW code?
> I.e., classes for Document, Anchor, et al, with enough hooks to
> support a hell of a lot of browsers.  Would it be used?  (It is
> possible that this could happen next year, so let me know what you
> think.)

I would love it; I've been working on a PC browser using Borland C++
and Turbo Vision (a user interface toolkit) and a C++ library would
make life a lot easier.

Eelco van Asperen.           | Erasmus University Rotterdam
-----------------------------| Department of Computer Science, room H4-32
internet: evas@cs.few.eur.nl | PObox 1738, 3000 DR Rotterdam, The Netherlands

From connolly@pixel.convex.com  Mon Dec  7 10:39:13 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10688; Mon, 7 Dec 92 10:39:13 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10618; Mon, 7 Dec 1992 10:52:31 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA12644; Mon, 7 Dec 92 03:07:04 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA00523; Mon, 7 Dec 92 03:07:01 -0600
Message-Id: <9212070907.AA00523@pixel.convex.com>
To: Eelco van Asperen <evas@cs.few.eur.nl>
Cc: marca@ncsa.uiuc.edu, www-talk@nxoc01.cern.ch
Subject: Re: C++? 
In-Reply-To: Your message of "Mon, 07 Dec 92 09:39:54 +0100."
             <9212070839.AA02199@slc01.cs.few.eur.nl> 
Date: Mon, 07 Dec 92 03:07:01 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I would love it; I've been working on a PC browser using Borland C++
>and Turbo Vision (a user interface toolkit) and a C++ library would
>make life a lot easier.

I second the motion. I like C++. With gcc2, it's fairly ubiquitous.
I think it makes for more productive programming.

Now... we'll have to do some thinking about class design.

I looked over the HText, HT_Anchor, etc. stuff a while ago.
The design is sound, I think. It would convert quite nicely
to C++.

My biggest problem with the HText class is that it throws
away a lot of the information in the SGML markup.

I wonder if a function that would just parse the whole
document and return some nifty structure would be useful.
No W3 processing in this routine: just SGML stuff. We
might look into using the sgmls materials as a library.
Or we might write our own. I'm getting the hang of
writing SGML parsing stuff. Once you get past the yucky
lexical details, it's not bad.

Then you could traverse the structure, find the anchors,
and, build a formatted text, etc. out of it.

Dan


From timbl@www3.cern.ch  Mon Dec  7 12:57:18 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11186; Mon, 7 Dec 92 12:57:18 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA19984; Mon, 7 Dec 1992 13:10:38 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01755; Mon, 7 Dec 92 13:05:17 +0100
Date: Mon, 7 Dec 92 13:05:17 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212071205.AA01755@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: HTTP protocol upgrade
Reply-To: timbl@nxoc01.cern.ch



I propose that the actual form of the upgraged HTTP protocol is as follows.  
details are in http://info.cern.c/hypertext/WWW/Protocols/HTTP/HTTP2.html.
This follows on from the work which Carl Barker did over the summer, but makes  
it easier to merge with mail-based applications, and includes  
MIME-compatibility

The client currently sends a request

	GET  <url>

and that must be recognized by new servers. We extend this in two ways, firstly
to make GEt a specific example of a method to be applied to the object denoted
by the url, and secondly to add on the same line a third field (ignored by  
existing servers) whcih gives the protocol number being used.

New servers will check out the verstion number and read more data which  
follows, allowing such extensions as

	GET /junk/mydoc  HTRQ/1.0
	From: Tim Berners-Lee <timbl@info.cern.ch>
	Accept: text/plain, text/html, image/GIF(0.0,.5)
	Accept-Encoding: X-Compress, base64, X-tar, X-Nextmail
	
with reponse

	HTTP-Version: 1.0
	Response: OK
	MIME-Content-type: image/GIF
	Allow: GET, PUT, TEXTSEARCH
	Public: GET, TEXTSEARCH

etc etc.  The spec hasn't been completely extended to contain all the  
authorization features yet, but comments on the general direction are welcoime  
at this stage.

	Tim

From connolly@pixel.convex.com  Tue Dec  8 05:09:12 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16185; Tue, 8 Dec 92 05:09:12 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA13888; Tue, 8 Dec 1992 05:22:33 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA14167; Mon, 7 Dec 92 22:22:28 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA28362; Mon, 7 Dec 92 22:22:26 -0600
Message-Id: <9212080422.AA28362@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTTP2: base it on NNTP?
Date: Mon, 07 Dec 92 22:22:26 CST
From: Dan Connolly <connolly@pixel.convex.com>


The functionality of the HTTP2 has a lot in common
with NNTP:

Commands:

HTTP		NNTP

GET u		BODY
GET u v		ARTICLE
HEAD		HEAD
PUT		POST or IHAVE

These are novel to HTTP:

CHECKOUT
CHECKIN
TEXTSEARCH u v

Status messages:

HTTP		NNTP

OK		2xx - command ok
ERROR		4xx - command correct, but could not be completed
		5xx - command unimplemented or incorrect
REDIRECTION
FORWARD

	etc.

The main technical difference between the protocols is that
NNTP involves a few more round-trips here and there: the server
starts the dialogue with a "200 - server ready" message.

The HTTP client just assumes it's ready if it accepted the connection.
This save half a round-trip, but it's doesn't allow servers to
say things like "502 - This server only available from 6pm to 8am".

Also, the NNTP IHAVE and POST commands involve more round-trips:

   S:      (listens at TCP port 119)
   C:      (requests connection on TCP port 119)
   S:      201 Foobar NNTP server ready (no posting)
   C:      IHAVE <4106@ucbvax.ARPA>
   S:      335 News to me!  <CRLF.CRLF> to end.
   C:      (sends article)
   C:      .
   S:      235 Article transferred successfully.  Thanks.

But lots of stuff like error handling, status codes, and the
like have been laid out.

I think it would be very useful to include the NNTP NEWNEWS
command in W3. (client sends NEWNEWS <date> and server responds
with a list of articles newer than <date>)

The NNTP commands HEAD, BODY, ARTICLE, etc. take a number or
a message-id as an argument. We could extend the syntax to
include URL's as quoted strings.

Then we'd add a few commands for format negotiation, locking,
and so on. I think it's a nice clean framework to work in.


Dan


From connolly@pixel.convex.com  Tue Dec  8 05:37:05 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16289; Tue, 8 Dec 92 05:37:05 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA18701; Tue, 8 Dec 1992 05:50:26 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA15166; Mon, 7 Dec 92 22:50:24 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA28633; Mon, 7 Dec 92 22:50:22 -0600
Message-Id: <9212080450.AA28633@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: comments on the HTTP2 spec
Date: Mon, 07 Dec 92 22:50:22 CST
From: Dan Connolly <connolly@pixel.convex.com>


Problem: user A does CHECKOUT doc1
	user B does CHECKIN doc1
Result: everybody loses.
Solution: server gives A a "magic cookie" generated at the time
	of the checkout. B doesn't have the cookie, so he
	can't do a checkin.

Problem: "The response may be straight HTML ... or may
		start with
	HTTP-Version: ..."
	That looks like perfectly legal HTML to me. How
	do you tell the difference?
Solution: GET command is only for old servers. It always
	returns HTML. For new servers, use DOCUMENT command
	(or go to NNTP and use ARTICLE).
	(or just don't put "the response may by HTML" in the spec.
	 put it in the section on tolerated errors)

Problem: how does a server know where the end of PUT data is?
	(it can't just wait 'till the connection closes, cuz
	it has to send back a status response)
Solution: restrict PUT to 7bit or 8bit encodings, or
	introduce a Bytes: header for straight binary.

Issue: Syntax of Accept: line clashes with existing parameter syntax.
	The MIME content-type header looks like:

	Content-Type: text/plain; charset=us-ascii

	We can get rid of the parameters (though in some cases
	they're required... hmmm...), but let's use the same
	syntax to stick other stuff in there so in stead of

	Accept: text/plain, 1, 0, 0

	use

	Accept: text/plain; penalty=0; size=0.23; degradation=0.5

Clearly the ideas have been thought out a lot more than the syntactic
details. 

On the other hand, the syntactic details of NNTP are a done deal.
I think we could save some time debugging the implementation by
going with NNTP. They've dealt with stuff like a string to identify
a version of a piece of software, and all sorts of other stuff
that's "TBD" in the HTTP2 spec.

We could cut to the chase and get right to the novel features of
HTTP2, with some confidence that the syntactic details are handled.

By the way... I think this NNTP++ protocol should be used in stead
of Gopher+ too.

Dan


From connolly@pixel.convex.com  Tue Dec  8 05:48:29 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16361; Tue, 8 Dec 92 05:48:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA19971; Tue, 8 Dec 1992 06:01:50 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA15540; Mon, 7 Dec 92 23:01:47 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA29598; Mon, 7 Dec 92 23:01:46 -0600
Message-Id: <9212080501.AA29598@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML: hypertext or hypermedia?
Date: Mon, 07 Dec 92 23:01:46 CST
From: Dan Connolly <connolly@pixel.convex.com>

Some folks have expressed an interest in putting graphics
and such _inside_ an HTML document.

Other folks just want references from the SGML to
external data. (even if it's presented as if it
were part of the flow of text).

I'm leaning toward the latter scenario. Inside
the HTML stream, you get SGML character stuff. No
graphics -- not even base64 encoded stuff.

The graphics stuff goes in another node. (or you
_could_ use the MIME multipart mechanism to glue
them together, but I don't see that as a very popular
choice. Even if you did that, it would not impact
the HTML spec.)

Dan

From fine@cis.ohio-state.edu  Tue Dec  8 05:58:53 1992
Return-Path: <fine@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16415; Tue, 8 Dec 92 05:58:53 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA22028; Tue, 8 Dec 1992 06:12:14 +0100
Received: by soccer.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA07095; Tue, 8 Dec 92 00:12:10 -0500
Date: Tue, 8 Dec 92 00:12:10 -0500
From: Thomas A. Fine <fine@cis.ohio-state.edu>
Message-Id: <9212080512.AA07095@soccer.cis.ohio-state.edu>
To: connolly@pixel.convex.com, www-talk@nxoc01.cern.ch
Subject: Re: HTML: hypertext or hypermedia?
X-Mailer: Perl Mail System v1.1

>Some folks have expressed an interest in putting graphics
>and such _inside_ an HTML document.
>
>Other folks just want references from the SGML to
>external data. (even if it's presented as if it
>were part of the flow of text).
>
>I'm leaning toward the latter scenario. Inside
>the HTML stream, you get SGML character stuff. No
>graphics -- not even base64 encoded stuff.
>
>The graphics stuff goes in another node. (or you
>_could_ use the MIME multipart mechanism to glue
>them together, but I don't see that as a very popular
>choice. Even if you did that, it would not impact
>the HTML spec.)

Makes sense to me, assuming the answers to the next two questions are
(or could be in the future) both yes.  Does display postscript have
hypertext capabilities (yet :-), and is display postscript a recognized
MIME content type?

	   tom

From marca@wintermute.ncsa.uiuc.edu  Tue Dec  8 06:13:10 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA16460; Tue, 8 Dec 92 06:13:10 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA24454; Tue, 8 Dec 1992 06:26:30 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA14990
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Mon, 7 Dec 92 23:26:29 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA09109; Mon, 7 Dec 92 23:27:43 -0800
Date: Mon, 7 Dec 92 23:27:43 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212080727.AA09109@wintermute.ncsa.uiuc.edu>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: HTML: hypertext or hypermedia?
In-Reply-To: <9212080501.AA29598@pixel.convex.com>
References: <9212080501.AA29598@pixel.convex.com>

Dan Connolly writes:
> Some folks have expressed an interest in putting graphics and such
> _inside_ an HTML document.
>
> Other folks just want references from the SGML to external data.
> (even if it's presented as if it were part of the flow of text).

The presentation as part of the flow of the document is virtually
essential -- otherwise it's only a halfway solution.

> (or you _could_ use the MIME multipart mechanism to glue them
> together, but I don't see that as a very popular choice. Even if you
> did that, it would not impact the HTML spec.)

I see this as the best possible choice, at this point in time.  While
not an ideal solution, it has the twin benefits of (as you say) using
entirely existing mechanisms and providing substantial functionality.
(And yes, I really do talk like that -- in fact, I used to work at
IBM.)

Allowing this would not preclude future Web-based hypermedia
mechanisms -- in fact, it would encourage them, as we become more
familiar with the limitations of HTML and MIME.

Blah blah blah... anyhow, we're going to go ahead and take this
approach, so we'll see how it turns out :-).

Marc


From marca@wintermute.ncsa.uiuc.edu Mon Dec  7 13:05:53 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11216; Mon, 7 Dec 92 13:05:52 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA20351; Mon, 7 Dec 1992 13:19:12 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA27403
  (5.65a/IDA-1.4.2 for timbl@nxoc01.cern.ch); Mon, 7 Dec 92 06:19:11 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:timbl@nxoc01.cern.ch id AA06784; Mon, 7 Dec 92 06:20:25 -0800
Date: Mon, 7 Dec 92 06:20:25 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212071420.AA06784@wintermute.ncsa.uiuc.edu>
To: timbl@nxoc01.cern.ch
Subject: Re: last-modified document info?
In-Reply-To: <9212071208.AA01765@www3.cern.ch>
References: <9212071208.AA01765@www3.cern.ch>

Tim Berners-Lee writes:
> I think this too is something for HTTP rather than HTML, as it
> applies also to GIF pictures and postscript. Good point.

Seems to me your new HTTP protocol would support this, maybe?  Date
could just be one of the return values.  However, it would be nice to
be able to determine the last-modified date for a document remotely
without actually having to fetch the whole document (pardon me if I'm
missing something since I haven't read your new HTTP stuff yet).

Timestamps would be a great enabling mechanism for computer-assisted
browsing of the Web.

Marc


From CSP1DWD@mvs.oac.ucla.edu  Tue Dec  8 19:29:51 1992
Return-Path: <CSP1DWD@mvs.oac.ucla.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21597; Tue, 8 Dec 92 19:29:51 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA21351; Tue, 8 Dec 1992 19:43:14 +0100
Message-Id: <9212081843.AA21351@dxmint.cern.ch>
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 4781; Tue, 08 Dec 92 19:42:09 SET
Received: from UCLAMVS.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 7012; Tue, 08 Dec 92 19:42:08 SET
Date:    Tue, 08 Dec 92 10:42 PST
To: www-talk@nxoc01.cern.ch
From: Denis DeLaRoca (310) 825-4580        <CSP1DWD@mvs.oac.ucla.edu>
Subject: Gopher Wais queries

They are not working using the LineMode browser... I tried the
info.cern reference client but doing a wais query thru a gopher
server invaribly elicits a server error... anybody that has looked/
fixed this problem please post the necessary changes.

-- Denis


From CSP1DWD@mvs.oac.ucla.edu  Tue Dec  8 20:29:29 1992
Return-Path: <CSP1DWD@mvs.oac.ucla.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21947; Tue, 8 Dec 92 20:29:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA07398; Tue, 8 Dec 1992 20:42:53 +0100
Message-Id: <9212081942.AA07398@dxmint.cern.ch>
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 4936; Tue, 08 Dec 92 20:41:47 SET
Received: from UCLAMVS.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 7549; Tue, 08 Dec 92 20:41:47 SET
Date:    Tue, 08 Dec 92 11:42 PST
To: www-talk@nxoc01.cern.ch
From: Denis DeLaRoca (310) 825-4580        <CSP1DWD@mvs.oac.ucla.edu>
Subject: Re: Gopher Wais queries

Ok, here's the problem... gopher/index/wais paths include ":" chars
in the path names, the ":" is escaped by HTGOPHER on input, but on
output it is not restored for the case of GOPHER_INDEX type, the
escaped ":" (%3a or %7a for ebcdic systems) sent to the WAIS server
generates the server error...

I am circumventing the problem by including ":" in the table of
accepted chars but maybe someone can explain to me why this business
of escaping chars exists, then I can develop a better fix.

-- Denis


From connolly@pixel.convex.com  Wed Dec  9 00:47:21 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA23321; Wed, 9 Dec 92 00:47:21 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA23635; Wed, 9 Dec 1992 01:00:44 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA08306; Tue, 8 Dec 92 18:00:41 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA00605; Tue, 8 Dec 92 18:00:39 -0600
Message-Id: <9212090000.AA00605@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: HTML: use SGML keyboarding features?
Date: Tue, 08 Dec 92 18:00:38 CST
From: Dan Connolly <connolly@pixel.convex.com>

SGML has several features to make keyboarding easier.

As I was adding phrase-level elements (from TeXinfo:
em, strong, code, file, cite, etc.) it occurs
to me that it might be somewhat tedious to
key this stuff in:

	See <cite>A Discipline of Programming</cite> for good ideas.

	Type <kbd>go </kbd><var>address</var><key>RETURN</key> to
	go to any node by its address.

SGML has a feature called SHORTTAG that lets you do:

	I <em/really/ think we should...

and stuff like that. It also lets you omit the quotes around
attribute values, as long as they only contain name characters
(letters, digits, period, hyphen).

Do we want to support these in HTML?

I'd say: no.

But it would be nice to have a program that reads HTML with this
kind of markup and writes the more primitive kind.

This tool is usually said to normalize a document. Perhaps
I could hack the sgmls parser to do this kind of thing.
Shouldn't be too hard.

So we would end up with a "compiler" that just spit the
source back out, all cleaned up.

Just an idea...

Dan


From marca@wintermute.ncsa.uiuc.edu  Wed Dec  9 07:33:03 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24418; Wed, 9 Dec 92 07:33:03 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA05835; Wed, 9 Dec 1992 07:46:26 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA06309
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Wed, 9 Dec 92 00:46:24 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA12378; Wed, 9 Dec 92 00:47:35 -0800
Date: Wed, 9 Dec 92 00:47:35 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212090847.AA12378@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: forwarded message from Lou Montulli

FYI...

Marc

------- Start of forwarded message -------
From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: RE: Text based hypertext engine for UNIX (SCO)
Date: Tue, 8 Dec 92 11:43:04 CST

> 
>    Try looking at Lynx, developed at the University of Kansas.
>    It has a superior curses interface to WWW for curser addressable
>    terminals and can link together your existing resourses is ways
>    WWW can't.  You can telnet to KUfacts.cc.ukans.edu and login as
>    'kufacts' for a demo of the system.  It is available for 
>    anonymous ftp from kuhub.cc.ukans.edu in the lynx directory
>    as lynx.tar-Z.  It curently runs on almost any UNIX system with
>    a curses package.        
> 
> Fascinating... it looks really nice.  In what ways can it ``link
> together your existing resourses'' that WWW can't?
> 
> Marc

Lynx can rexec programs running on remote hosts, can start inetd applications
on remote hosts and perform transparent rlogins.  For instance, say you
have a library database system that is already in place.  You simply
add a link such as <!RLOGIN@library.host.edu -user=libcat> and Lynx
would log the user into library.host.edu as user libcat to use the library
system.  In our system you can see an example of an rexeced program
by selecting "Organizations Events and Activities" and then selecting
"Events at KU".  A database program is evoked on our stat1 system, 
(you can see this by typing a '=' before evoking events) the program
querys the user, and the database and then returns data to Lynx.

Lynx can also perform telnet and tn3270 functions, but everyone has those
so why bother talking about them.  Although one nice feature about Lynx
is that it can read the hytelnet database, check out hytelnet under
the Internet Toolbox menu.

:Lou
- -- 
  **************************************************************************
  *           T H E   U N I V E R S I T Y   O F   K A N S A S              *
  *      Lou  MONTULLI @ Ukanvax.bitnet                Nothing difficult,  *
  *                      Kuhub.cc.ukans.edu               is ever easy!    *
  *  UNIX,               Ukanaix.cc.ukans.edu       ACS Computing Services *
  *   have more fun!     Ukanvm.cc.ukans.edu           Lawrence, KS 66044  *
  **************************************************************************
------- End of forwarded message -------


From timbl@www3.cern.ch  Wed Dec  9 08:19:36 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24505; Wed, 9 Dec 92 08:19:36 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA11726; Wed, 9 Dec 1992 08:33:00 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00892; Wed, 9 Dec 92 08:26:45 +0100
Date: Wed, 9 Dec 92 08:26:45 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212090726.AA00892@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch, www-announce@nxoc01.cern.ch
Subject: WWW Library bug fix release
Cc: Denis DeLaRoca (310) 825-4580 <CSP1DWD@mvs.oac.ucla.edu>
Reply-To: timbl@nxoc01.cern.ch

There have been a few bug fixes in the WWWLibrary.  (This product is needed for  
the line mode and Viola browers.)  Bug fixes between 1.0b and 1.0c are as  
follows:

- Fixed bug in FTP handling  (FTP file retrieve put control connection in bad  
state)

- Fixed bug in Gopher handling on non-ASCII platforms.

- Fixed bug in Gopher search of index whose name contained characters (such as  
blanks) escaped with %.

- Fixed bug in NEWS handling: failed on non-ASCII platforms.

I have released a version 1.0c which is in ftp://ifo.cern.ch/pub/www/src as  
usual.  For differences between earlier versions consult
 http://info.cern.ch/hypertext/WWW/Library/Features.html .


	Tim BL


From timbl@www3.cern.ch  Wed Dec  9 09:52:14 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA24968; Wed, 9 Dec 92 09:52:14 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA02577; Wed, 9 Dec 1992 10:05:38 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01014; Wed, 9 Dec 92 09:59:19 +0100
Date: Wed, 9 Dec 92 09:59:19 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212090859.AA01014@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: HTML: use SGML keyboarding features?
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



We should insist that anything shipped on the net and described
as conforming HTML is normalized a la DTD.

That doesn't stop parsers being tolerant of unnormalized stuff.
These keyboarding aids are just a poor man's HTML editor. Others will use  
editor macros etc.   SGML is not going to survive by pretending to be a  
keyborad entry format.  (They also look horrible to me but then so do a number  
of aspects of SGML... )

Tim
 

From timbl@www3.cern.ch  Wed Dec  9 10:22:07 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25069; Wed, 9 Dec 92 10:22:07 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA07558; Wed, 9 Dec 1992 10:34:14 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01030; Wed, 9 Dec 92 10:26:54 +0100
Date: Wed, 9 Dec 92 10:26:54 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212090926.AA01030@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Lynx
Cc: www-talk@nxoc01.cern.ch, montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Reply-To: timbl@nxoc01.cern.ch

Lynx looks very nice -- but is it WWW?  From the comments about the syntax
it doesn't seem to be HTML.  It has Gopher access built in, but there is no  
access from KUfacts.cc.ukans.edu to the web.

These guys have done some good work on hooking into existing services.
The emphasis seems to be on building in extra bits and peices (rexec, hytelnet,  
etc) into the browser rather than making gateways.  In the long run I think  
this approach will get too heavy on browsers. For hytelnet, for example, a
gateway is more efficient than building stuff very specific to one information  
providing application into the browsers.

The screen management is neat. I wonder whether we could persuade them to make  
it W3 compatible?  (And their data with it?)  The user interface is quick and  
simple.  I missed "home" and "back", "next" and "previous" commands of the www  
line mode interface: one has always to go through the history page. But that  
keeps it simpler. I was glad I had more than 24 lines 9and the program  
recognised the fact) when the history list started to grow.

(Anyone want to make an W3 gateway for hytelnet?)

I am sure they could parse HTML with very little effort, and join the WWW club.
The existing text at KUfacts would all fit into the <PRE> format I think.
Their <!RLOGIN@library.host.edu -user=libcat> would be www's
<a href=rlogin://libcat@library.host.edu> I assume.   (This is not very general  
of course as not all systems support rlogin).

	Tim BL

Begin forwarded message:

Date: Wed, 9 Dec 92 00:47:35 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
To: www-talk@nxoc01.cern.ch
Subject: forwarded message from Lou Montulli

FYI...

Marc

------- Start of forwarded message -------
From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: RE: Text based hypertext engine for UNIX (SCO)
Date: Tue, 8 Dec 92 11:43:04 CST

> 

>    Try looking at Lynx, developed at the University of Kansas.
>    It has a superior curses interface to WWW for curser addressable
>    terminals and can link together your existing resourses is ways
>    WWW can't.  You can telnet to KUfacts.cc.ukans.edu and login as
>    'kufacts' for a demo of the system.  It is available for 

>    anonymous ftp from kuhub.cc.ukans.edu in the lynx directory
>    as lynx.tar-Z.  It curently runs on almost any UNIX system with
>    a curses package.        

> 

> Fascinating... it looks really nice.  In what ways can it ``link
> together your existing resourses'' that WWW can't?
> 

> Marc

Lynx can rexec programs running on remote hosts, can start inetd applications
on remote hosts and perform transparent rlogins.  For instance, say you
have a library database system that is already in place.  You simply
add a link such as <!RLOGIN@library.host.edu -user=libcat> and Lynx
would log the user into library.host.edu as user libcat to use the library
system.  In our system you can see an example of an rexeced program
by selecting "Organizations Events and Activities" and then selecting
"Events at KU".  A database program is evoked on our stat1 system, 

(you can see this by typing a '=' before evoking events) the program
querys the user, and the database and then returns data to Lynx.

Lynx can also perform telnet and tn3270 functions, but everyone has those
so why bother talking about them.  Although one nice feature about Lynx
is that it can read the hytelnet database, check out hytelnet under
the Internet Toolbox menu.

:Lou
- -- 

  **************************************************************************
  *           T H E   U N I V E R S I T Y   O F   K A N S A S              *
  *      Lou  MONTULLI @ Ukanvax.bitnet                Nothing difficult,  *
  *                      Kuhub.cc.ukans.edu               is ever easy!    *
  *  UNIX,               Ukanaix.cc.ukans.edu       ACS Computing Services *
  *   have more fun!     Ukanvm.cc.ukans.edu           Lawrence, KS 66044  *
  **************************************************************************
------- End of forwarded message -------



From mcclanah@dlgeo.cr.usgs.gov  Wed Dec  9 18:33:25 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28450; Wed, 9 Dec 92 18:33:25 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA15463; Wed, 9 Dec 1992 18:46:49 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA25384; Wed, 9 Dec 92 11:42:56 CST
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA02043; Wed, 9 Dec 1992 11:47:44 -0600
Date: Wed, 9 Dec 1992 11:47:44 -0600
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9212091747.AA02043@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: W3 and Oracle


At CERN there is a doc that refers to some stuff that Tim and another
person did that was the beginnings of a server to an Oracle database.
Has anyone messed around with it at all.  How would one write a document
to specify the query for the HTOracle server to use?  Any help is appreciated.

Thanks 
Pat

From mcclanah@dlgeo.cr.usgs.gov  Wed Dec  9 20:17:52 1992
Return-Path: <mcclanah@dlgeo.cr.usgs.gov>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29300; Wed, 9 Dec 92 20:17:52 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA28264; Wed, 9 Dec 1992 20:31:17 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA26614; Wed, 9 Dec 92 13:27:23 CST
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA02091; Wed, 9 Dec 1992 13:32:13 -0600
Date: Wed, 9 Dec 1992 13:32:13 -0600
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9212091932.AA02091@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch

From mail Wed Dec  9 12:19 CST 1992
Received: from wupost.wustl.edu by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA02066; Wed, 9 Dec 1992 12:19:45 -0600
Received: by wupost.wustl.edu id AA11566
  (5.65c+/IDA-1.4.4 for <mcclanah@dlgeo.cr.usgs.gov>); Wed, 9 Dec 1992 12:17:20 -0600
Date: Wed, 9 Dec 1992 12:17:20 -0600
From: Mail Delivery Subsystem <MAILER-DAEMON@wupost.wustl.edu>
Message-Id: <199212091817.AA11566@wupost.wustl.edu>
To: mcclanah@dlgeo.cr.usgs.gov
Cc: Postmaster@wupost.wustl.edu
Subject: Returned mail: Service unavailable
Content-Type: text
Content-Length: 2744
Status: R

   ----- Transcript of session follows -----
While talking to malgudi.oar.net:
>>> DATA
<<< 554 <bullwinkle!steved>... Service unavailable
554 <bullwinkle!steved@wupost.wustl.edu>... Service unavailable

   ----- Unsent message follows -----
Received: from RUTGERS.EDU by wupost.wustl.edu with SMTP id AA11564
  (5.65c+/IDA-1.4.4 for <bullwinkle!steved@wupost.wustl.edu>); Wed, 9 Dec 1992 12:17:20 -0600
Received: from saqqara.cis.ohio-state.edu by rutgers.edu (5.59/SMI4.0/RU1.5/3.08) 
	id AA23618; Wed, 9 Dec 92 13:17:12 EST
Received: by saqqara.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA25426; Wed, 9 Dec 92 13:17:07 -0500
Received: from malgudi.oar.net by saqqara.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA25257; Wed, 9 Dec 92 13:08:36 -0500
Received: from wupost.wustl.edu  for mcclanah@dlgeo.cr.usgs.gov
	by ns.oar.net (5.65c+KVa/920824.1144) id AA16572; Wed, 9 Dec 1992 13:08:33 -0500
Received: from RUTGERS.EDU by wupost.wustl.edu with SMTP id AA11149
  (5.65c+/IDA-1.4.4 for <bullwinkle!steved@wupost.wustl.edu>); Wed, 9 Dec 1992 12:07:15 -0600
Received: from saqqara.cis.ohio-state.edu by rutgers.edu (5.59/SMI4.0/RU1.5/3.08) 
	id AA21956; Wed, 9 Dec 92 13:07:09 EST
Received: by saqqara.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA25240; Wed, 9 Dec 92 13:07:04 -0500
Received: from malgudi.oar.net by saqqara.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA25208; Wed, 9 Dec 92 13:04:22 -0500
Received: from wupost.wustl.edu  for mcclanah@dlgeo.cr.usgs.gov
	by ns.oar.net (5.65c+KVa/920824.1144) id AA16294; Wed, 9 Dec 1992 13:04:18 -0500
Received: from dxmint.cern.ch by wupost.wustl.edu with SMTP id AA10883
  (5.65c+/IDA-1.4.4 for <steved%bullwinkle.uucp@wupost.wustl.edu>); Wed, 9 Dec 1992 12:02:49 -0600
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA15495; Wed, 9 Dec 1992 18:47:10 +0100
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28450; Wed, 9 Dec 92 18:33:25 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA15463; Wed, 9 Dec 1992 18:46:49 +0100
Received: from dlgeo.cr.usgs.gov by sunl.cr.usgs.gov (4.1/SMI-3.2)
	id AA25384; Wed, 9 Dec 92 11:42:56 CST
Received: by dlgeo.cr.usgs.gov (5.4.1/1.34)
	id AA02043; Wed, 9 Dec 1992 11:47:44 -0600
Date: Wed, 9 Dec 1992 11:47:44 -0600
From: mcclanah@dlgeo.cr.usgs.gov
Message-Id: <9212091747.AA02043@dlgeo.cr.usgs.gov>
To: www-talk@nxoc01.cern.ch
Cc: mcclanah@dlgeo.cr.usgs.gov
Subject: W3 and Oracle


At CERN there is a doc that refers to some stuff that Tim and another
person did that was the beginnings of a server to an Oracle database.
Has anyone messed around with it at all.  How would one write a document
to specify the query for the HTOracle server to use?  Any help is appreciated.

Thanks 
Pat


From montulli@ukanaix.cc.ukans.edu  Wed Dec  9 20:52:07 1992
Return-Path: <montulli@ukanaix.cc.ukans.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA29545; Wed, 9 Dec 92 20:52:07 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA01984; Wed, 9 Dec 1992 21:05:31 +0100
Received: by ukanaix.cc.ukans.edu (AIX 3.1/UCB 5.61/4.03)
          id AA24547; Wed, 9 Dec 92 14:03:50 -0600
From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Message-Id: <9212092003.AA24547@ukanaix.cc.ukans.edu>
Subject: Re: Lynx
To: timbl@nxoc01.cern.ch
Date: Wed, 9 Dec 92 14:03:47 CST
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: <9212090926.AA01030@www3.cern.ch>; from "Tim Berners-Lee" at Dec 9, 92 10:26 am
X-Mailer: ELM [version 2.3 PL2]

> 
> Lynx looks very nice -- but is it WWW?  From the comments about the syntax
> it doesn't seem to be HTML.  It has Gopher access built in, but there is no  
> access from KUfacts.cc.ukans.edu to the web.

No it is not WWW, but you are right that it should not be difficult to
add html compatibility.  Maybe I'm wrong but it seems that the majority
of the resources that I see available are in Gopher format.  Our 
concentration has been more towards the user interface than the protocal.
A fatal flaw perhaps?  Adding html will correct those problems because
obviously a great deal of though has gone into its implementation.
If we had know about WWW before beginning work on this project, chances
are we would have used WWW and just rewritten the curses client to look
halfway reasonable.
> 
> These guys have done some good work on hooking into existing services.
>The emphasis seems to be on building in extra bits and peices(rexec, hytelnet, 
> etc) into the browser rather than making gateways.  In the long run I think  
> this approach will get too heavy on browsers. For hytelnet, for example, a
> gateway is more efficient than building stuff very specific to one information  
Hytelnet compatability was not added as an after thought.  The markup 
language began compatible with hytelnet and evolved from there.  Our 
focus in designing the language was to make it easily understood by
non-programmers and I think we have achieved that, but this limits
its functionality, again we are back to needing html.

>providing application into the browsers.
> 
>The screen management is neat. I wonder whether we could persuade them to make  
>it W3 compatible?  (And their data with it?)  The user interface is quick and  
>simple. I missed "home" and "back", "next" and "previous" commands of the www  

If you wish to retreat from a document you simply have to push the left arrow.
The user controls were adopted from hytelnet, very simple and user freindly.
Right arrow - follow a link
Left arrow  - retreat form a link
up arrow    - next link
down arrow  - previous link

>line mode interface: one has always to go through the history page. But that  
> keeps it simpler. I was glad I had more than 24 lines 9and the program  
> recognised the fact) when the history list started to grow.
> 
> (Anyone want to make an W3 gateway for hytelnet?)

Will this gateway re-write the links inside hytelnet documents to match
html?

> 
> I am sure they could parse HTML with very little effort, and join the WWW club.
> The existing text at KUfacts would all fit into the <PRE> format I think.
> Their <!RLOGIN@library.host.edu -user=libcat> would be www's
> <a href=rlogin://libcat@library.host.edu> I assume.(This is not very general  
> of course as not all systems support rlogin).

Rlogin code can be included in the client for systems without native Rlogin.
This is a very useful feature, is it unreasonable to include the code?

:lou
-- 
  **************************************************************************
  *           T H E   U N I V E R S I T Y   O F   K A N S A S              *
  *      Lou  MONTULLI @ Ukanvax.bitnet                Nothing difficult,  *
  *                      Kuhub.cc.ukans.edu               is ever easy!    *
  *  UNIX,               Ukanaix.cc.ukans.edu       ACS Computing Services *
  *   have more fun!     Ukanvm.cc.ukans.edu           Lawrence, KS 66044  *
  **************************************************************************

From connolly@pixel.convex.com  Thu Dec 10 04:02:16 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01609; Thu, 10 Dec 92 04:02:16 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA09242; Thu, 10 Dec 1992 04:15:41 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA08563; Wed, 9 Dec 92 21:15:38 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA14084; Wed, 9 Dec 92 21:15:36 -0600
Message-Id: <9212100315.AA14084@pixel.convex.com>
Newsgroups: comp.infosystems.gopher
Subject: Re: Gopher+ Considered Harmful
To: www-talk@nxoc01.cern.ch
References: <75220@apple.apple.COM>
Organization: Engineering, CONVEX Computer Corp., Richardson, Tx., USA
Date: Wed, 09 Dec 92 21:15:36 CST
From: Dan Connolly <connolly@pixel.convex.com>

In article <75220@apple.apple.COM> dell@Apple.COM (Thomas E. Dell) writes:
[ an excellent assesment of Gopher and Gopher+ prototocls ...]

>Proposal:
> 
>  Draft a protocol modeled after ideas present in SMTP, NNTP, and
>  FTP, with a few commands to support existing functionality.

The World-Wide Web project is also taking on the next major
revision of their protocol. I have suggested to them that NNTP
makes a good basis, and they were agreeable.

I sincerely hope that Gopher+ and HTTP2 (HyperText Transfer
Protocol, version 2) merge into an NNTP-style protocol.

I suggest we even make it NNTP compatible, except that it
would be stateless: the server processes one transaction and
then terminates the connection. And in addtion to requesting
articles by number or by ID, we would add the ability to
request them by path, a quoted string.

For exmaple:

   S:      (listens at TCP port XXX)
   C:      (requests connection on TCP port XXX)
   S:      203 wombat NNTP++ server ready
   C:      BODY "foo/bar/xxx.z"
   S:      222 "foo/bar/xxx.z" article retrieved. body text follows
           (body text here)
	   .
   S:      400 service discontinued

We would use the MIME standard for multimedia. We could allow
binary content-transfer-encoding on 8-bit clean connections, and
thus avoid the bandwidth needed to encode raw data.

   S:      (listens at TCP port XXX)
   C:      (requests connection on TCP port XXX)
   S:      203 wombat NNTP++ server ready
   C:      ARTICLE "foo/bar/xxx.z"
   S:      224 "foo/bar/xxx.z" All of article follows
   S:      (transmits article in RFC822 format, with a raw binary body:)
	    (... other headers)
	    Mime-Version: 1.0
	    Content-Type: image/gif
	    Content-Transfer-Encoding: binary
	    Content-Octets: 1274

	    (1274 bytes of raw data here)

   S:      400 service discontinued

Seems like a good idea to me. What does anybody else think?

Dan


From timbl@www3.cern.ch  Thu Dec 10 08:13:57 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02326; Thu, 10 Dec 92 08:13:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA01164; Thu, 10 Dec 1992 08:27:23 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01572; Thu, 10 Dec 92 08:21:06 +0100
Date: Thu, 10 Dec 92 08:21:06 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212100721.AA01572@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Subject: Re: Lynx
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>  From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
>  Date: Wed, 9 Dec 92 14:03:47 CST
>  > 

>  > 

>  > (Anyone want to make an W3 gateway for hytelnet?)
>  

>  Will this gateway re-write the links inside hytelnet documents to match
>  html?

That is the idea.  It can probably do it on the fly at every request, so
that if you want to keep your source in hytelnet format, then you can
do that. A special W3 server just converts it as it puts it onto the net
with each client query.

>  

>  Rlogin code can be included in the client for systems without native Rlogin.
>  This is a very useful feature, is it unreasonable to include the code?

Not at all, that's a good point.  Pointers to the best portable source?

>  :lou

Tim

From guido@cwi.nl  Thu Dec 10 10:42:02 1992
Return-Path: <guido@cwi.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA02898; Thu, 10 Dec 92 10:42:02 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA03135; Thu, 10 Dec 1992 10:55:27 +0100
Received: from voorn.cwi.nl by charon.cwi.nl with SMTP
	id AA03712 (5.65b/3.2/CWI-Amsterdam); Thu, 10 Dec 1992 10:55:25 +0100
Received: by voorn.cwi.nl with SMTP
	id AA26659 (5.65b/3.2/CWI-Amsterdam); Thu, 10 Dec 1992 10:55:25 +0100
Message-Id: <9212100955.AA26659.guido@voorn.cwi.nl>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Gopher+ Considered Harmful 
In-Reply-To: Your message of "Wed, 09 Dec 1992 21:15:36 MET."
             <9212100315.AA14084@pixel.convex.com> 
From: Guido.van.Rossum@cwi.nl
X-Organization: CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands
X-Phone: +31 20 5924127 (work), +31 20 6225521 (home), +31 20 5924199 (fax)
Date: Thu, 10 Dec 1992 10:55:24 +0100
Sender: Guido.van.Rossum@cwi.nl

I once explained the current HTTP protocol to a local network guru and
he expressed concern that basing a protocol like this on TCP/IP is a
great waste of network resources, since you are using a
session-oriented protocol for what is essentially one remote procedure
call.  My question "then what would you recommend instead" provoked no
useful answer (what is needed is *reliable* datagrams, but these are
not implemented as an IP protocol; UDP requires too much coding for
time-out, retransmission and fragmentation).  Yet, he convinced me
that a light-weight protocol like this should minimize the number of
round-trips.

I have the feeling that the current trend of basing the new protocol
on NNTP violates that requirement.  I like the idea of borrowing
response and data formats from the FTP/SMTP/NNTP family of protocols,
with suitable extensions for 8-bit data paths.  However I don't like
it if compatibility with NNTP forces us to have an extra round trip
just so that the server can give its welcome message.

Also, I don't like the fact that you must parse the RFC822/MIME header
to find out how many bytes are to be expected.  This seems to be
mixing two levels of protocols: MIME assumes that the end of the
message is already known, and the MIME headers then tell you what to
do with it.

As I see it, there are two possible ways of using MIME in HTTP+.  We
can either support MIME as the *only* data format (implementing any
extensions we need as new MIME content types or subtypes or additional
headers), or we we support MIME as one of the possible data formats.

In both cases we need a way to indicate how much data follows; if all
we ever send is MIME, all that is needed is a header indicating the
byte count, otherwise a type identifier is needed as well.

--Guido van Rossum, CWI, Amsterdam <guido@cwi.nl>
"The plumage don't enter into it.  He's stone dead!"

From news@news2.cis.umn.edu  Thu Dec 10 16:46:32 1992
Return-Path: <news@news2.cis.umn.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05090; Thu, 10 Dec 92 16:46:32 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA23276; Thu, 10 Dec 1992 16:59:59 +0100
Received: by news2.cis.umn.edu (5.65c/)
	id AA21674; Thu, 10 Dec 1992 09:59:54 -0600
To: gopher-archive@mudhoney.micro.umn.edu
Newsgroups: comp.infosystems.gopher
Path: umn.edu!The-Star.honeywell.com!src.honeywell.com!uwm.edu!caen!uunet!europa.asd.contel.com!howland.reston.ans.net!news.ans.net!ans.net!news
From: Dan Connolly <connolly@pixel.convex.com>
Subject: Re: Gopher+ Considered Harmful
Sender: news@ans.net (News Administrator)
Message-Id: <9212100315.AA14084@pixel.convex.com.ans-relay.ans-relay>
Date: Thu, 10 Dec 1992 03:15:36 GMT
Distribution: local-relay
To: www-talk@nxoc01.cern.ch
References: <75220@apple.apple.COM>
Organization: Engineering, CONVEX Computer Corp., Richardson, Tx., USA
Lines: 56

In article <75220@apple.apple.COM> dell@Apple.COM (Thomas E. Dell) writes:
[ an excellent assesment of Gopher and Gopher+ prototocls ...]

>Proposal:
> 
>  Draft a protocol modeled after ideas present in SMTP, NNTP, and
>  FTP, with a few commands to support existing functionality.

The World-Wide Web project is also taking on the next major
revision of their protocol. I have suggested to them that NNTP
makes a good basis, and they were agreeable.

I sincerely hope that Gopher+ and HTTP2 (HyperText Transfer
Protocol, version 2) merge into an NNTP-style protocol.

I suggest we even make it NNTP compatible, except that it
would be stateless: the server processes one transaction and
then terminates the connection. And in addtion to requesting
articles by number or by ID, we would add the ability to
request them by path, a quoted string.

For exmaple:

   S:      (listens at TCP port XXX)
   C:      (requests connection on TCP port XXX)
   S:      203 wombat NNTP++ server ready
   C:      BODY "foo/bar/xxx.z"
   S:      222 "foo/bar/xxx.z" article retrieved. body text follows
           (body text here)
	   .
   S:      400 service discontinued

We would use the MIME standard for multimedia. We could allow
binary content-transfer-encoding on 8-bit clean connections, and
thus avoid the bandwidth needed to encode raw data.

   S:      (listens at TCP port XXX)
   C:      (requests connection on TCP port XXX)
   S:      203 wombat NNTP++ server ready
   C:      ARTICLE "foo/bar/xxx.z"
   S:      224 "foo/bar/xxx.z" All of article follows
   S:      (transmits article in RFC822 format, with a raw binary body:)
	    (... other headers)
	    Mime-Version: 1.0
	    Content-Type: image/gif
	    Content-Transfer-Encoding: binary
	    Content-Octets: 1274

	    (1274 bytes of raw data here)

   S:      400 service discontinued

Seems like a good idea to me. What does anybody else think?

Dan


From connolly@pixel.convex.com  Thu Dec 10 17:52:06 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05767; Thu, 10 Dec 92 17:52:06 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA02503; Thu, 10 Dec 1992 18:05:32 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA13092; Thu, 10 Dec 92 11:05:26 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA23223; Thu, 10 Dec 92 11:05:24 -0600
Message-Id: <9212101705.AA23223@pixel.convex.com>
To: www-talk@nxoc01.cern.ch
Subject: <, >, and & characters in HTML
Date: Thu, 10 Dec 92 11:05:24 CST
From: Dan Connolly <connolly@pixel.convex.com>


I'm trying to write libHTML so that applications
can just deal with C style character strings, and
the library does all the SGML details.

The use of &lt; and &amp; to represent < and & never
seemed to fit cleanly into the SGML view of things.
So I posted to comp.text.sgml.

I think I'm a lot clearer on the matter now. The
&lt; and &gt; entities are meant to be used in typesetting
mathematics, where a less-than symbol is not necessarily
the same thing as a '<' character.

There's a mechanism for referencing characters in the
document character set in such a way that they will
not be treated as markup: numeric character references.

I'd like to get rid of the &lt;, &gt;, and &amp; entities
from the HTML DTD. Granted, there will be a transition
period while providers adjust, but I think it will make
the spec cleaner.

Anyway, here's what the experts had to say...

[edited...]

Newsgroups: comp.text.sgml
From: Erik Naggum <SGML@ifi.uio.no>
Reply-To: Erik Naggum <enag@ifi.uio.no>
Message-ID: <19921210.008@erik.naggum.no>
Date: 10 Dec 1992 07:36:57 +0100
References: <1992Dec10.020628.4884@news.eng.convex.com>
Subject: Re: hiding <, >, and &
Lines: 111

[Dan Connolly]
:
|   There is a lot of need for a routine represents an arbitrary string
|   of characters as SGML data -- a routine that hides <tags> etc. from
|   the parser.

The simplest would be to use character references for the characters
that you need to quote.  See 9.5 Character Reference, [357:10-13].

...

The way I see it, this is a completely failsafe technique.

|   [It does bring up the question of representing " and ' characters in
|   attribute value literals. Hmm.. another situation I think I'll
|   just avoid.]

What's wrong with "'", '"', "&#34;", and '&#39;'?

...

</Erik>
--
Erik Naggum                 ISO  8879 SGML                    +47 295 0313
                            ISO 10744 HyTime
<erik@naggum.no>            ISO  9899 C                 Memento, terrigena
<enag@ifi.uio.no>           ISO 10646 UCS             Memento, vita brevis



From connolly@pixel.convex.com  Thu Dec 10 18:51:45 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA06362; Thu, 10 Dec 92 18:51:45 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA09487; Thu, 10 Dec 1992 19:05:10 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA15908; Thu, 10 Dec 92 12:05:04 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA05022; Thu, 10 Dec 92 12:05:02 -0600
Message-Id: <9212101805.AA05022@pixel.convex.com>
To: Guido.van.Rossum@cwi.nl
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Gopher+ Considered Harmful 
In-Reply-To: Your message of "Thu, 10 Dec 92 10:55:24 +0100."
             <9212100955.AA26659.guido@voorn.cwi.nl> 
Date: Thu, 10 Dec 92 12:05:02 CST
From: Dan Connolly <connolly@pixel.convex.com>


>I once explained the current HTTP protocol to a local network guru and
>he expressed concern that basing a protocol like this on TCP/IP is a
>great waste of network resources, since you are using a
>session-oriented protocol for what is essentially one remote procedure
>call.

Do the WAIS folks know about this? I wonder what they'd say...

>  My question "then what would you recommend instead" provoked no
>useful answer (what is needed is *reliable* datagrams, but these are
>not implemented as an IP protocol; UDP requires too much coding for
>time-out, retransmission and fragmentation).  Yet, he convinced me
>that a light-weight protocol like this should minimize the number of
>round-trips.

I agree.

>I have the feeling that the current trend of basing the new protocol
>on NNTP violates that requirement.  I like the idea of borrowing
>response and data formats from the FTP/SMTP/NNTP family of protocols,
>with suitable extensions for 8-bit data paths.  However I don't like
>it if compatibility with NNTP forces us to have an extra round trip
>just so that the server can give its welcome message.

The idea was to use the existing usenet distributed database. But
I guess we should just use plain old NNTP for that.

>Also, I don't like the fact that you must parse the RFC822/MIME header
>to find out how many bytes are to be expected.  This seems to be
>mixing two levels of protocols: MIME assumes that the end of the
>message is already known, and the MIME headers then tell you what to
>do with it.

I certainly didn't think it out very carefully, did I?

>As I see it, there are two possible ways of using MIME in HTTP+.  We
>can either support MIME as the *only* data format (implementing any
>extensions we need as new MIME content types or subtypes or additional
>headers), or we we support MIME as one of the possible data formats.

A terminology note here: there is no one "MIME data format." There's
the ubiquitous message/rfc822 format that you can stick anything
inside using MIME techniques. But the basic unit of information
in the MIME spec is an _entity_ -- just an arbitrary stream of bytes.

The question is, when you're sending an entity from one
place to another, how do you know where the end is?

From the MIME point of view, an NNTP client and server have
an implicit agreement that the entity going across the
wire has a content-transfer-encoding of 7bit.

This allows them to use the dot-on-a-line-by-iteself technique to
terminate the entitiy.

They also share assumptions about the content-type as
a separate issue. The client assumes the response to an
ARTICLE command is a message/rfc822 entity, while the
response to a BODY command is text/plain.

So we'll start by throwing out the 7bit restriction and
assuming binary content transfer encoding. Then we need
a new way to terminate entities. It would be nice to
just stick the bytecount in the status message, and then
blast the entity across.

But HTTP includes a format negociation such that the client
doesn't know the content-type of the returned data
until it comes back. The easy way around that is to _enclose_
all entities in message/rfc822 entities, using the
Content-Type header.

So the server would have to 
1) compute the headers to enclose the entity in a message
2) compute the length of the new entity (headers + body)
3) send a status message with that bytecount, and finally
4) send the headers and the body entity.

Note that in step 2, everybody has to be consistent about
the fact that newlines count as _2_ characters: CR and LF.

The the client has to

1) read the status message and extract the bytecount
2) slurp up that many bytes
3) find the blank line that separates the header from the body
4) parse the content-type out of the headers
5) process the body based on the bytecount

That's why I ended up mixing the two levels of protocol
(message/rfc822 headers and HTTP+ status messages.) It would
be easier for the server to:

1) send a status message indicating binary transport (but no bytecount)
2) print the enclosing headers as they're computed
3) print one more header that has the bytecount of the body
4) print a blank line separating the header from the body
5) blast bytecount octets of data over the wire

The the client just does:

1) read and parse nice 7bit headers, one at a time.
2) when you get to a blank line, you know the bytecount and
   the content-type of the message.
3) slurp up bytecount bytes of data
4) process it according to content-type.

It is somewhat intertwingled, but I still kinda like it.

Dan


From guido@cwi.nl  Fri Dec 11 11:34:37 1992
Return-Path: <guido@cwi.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10484; Fri, 11 Dec 92 11:34:37 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA07105; Fri, 11 Dec 1992 11:47:58 +0100
Received: from voorn.cwi.nl by charon.cwi.nl with SMTP
	id AA17698 (5.65b/3.2/CWI-Amsterdam); Fri, 11 Dec 1992 11:47:55 +0100
Received: by voorn.cwi.nl with SMTP
	id AA29250 (5.65b/3.2/CWI-Amsterdam); Fri, 11 Dec 1992 11:47:54 +0100
Message-Id: <9212111047.AA29250.guido@voorn.cwi.nl>
To: Dan Connolly <connolly@pixel.convex.com>
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Gopher+ Considered Harmful 
In-Reply-To: Your message of "Thu, 10 Dec 1992 12:05:02 MET."
             <9212101805.AA05022@pixel.convex.com> 
From: Guido.van.Rossum@cwi.nl
X-Organization: CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands
X-Phone: +31 20 5924127 (work), +31 20 6225521 (home), +31 20 5924199 (fax)
Date: Fri, 11 Dec 1992 11:47:53 +0100
Sender: Guido.van.Rossum@cwi.nl

I wrote:
>>As I see it, there are two possible ways of using MIME in HTTP+.  We
>>can either support MIME as the *only* data format (implementing any
>>extensions we need as new MIME content types or subtypes or additional
>>headers), or we we support MIME as one of the possible data formats.

Dan's reply:
>A terminology note here: there is no one "MIME data format." There's
>the ubiquitous message/rfc822 format that you can stick anything
>inside using MIME techniques. But the basic unit of information
>in the MIME spec is an _entity_ -- just an arbitrary stream of bytes.

OK, when I said MIME data format I meant MIME message format, and was
referring to the outer level only (and note that MIME *implies*
RFC822).  I certainly did not refer to a particular content-type, not
even to message/rfc822.  The only thing that isn't well-specified when
one talks about "a file in MIME format" is whether line breaks are
given as CRLF or as LF (or as something else).

>The question is, when you're sending an entity from one
>place to another, how do you know where the end is?

This is a matter for the transport agent, not for MIME -- by the time
you call in the MIME agent to handle the data you must *already* know
where the end is.  For entities contained in other entities (e.g. the
content-type family multipart/*) there is a way defined in MIME to
find the end of the inner entities, but this is not true for the
outermost entity.

>From the MIME point of view, an NNTP client and server have
>an implicit agreement that the entity going across the
>wire has a content-transfer-encoding of 7bit.
>
>This allows them to use the dot-on-a-line-by-iteself technique to
>terminate the entitiy.

MIME and NNTP should never need to talk to each other.  MIME is a UA
level format, NNTP is a message transfer agent protocol.  NNTP can use
the dot-on-a-line-by-itself convention not because it is a 7-bit
protocol (which it isn't -- although other message transfer protocols
like SMTP are) but because it is a line-based protocol.  MIME is also
mostly a line-based format, even if the content-transfer-encoding is
8bit -- it is only in binary mode that we get in trouble (since
conversion from one kind of line terminator to another is dangerous
for binary data).

>They also share assumptions about the content-type as
>a separate issue. The client assumes the response to an
>ARTICLE command is a message/rfc822 entity, while the
>response to a BODY command is text/plain.

That's a nice way of putting it.

>[Long description of why you want to put the byte count in the MIME
>headers omitted]
>
>It is somewhat intertwingled, but I still kinda like it.

And I still don't.  I have the feeling that it would be much easier to
adapt HTTP to other (non-TCP) transport protocols if the size of an
entity is given separately rather than computed from the entity itself
(after all this nonsense is only necessary because TCP doesn't have a
way to distinguish EOF from a broken connection).  As I understand it
your main objection is that under my proposal you will have to
construct the necessary headers in a buffer first.  I don't believe
that this is that much of a hassle in today's computers -- it
shouldn't be more than a couple of kilobytes even in extreme cases,
which is peanuts even for a standard PC.

An issue on which I don't have a strong opinion is whether we should
represent line separators as CRLF in the header -- anyone else?

Cheers,

--Guido van Rossum, CWI, Amsterdam <guido@cwi.nl>
"The lawnmower.  Surely such a gadget could not have been generated
independently in two separate areas."

From pflynn@curia.ucc.ie  Fri Dec 11 12:00:17 1992
Return-Path: <pflynn@curia.ucc.ie>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10616; Fri, 11 Dec 92 12:00:17 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10639; Fri, 11 Dec 1992 12:13:44 +0100
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 4289; Fri, 11 Dec 92 12:12:34 SET
Received: from IRUCCIBM.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 5864; Fri, 11 Dec 92 12:12:33 SET
Received: from IRUCCVAX.UCC.IE by IRUCCIBM.BITNET (Mailer R2.08) with BSMTP id
 4669; Fri, 11 Dec 92 11:13:28 IST
Received: from curia.ucc.ie by IRUCCVAX.UCC.IE (PMDF #12095) id
 <01GS6QMPB9N40005NB@IRUCCVAX.UCC.IE>; Fri, 11 Dec 1992 10:50 GMT
Received: by curia.ucc.ie (4.1/SMI-4.1) id AA03471; Fri, 11 Dec 92 10:48:13 GMT
Date: Fri, 11 Dec 92 10:48:13 GMT
From: pflynn@curia.ucc.ie (Peter Flynn)
Subject: Getting the httpd daemon running
To: www-interest@nxoc01.cern.ch
Cc: www-bug@nxoc01.cern.ch, www-talk@nxoc01.cern.ch
Message-Id: <9212111048.AA03471@curia.ucc.ie>
X-Envelope-To: www-bug@nxoc01.cern.ch, www-interest@nxoc01.cern.ch,
 www-talk@nxoc01.cern.ch

I've hit an uncomfortable problem. httpd won't start up from my inetd.conf.
Here is /etc/services:

www             80/tcp          http            # WorldWideWeb server

and here is inetd.conf:

# WorldWideWeb service: add -l logfile if logging needed
www             stream  tcp     nowait  nobody  /usr/etc/httpd  httpd -l /tlh/br
   owse/WWW/httpd.log -v

(that's all one line starting www and ending -v). And here's the result:

curia# kill -HUP 136
curia# Dec 11 10:45:02 curia inetd[136]: www/tcp: unknown service

I'm clearly doing something silly but I cannot for the life of me see *what*.

///Peter

From marca@wintermute.ncsa.uiuc.edu  Fri Dec 11 12:01:46 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10622; Fri, 11 Dec 92 12:01:46 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA10787; Fri, 11 Dec 1992 12:15:13 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA12386
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Fri, 11 Dec 92 05:15:11 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA19300; Fri, 11 Dec 92 05:16:22 -0800
Date: Fri, 11 Dec 92 05:16:22 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212111316.AA19300@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: one-to-many links

Is there any good reason not to just a single anchor to point to
multiple links just by including more than one HREF field in an
anchor?

Curious minds want to know...

Marc


From pflynn@curia.ucc.ie  Fri Dec 11 13:10:00 1992
Return-Path: <pflynn@curia.ucc.ie>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA10889; Fri, 11 Dec 92 13:10:00 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA20017; Fri, 11 Dec 1992 13:23:28 +0100
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 4500; Fri, 11 Dec 92 13:22:18 SET
Received: from IRUCCIBM.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 6320; Fri, 11 Dec 92 13:22:17 SET
Received: from IRUCCVAX.UCC.IE by IRUCCIBM.BITNET (Mailer R2.08) with BSMTP id
 4719; Fri, 11 Dec 92 11:46:05 IST
Received: from curia.ucc.ie by IRUCCVAX.UCC.IE (PMDF #12095) id
 <01GS6RQG341S0004D3@IRUCCVAX.UCC.IE>; Fri, 11 Dec 1992 11:22 GMT
Received: by curia.ucc.ie (4.1/SMI-4.1) id AA03533; Fri, 11 Dec 92 11:20:15 GMT
Date: Fri, 11 Dec 92 11:20:15 GMT
From: pflynn@curia.ucc.ie (Peter Flynn)
Subject: Re:  Getting the httpd daemon running
To: marca@ncsa.uiuc.edu
Cc: www-bug@nxoc01.cern.ch, www-interest@nxoc01.cern.ch,
        www-talk@nxoc01.cern.ch
Message-Id: <9212111120.AA03533@curia.ucc.ie>
X-Envelope-To: marca@ncsa.uiuc.edu, www-bug@nxoc01.cern.ch,
 www-interest@nxoc01.cern.ch, www-talk@nxoc01.cern.ch


>What platform are you on?

Sorry, a Sun (4.1.1)

BUT...I found it...the lines of etc/services have to be in numeric order
of the socket. Now *that*'s not in the docs!!!

///Peter

From timbl@www3.cern.ch  Fri Dec 11 15:10:57 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA11752; Fri, 11 Dec 92 15:10:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA07313; Fri, 11 Dec 1992 15:24:24 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02698; Fri, 11 Dec 92 15:18:01 +0100
Date: Fri, 11 Dec 92 15:18:01 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212111418.AA02698@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: Guido.van.Rossum@cwi.nl
Subject: Re: Gopher+ Considered Harmful 
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


>  And I still don't.  I have the feeling that it would be much easier to
>  adapt HTTP to other (non-TCP) transport protocols if the size of an
>  entity is given separately rather than computed from the entity itself
>  (after all this nonsense is only necessary because TCP doesn't have a
>  way to distinguish EOF from a broken connection).  As I understand it
>  your main objection is that under my proposal you will have to
>  construct the necessary headers in a buffer first.  I don't believe
>  that this is that much of a hassle in today's computers -- it
>  shouldn't be more than a couple of kilobytes even in extreme cases,
>  which is peanuts even for a standard PC.

It is not the space to buffer the stuff in the average case which is a problem.

There are extreme cases: Long documents which spew out of format converters
piped into other format converters.  These things wouyld blow the memory of a  
server which we never like to do.

There is the cumulative effect of response times.  Curerntly, almost all the W3  
code is pipelines, so the reponse (click mouse to first character on screen) is  
a function of the round trip delays and any real retrieval time. The moment you  
put a buffer in to count bytes, you have to wait for the first until the last  
is available. In the (frequent) case of many stages being involved in a  
pipeline the response time does not in fact increase much, you just get a lot  
of CPU from processors on the pipe line.  Once you buffer it up, you are using  
CPU from one processor at a time.   You can't start displaying it until you've  
parsed it and you can't parse it until you've read it and you can't read it  
until the server has counted it and he can't even start to count it until all  
the real work has been finished.

You will notice the difference immediately. 


Piping things until EOF is so much faster.  Can TCP really not tell the  
difference between a remote connection close, and a broken connection? :-((
(APIs apart)

>  An issue on which I don't have a strong opinion is whether we should
>  represent line separators as CRLF in the header -- anyone else?
>  


If you are going to be telnet-style, then CRLF it has to be.
My comment in the proposed spec

	http://info.cern.ch/hypertext/WWW/Protocols/HTTP/HTTP2.html
	
was "...In particular, lines should be regarded as terminated by the Line Feed,  
and the preceeding Carriage Return character ignored." under a note on  
"tolerance".

Tim

From guido@cwi.nl  Fri Dec 11 16:06:26 1992
Return-Path: <guido@cwi.nl>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12408; Fri, 11 Dec 92 16:06:26 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA16140; Fri, 11 Dec 1992 16:19:54 +0100
Received: from voorn.cwi.nl by charon.cwi.nl with SMTP
	id AA14739 (5.65b/3.2/CWI-Amsterdam); Fri, 11 Dec 1992 16:19:47 +0100
Received: by voorn.cwi.nl with SMTP
	id AA00320 (5.65b/3.2/CWI-Amsterdam); Fri, 11 Dec 1992 16:19:45 +0100
Message-Id: <9212111519.AA00320.guido@voorn.cwi.nl>
To: www-talk@nxoc01.cern.ch
Subject: Re: Gopher+ Considered Harmful 
In-Reply-To: Your message of "Fri, 11 Dec 1992 15:18:01 MET."
             <9212111418.AA02698@www3.cern.ch> 
From: Guido.van.Rossum@cwi.nl
X-Organization: CWI, Kruislaan 413, 1098 SJ Amsterdam, The Netherlands
X-Phone: +31 20 5924127 (work), +31 20 6225521 (home), +31 20 5924199 (fax)
Date: Fri, 11 Dec 1992 16:19:45 +0100
Sender: Guido.van.Rossum@cwi.nl

Tim writes:

>It is not the space to buffer the stuff in the average case which is a problem
>
>There are extreme cases: Long documents which spew out of format converters
>piped into other format converters.  These things wouyld blow the memory of a
>server which we never like to do.
>
>There is the cumulative effect of response times. Curerntly, almost all the W3
>code is pipelines, so the reponse (click mouse to first character on screen)
>is a function of the round trip delays and any real retrieval time. The moment
>you put a buffer in to count bytes, you have to wait for the first until the
>last is available. In the (frequent) case of many stages being involved in a
>pipeline the response time does not in fact increase much, you just get a lot
>of CPU from processors on the pipe line.  Once you buffer it up, you are using
>CPU from one processor at a time.   You can't start displaying it until you've
>parsed it and you can't parse it until you've read it and you can't read it
>until the server has counted it and he can't even start to count it until all
>the real work has been finished.
>
>You will notice the difference immediately.

Yes, I see.  This means there is a problem whether you put a byte
count in the header or in an "envelope" sent before the header, so
Dan's solution is just as wrong as mine. :-(

>Piping things until EOF is so much faster.  Can TCP really not tell the
>difference between a remote connection close, and a broken connection? :-((
>(APIs apart)

I tried to find out a definitive answer but it is hard to figure out.
At the kernel level there is definitely a difference between a
shutdown by the remote side and a network failure, but at least on
UNIX both situations are passed to the client as an EOF.

One solution would be to add a standard string after the document,
e.g. CR LF "*%*%*%END-OF-DOCUMENT%*%*%*" CR LF, so that the client can
assume it has received the whole file if it sees this at the end of
the file.  The client cannot assume that the data *ends* when it sees
this (it is not another form of dot-on-a-line-by-itself), since it may
occur within the data as well, but it will know that it didn't get the
whole data if it doesn't end with this.

A better version would be to if the server could calculate a simple
checksum or "signature" (e.g. MD5) of the data and append this to the
end of the data.

--Guido van Rossum, CWI, Amsterdam <guido@cwi.nl>
"I'm sorry but I'm not allowed to argue unless you pay."

From timbl@www3.cern.ch  Fri Dec 11 16:39:29 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA12746; Fri, 11 Dec 92 16:39:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA21536; Fri, 11 Dec 1992 16:52:58 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA02813; Fri, 11 Dec 92 16:46:40 +0100
Date: Fri, 11 Dec 92 16:46:40 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212111546.AA02813@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Subject: Hytelnet server; WWW library version 1.1        (was: Lynx)
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch


A conversion program from hytelnet format to HTML is
on the web. The overview is on
http://info.cern.ch/hypertext/WWW/HytelnetGate/Overview.html
All that loverly data was too good to miss!

It uses the <PRE> format a lot, so you need the WWWLibarry version 1.1
or later in your browser (or the display looks a mess).

You could use the htn2html program recursively to convert a whole bunch of
hytelnet-style files into html. You would then have the option of
editing them to put pointers to other things than telnet sites and files
on the same system, and you could introduce some fancier formatting.

Alternatively, you cn just run a server which converts on the fly as
we now do on http://info.cern.ch:8002/w3start.txt

Tim

From connolly@pixel.convex.com  Fri Dec 11 20:00:14 1992
Return-Path: <connolly@pixel.convex.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA14684; Fri, 11 Dec 92 20:00:14 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA11927; Fri, 11 Dec 1992 20:13:43 +0100
Received: from pixel.convex.com by convex.convex.com (5.64/1.35)
	id AA13220; Fri, 11 Dec 92 13:13:37 -0600
Received: from localhost by pixel.convex.com (5.64/1.28)
	id AA25973; Fri, 11 Dec 92 13:13:34 -0600
Message-Id: <9212111913.AA25973@pixel.convex.com>
To: Guido.van.Rossum@cwi.nl
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Gopher+ Considered Harmful 
In-Reply-To: Your message of "Fri, 11 Dec 92 11:47:53 +0100."
             <9212111047.AA29250.guido@voorn.cwi.nl> 
Date: Fri, 11 Dec 92 13:13:28 CST
From: Dan Connolly <connolly@pixel.convex.com>


>
>OK, when I said MIME data format I meant MIME message format, and was
>referring to the outer level only (and note that MIME *implies*
>RFC822).

Ding! No, but thanks for playing. A mime entity IS NOT NECESSARILY
A MESSAGE! I've tried to explain this a zillion times! You can
describe regular raw gif files with MIME content types. You
can for example do

% metamail -b -c "image/gif" foo.gif

where foo.gif is just a plain old gif file -- no headers, no
nothing.

From CSP1DWD@mvs.oac.ucla.edu  Sat Dec 12 08:16:24 1992
Return-Path: <CSP1DWD@mvs.oac.ucla.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA17752; Sat, 12 Dec 92 08:16:24 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA02157; Sat, 12 Dec 1992 08:29:55 +0100
Message-Id: <9212120729.AA02157@dxmint.cern.ch>
Received: from CEARN.cern.ch by CEARN.cern.ch (IBM VM SMTP V2R2)
   with BSMTP id 6865; Sat, 12 Dec 92 08:28:12 SET
Received: from UCLAMVS.BITNET by CEARN.cern.ch (Mailer R2.07B) with BSMTP id
 3503; Sat, 12 Dec 92 08:28:12 SET
Date:    Fri, 11 Dec 92 23:28 PST
To: timbl@nxoc01.cern.ch
From: Denis DeLaRoca (310) 825-4580        <CSP1DWD@mvs.oac.ucla.edu>
Subject: WWW library version 1.1
Cc: www-talk@nxoc01.cern.ch

I have gone ahead and fetched library v1.1 and linkedited it with
a LineMode browser v1.3b and am observing problems with the navigating
commands Back and HOme, when doing Back you end up with prompts that
feature no links to select even though the display shows active links,
HOme also appears to get lost...

I've noticed that your LineMode browser is now at version 1.4 but
it hasn't been posted yet on info.cern.ch, could this possible explain
the problems that I am observing?

-- Denis


From romig@cis.ohio-state.edu  Mon Dec 14 09:03:57 1992
Return-Path: <romig@cis.ohio-state.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00198; Mon, 14 Dec 92 09:03:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA16655; Sun, 13 Dec 1992 09:33:49 +0100
Received: by brachiosaur.cis.ohio-state.edu (5.61-kk/5.911008)
	id AA13526; Sun, 13 Dec 92 03:33:47 -0500
Date: Sun, 13 Dec 92 03:33:47 -0500
From: Steve Romig <romig@cis.ohio-state.edu>
Message-Id: <9212130833.AA13526@brachiosaur.cis.ohio-state.edu>
To: www-talk@nxoc01.cern.ch
Subject: Questions about WAIS, WAISGate

I'm trying to set up a W3/wais server for the Internet RFCs and
related docs.  I created a server script in Perl that takes requests,
looks up the RFCs in our ftp archive, and returns an HTML doc with
links to things that look like other RFC names.  So far, so good, this
works great.

I also wanted to be able to search for stuff with a waisserver, so I
indexed them (they're in /n/archive/2/ftp/pub/rfc or something like
that).  WAIS lookups work fine.  

I also set up a waisgate server.  Lookups work ok, but here's the
problem: the doc IDs are created such that requests for the docs get
passed to waisgate and from there to the waisserver.  Of course,
that's the way things should work.  But that means that they aren't
retrieved from the special rfc server that I created.

I could get around this by converting the RFC texts to html, storing
them somewhere, and indexing that, but I'd rather avoid copying
everything and all that.

What I'd like to do (and will, unless someone has a better answer) is
to have waisgate read a config file that might look something like
this: 

    rfc /n/archive/2/ftp/pub/rfc/*.Z http://rfcserver:port/rfc/*.html

so that document ids from database rfc that match the pattern are
seen, they are translated to the form on the right instead of the
usual wais->www ids.  That way I could have waisgate redirect specific
doc lookups to a special server, and not have to copy the databases.

Is there a better way to do this (short of copying the source files,
preformatting them and leaving them there)?  

--- Steve

From timbl@www3.cern.ch  Mon Dec 14 14:10:55 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA01968; Mon, 14 Dec 92 14:10:55 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA14308; Mon, 14 Dec 1992 14:24:42 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA03936; Mon, 14 Dec 92 14:18:22 +0100
Date: Mon, 14 Dec 92 14:18:22 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212141318.AA03936@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: WWWLibrary_1.1
Cc: wei@xcf.berkely.edu
Reply-To: timbl@nxoc01.cern.ch



The new 1.1 library understands the <PRE> element.

It also allows SGML numeric (only) character references
such as &#60; for ASCII character 60 in the source text.  This is a  
precautionary measure in view of Dan's comments which seem reasonable to me
but would require a LONG time for new browers to come around if they were
to be adopted.

I have made SGMl.c reentrant although HTML.c still isn't.
I agree with some of the comments about cleaning up.

Dan's comments that anyone using the library is encumbered with the
HText structure is not quite accurate -- one is encumbered with
the name of the struct but not its contents which are hidden in whatever  
implements it. pointers to undefined structures seem to be the only clean  
method of infomation hiding in modular C.

The styles I agree should go out and will when I get round to it.
If you think your definitive parser will fit into the library, Dan, I'll
consider putting it in the distribution.

Did I mention that Dan's new SGML spec is on the web linked from the old spec?

On that spec (which is getting cleaner each time),

-  Could you put an empty <LINK ...> element into the set of things allowed
in the header, please? Attributes as <A> but no content. Value of TYPE
attributes to be subject to registration, with the usual X- escape.

The architecure of the browsers is input-driven rather than output-driven.
Control passes from the Access module to the Protocol module which decides  
ithas to build an object, and calls the parser with the data as parameter which  
calls the object it is building.  We had it originally the other way up, that  
the object called theprotocol module toget some data, but that was not so  
flexible as the protocol module had in fact to be able to decide which objects  
to build.


	Tim

From marca@wintermute.ncsa.uiuc.edu  Mon Dec 14 18:17:40 1992
Return-Path: <marca@wintermute.ncsa.uiuc.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03506; Mon, 14 Dec 92 18:17:40 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA00470; Mon, 14 Dec 1992 18:31:26 +0100
Received: from wintermute.ncsa.uiuc.edu by newton.ncsa.uiuc.edu with SMTP id AA21988
  (5.65a/IDA-1.4.2 for www-talk@nxoc01.cern.ch); Mon, 14 Dec 92 11:31:25 -0600
Received: by wintermute.ncsa.uiuc.edu (920110.SGI/911001.SGI)
	for @newton.ncsa.uiuc.edu:www-talk@nxoc01.cern.ch id AA28776; Mon, 14 Dec 92 11:32:40 -0800
Date: Mon, 14 Dec 92 11:32:40 -0800
From: marca@ncsa.uiuc.edu (Marc Andreessen)
Message-Id: <9212141932.AA28776@wintermute.ncsa.uiuc.edu>
To: www-talk@nxoc01.cern.ch
Subject: two ideas....

At some point we're going to want to implement two somewhat
specialized types of nodes:

(1) To support the effect of having one-to-many links, we'll want to
    have a special kind of document that consists entirely of a list
    of anchors (pointing to the many links) that will be referenced by
    the initial anchor.  This document should pop up as a small
    transient dialog box to provide the effect of the one-to-many
    menu.

(2) To support the type of glossary used with, e.g., the Microsoft
    Windows help system (wherein clicking on a glossary reference
    gives one a transient dialog box containing only the glossary
    entry one is accessing), it should be possible to have a small
    amount of text displayed in a dialog box auxiliary to the current
    document instead of as a full document.

The commonality here is that some documents should only appear in
dialog boxes (when the browser supports it) as opposed to appearing
and being dealt with as full-fledged regular documents.

The advantages in implementing this kind of thing are (1) WWW becomes
a little more like some other current systems (notably Intermedia,
with the effectively one-to-many links), boosting its ability to take
over the functions that other systems have provided up until now, and
(2) navigational disorientation is lessened when minor references
(e.g., to glossary entries or menus of anchors) are instantiated
onscreen as minor GUI elements.

So how about allowing a tag (say, <transient>) to be included in the
header of an HTML document to specify this property?

Marc

ps Specifically for the glossary system, I'm thinking of having a
regular glossary document with all the entries in a list and then
having a special server shell script strip (say that three times fast)
out a given entry when it's needed, adding the <transient> flag while
constructing a document for the entry on the fly.


From jim@wilbur.njit.edu  Mon Dec 14 21:53:42 1992
Return-Path: <jim@wilbur.njit.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA05127; Mon, 14 Dec 92 21:53:42 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA28190; Mon, 14 Dec 1992 22:07:28 +0100
Received: by njitgw.njit.edu (5.57/Ultrix3.0-C)
	id AA12654; Mon, 14 Dec 92 16:07:01 -0500
Message-Id: <9212142107.AA12654@njitgw.njit.edu>
Received: by wilbur.njit.edu; Mon, 14 Dec 92 16:05:31 est
Date: Mon, 14 Dec 92 16:05:31 est
From: jim@wilbur.njit.edu (Jim Whitescarver)
To: marca@wintermute.ncsa.uiuc.edu, www-talk@nxoc01.cern.ch
Subject: Re:  two ideas....

At lunch today... we were discussing almost the same thing-- multi-links,
and menu like intermediate documents.

My thought was to have the browser specially handle documents that begin
with a <DL>, e.i. list objects.  I had considered a special file extension
but that would be too ugly.  The html list object could then be presented
in menu fashion.

jim

From timbl@www3.cern.ch  Tue Dec 15 12:39:29 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA08810; Tue, 15 Dec 92 12:39:29 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA06938; Tue, 15 Dec 1992 12:53:18 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00506; Tue, 15 Dec 92 12:46:28 +0100
Date: Tue, 15 Dec 92 12:46:28 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212151146.AA00506@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: marca@ncsa.uiuc.edu (Marc Andreessen)
Subject: Re: two ideas....
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch



>  Date: Mon, 14 Dec 92 11:32:40 -0800
>  From: marca@ncsa.uiuc.edu (Marc Andreessen)

> [...]
>  

>  The commonality here is that some documents should only appear in
>  dialog boxes (when the browser supports it) as opposed to appearing
>  and being dealt with as full-fledged regular documents.

The NeXTStep browser gets a similar look progressively, by
resizing the window to exactly surround the document if it will fit on a  
screen, and then by  eliminating both the scroll bar and the "resive bar'  
(NeXTStep window decoration) if the document is also not editable.

>  The advantages in implementing this kind of thing are (1) WWW becomes
>  a little more like some other current systems (notably Intermedia,
>  with the effectively one-to-many links), boosting its ability to take
>  over the functions that other systems have provided up until now, and
>  (2) navigational disorientation is lessened when minor references
>  (e.g., to glossary entries or menus of anchors) are instantiated
>  onscreen as minor GUI elements.

Another possibility is to allow for a 'collection" object which is separate
from a document and  more constrained, would have a simple on-screen
representation, would map to gopher menus, newsgroups, lists, etc.

>  So how about allowing a tag (say, <transient>) to be included in the
>  header of an HTML document to specify this property?
>  

>  Marc

I worry that you will find that there is a continuous gradient between the  
transient and the non-transient, with many stages in between.
 

>  ps Specifically for the glossary system, I'm thinking of having a
>  regular glossary document with all the entries in a list and then
>  having a special server shell script strip (say that three times fast)
>  out a given entry when it's needed, adding the <transient> flag while
>  constructing a document for the entry on the fly.
>  


this is what Mike Sendall's STING gloassary is.   (See link from CERN page).

Tim


From jfgroff@munchkin.next.com  Tue Dec 15 15:49:38 1992
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA09711; Tue, 15 Dec 92 15:49:38 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA11243; Tue, 15 Dec 1992 16:03:20 +0100
Received: from eleanor by munchkin.NeXT.COM (NX5.67c/NX3.0M-IS (Mailhost-Relay $Revision: 1.8 $ $State: Exp $))
	id AA12181; Tue, 15 Dec 92 16:03:08 +0100
Received: by eleanor.next.com (NX5.67c/NeXT-2.1 (Client-Relay $Revision: 1.6 $ $State: Exp $))
	id AA10809; Tue, 15 Dec 92 16:03:05 +0100
Return-Path: <jfgroff>
Received: by prospero (NX5.67c/NeXT-1.0/Oei-0.9f)
	id AA02789; Tue, 15 Dec 92 00:20:45 +0100
Date: Tue, 15 Dec 92 00:20:45 +0100
From: jfgroff@munchkin.next.com (Jean-Francois Groff)
Message-Id: <9212142320.AA02789@prospero>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: Re: C++? 

Marc proposes:
>> What if I went away and came back in four or six months with a
>> completely object-oriented C++ implementation of the base WWW code?
>> I.e., classes for Document, Anchor, et al, with enough hooks to
>> support a hell of a lot of browsers.

and Dan notes:
> I looked over the HText, HT_Anchor, etc. stuff a while ago.
> The design is sound, I think. It would convert quite nicely
> to C++.

Let me add that HText, HTAnchor etc. were originally designed in Objective-C

From timbl@www3.cern.ch  Thu Dec 17 08:40:57 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA25315; Thu, 17 Dec 92 08:40:57 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA09402; Thu, 17 Dec 1992 08:54:48 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01181; Thu, 17 Dec 92 08:47:59 +0100
Date: Thu, 17 Dec 92 08:47:59 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212170747.AA01181@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch
Subject: comp.infosystems.www
Reply-To: timbl@nxoc01.cern.ch


Any volunteers to propose and call for votes and create a comp.infosystems.www
newsgroup?    There have been many comments that we should have one.

Tim

From montulli@ukanaix.cc.ukans.edu  Fri Dec 18 22:13:59 1992
Return-Path: <montulli@ukanaix.cc.ukans.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA18907; Fri, 18 Dec 92 22:13:59 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA01924; Fri, 18 Dec 1992 22:27:54 +0100
Received: by ukanaix.cc.ukans.edu (AIX 3.1/UCB 5.61/4.03)
          id AA24621; Fri, 18 Dec 92 15:26:26 -0600
From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Message-Id: <9212182126.AA24621@ukanaix.cc.ukans.edu>
Subject: Searching
To: www-talk@nxoc01.cern.ch
Date: Fri, 18 Dec 92 15:26:25 CST
X-Mailer: ELM [version 2.3 PL2]


WAIS searching is adequate for many applications but ergonomically 
it has a long way to go.  The currently search methods provided by 
WWW and Gopher are inadequate for many needs.

For an example, assume a hypothetical database for calendar information.
It is designed to allow the user to pick among a finite set of events 
and show them based on a date range.  A CWIS interface to the data
might look like the following.
----------------------------------------------------------------
      Welcome to The University of Kansas Events Server

          Press return at any time to show events.

          Starting search date:  Dec, 18 1992
            Ending search date:  Jan, 18 1993

                          Categories
     * Academic field                   * Museum & gallery
     * Academic year                    * Music
     * Athletic                         * Other cultural
     * Ceremonies & recognitions        * Parties
     * Club & group meetings            * Recreational
     * Conferences & workshops          * Service & charitable
     * Film                             * Special academic matters
     * Holidays, etc                    * Theatre
     * Lecture                          * Training events
     * Local & area                     * University governance & structure

                Categories with a '*' are selected
              'a' to select all, 'n' to select none
              Use '+', '-', or space, to change fields
----------------------------------------------------------------------
The user can select any of the 20 fields as being on or off.
The program will search for records and display those that are within the
date range and are in the selected categories.  How can this be done 
given the current implementation of WWW and others like it? 

This kind of search is much easier for the user than having to 
interact with line oriented input.  It also produces a number of
implementation challenges.

Comments??

:lou
-- 
  **************************************************************************
  *           T H E   U N I V E R S I T Y   O F   K A N S A S              *
  *         Lou  MONTULLI @ Ukanvax.bitnet         			   *
  *                         Kuhub.cc.ukans.edu               	           *
  *  Nothing difficult,     Ukanaix.cc.ukans.edu    ACS Computing Services *
  *   is ever easy!         	913/864-0436	       Lawrence, KS 66044  *
  *					         			   *
  *  For how we live is so different from how we ought to live that he who *
  *  studies what ought to be done rather than what is done will learn the *
  *  way to his downfall rather than to his preservation.  -Machiavelli    *
  **************************************************************************

From emv@garnet.msen.com  Sat Dec 19 02:04:24 1992
Return-Path: <emv@garnet.msen.com>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA20163; Sat, 19 Dec 92 02:04:24 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA02329; Sat, 19 Dec 1992 02:18:18 +0100
Received: by garnet.msen.com (/\==/\ Smail3.1.25.1 #25.5)
	id <m0n2sp4-001ID0C@garnet.msen.com>; Fri, 18 Dec 92 20:17 WET
Message-Id: <m0n2sp4-001ID0C@garnet.msen.com>
To: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Cc: www-talk@nxoc01.cern.ch
Subject: Re: Searching 
In-Reply-To: Your message of Fri, 18 Dec 92 15:26:25.
             <9212182126.AA24621@ukanaix.cc.ukans.edu> 
Date: Fri, 18 Dec 92 20:17:25 EST
From: Edward Vielmetti <emv@msen.com>

Lou,

Neither gopher nor world wide web currently have any mechanisms for
dealing with searches or retrievals that cover multiple different
selections.  That's not to say that the servers as they exist right
now aren't ready for it; it's just a matter of building a client
that has a "tag" command and then a "search on all tagged items"
or a "display merged list of all tagged directories". 

Given your design goals though I suspect that the implementation I
would use would be a usenet news feed and news readers with calendar
events posted by newsgroup and with subject lines that sorted appropriately
so the events showed up in order.  E.g.

	Newsgroups: ukans.events.film
	Subject: 92/12/16 It's a Wonderful Life, Parsons Hall, 7:30 pm $2
	From: cinemania@cs.ukans.edu (Cinemania Student Films)

	The classic Frank Capra movie, with a Rocky Horror twist -
	free entry with costume.

Once you have the data in this form you can cross-post to deal
with events that cross organization boundaries, build simple
gopher-to-nntp services that let people browse, and even deliver
selected pieces of information by e-mail so that people don't have
to learn anything more than their current mailer.

  Edward Vielmetti, vice president for research, Msen Inc. emv@Msen.com
        Msen Inc., 628 Brooks, Ann Arbor MI  48103 +1 313 998 GLOB


From fkappe@fiicmss01.tu-graz.ac.at  Sat Dec 19 11:02:09 1992
Return-Path: <fkappe@fiicmss01.tu-graz.ac.at>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA21472; Sat, 19 Dec 92 11:02:09 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA22546; Sat, 19 Dec 1992 11:16:05 +0100
Received: by iicm.tu-graz.ac.at (5.57/Ultrix3.0-C)
	id AA25612; Sat, 19 Dec 92 11:16:11 +0100
Received: by fiicmss01.tu-graz.ac.at (4.1/Ultrix3.0-C)
	id AA04043; Sat, 19 Dec 92 11:19:55 +0100
Date: Sat, 19 Dec 92 11:19:55 +0100
From: fiicmss01!fkappe@dxmint.cern.ch
Message-Id: <9212191019.AA04043@fiicmss01.tu-graz.ac.at>
To: montulli@ukanaix.cc.ukans.edu
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: Lou Montulli's message of Fri, 18 Dec 92 15:26:25 CST <9212182126.AA24621@ukanaix.cc.ukans.edu>
Subject: Searching

>>>>> On Fri, 18 Dec 92 15:26:25 CST, montulli@ukanaix.cc.ukans.edu (Lou Montulli) said:

Lou> The user can select any of the 20 fields as being on or off.
Lou> The program will search for records and display those that are within the
Lou> date range and are in the selected categories.  How can this be done 
Lou> given the current implementation of WWW and others like it? 

What you describe is (almost) exactly the way searches are performed in the
Hyper-G system. Unlike WWW or gopher, where the information provider has to
explicitly set up a search server for any collection of data that shall be
searchable, everything inserted into the Hyper-G system can immediately be
searched for. 

Hyper-G Documents are contained in a hierarchy of so-called collections
(somewhat similar to a directory structure as provided by gopher). The user may
'activate' any desired set of collections for search operations. The search will
then return only documents that are found in the active collections (and their
subcollections, recursively). 

If you want to give it a try, rlogin or telnet to 'finfo.tu-graz.ac.at' as user
'info', activate some collections with the 'ac(tivate)' command and perform a
simple search with the 'fi(nd) o(bject)' command. You may see a list of active
collections using the 'sh(ow active colls)' command and deactivate them with
'd(eactivate)'. For the user's convenience, it is sufficient to position the
cursor on a collection and issuing the 'find object' command in order to search
a single collection. To activate the whole document space, you may enter
'p(arents)' to get to the root collection and perform the seacrh from there.

Admittedly, the user interface for searches as it is now is kind of complicated
and for the more experienced users. Suggestions for improvements are welcome.
Keyword searches are currently performed only in the title of the document and
additional keywords. Full text search is currently not available, due to
problems with the WAIS server responsible for this. Also, please apologize the
absence of English manpages for the commands described above. If you are fluent
in German, however, you may switch the system to German saying 'la(nguage)
g(erman)' and have the full documentation available.

Frank

----------------------------------------------------------------------------
Frank M. Kappe                                     fkappe@iicm.tu-graz.ac.at
Institute for Information Processing and Computer Supported New Media (IICM)
                  Graz University of Technology, Austria
Voice: ++43/316/832551-22                               Fax: ++43/316/824394
----------------------------------------------------------------------------

From timbl@www3.cern.ch  Mon Dec 21 10:19:58 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA28232; Mon, 21 Dec 92 10:19:58 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA25575; Mon, 21 Dec 1992 10:33:58 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA00227; Mon, 21 Dec 92 10:26:30 +0100
Date: Mon, 21 Dec 92 10:26:30 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212210926.AA00227@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Subject: Re: Searching
Cc: www-talk@nxoc01.cern.ch
Reply-To: timbl@nxoc01.cern.ch

>  From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
>  Date: Fri, 18 Dec 92 15:26:25 CST

>  WAIS searching is adequate for many applications but ergonomically 

>  it has a long way to go.  The currently search methods provided by 

>  WWW and Gopher are inadequate for many needs.

Lou,

I agree that a forms intreface is something they all lack, and there
have been a number of proposals to make documents into forms.
(The main problem is, we don't have editors yet. When we do, then
there will be plenty of work on forms.)

>  For an example, assume a hypothetical database for calendar information.
>  It is designed to allow the user to pick among a finite set of events 

>  and show them based on a date range.  A CWIS interface to the data
>  might look like the following.

In fact, your example is a good one for showing how flexible
W3 can be! See documentation with examples in 

http://info.cern.ch/hypertext/WWW/Provider/RadioButtons.html

Here's one of an infinite :-) number of ways of doing it.
Let's suppose the categories are called A-Z.  At any time the
user has a certain number of categories selected, and we
represent his screen at the time with the document name

	/Calendar/ABSGLMZ/Setup.html

When he is in this state, his screen shows something like that
below.  This is obviosly just a hypertext document generated by
the server in response to a request for /Calendar/ABSGLMZ/Setup.html.
I have represented link anchors with [brackets] here - think of it
with a point & click interface or a line-mode numeric selection.
  ----------------------------------------------------------------
        Welcome to The University of Kansas Events Server
  

            See [list of all these 569 events]
  

            Starting search date:  Dec, 18 1992
              Ending search date:  Jan, 18 1993
  

 This is a calendar of events in the following categories (select links
 to exclude them from the calendar)

   Academic field    [exclude]     Museum & gallery   [exclude]
   Academic year     [exclude]     Music              [exclude]
   Athletic          [exclude]     Other cultural     [exclude]

 There are 569 events in these categories: See complete [list],
 or type keywords.
 

 Other categories available as as follows (Follow links to include them
 in the calendar)
 

   Ceremonies & recognitions  [include]  Parties		  [include]  

   Club & group meetings      [include]  Recreational		  [include]  

   Conferences & workshops    [include]  Service & charitable     [include]  

   Film                       [include]  Special academic matters [include]  

   Holidays, etc              [include]  Theatre                  [include]  

   Lecture                    [include]  Training events          [include]  

   Local & area               [include]  University governance    [include]

You can also set the [start] and [end] search dates.
___________________________________________________________________________
The user can select any of the 20 fields as being on or off by following
links. It is as though there are 2**20 virtual calendars.  (The user is in fact
naviagting a hypercube here, which is exactly what (s)he does when using radio
buttons anyway. The user intreface is not changed in fact from a panel).
Here I have assumed that the "document" can accept searches, and we say that
any search text given will be taken as keywords. There are links to a few
other nodes:

 /Calendar/ASGLMZ/Setup.html    Identical except category B excluded (etc)
 /Calendar/ABCSGLMZ/Setup.html  Identical except category C included (etc)
 /Calendar/ABSGLMZ/Start.html   Identical except keywrds taken as start date
 /Calendar/ABSGLMZ/End.html     Identical except keywords taken as end date
 /Calendar/ABSGLMZ/List.html    Includes the list of events in categories

(I should have included the search dates in the string like
 /Calendar/921218/930118/ABSGLMZ/*.html but also I would advise in practice
 /Calendar/LastMonth/ABSGLMZ/*.html as a default)
 

>  How can this be done 

>  given the current implementation of WWW and others like it? 


You can see that the program to generate these pages is simpler than the
interactive CWIS program to write.

Another neat thing is that when the user has found the ideal combination,
she can put a bookmark on it, or make a link from her home page or any
other document to it.  With LastMonth as the search date, she can follow
this link to review the calendar any time.

>  :lou

Tim

From montulli@ukanaix.cc.ukans.edu  Tue Dec 22 01:19:27 1992
Return-Path: <montulli@ukanaix.cc.ukans.edu>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA03792; Tue, 22 Dec 92 01:19:27 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA26374; Tue, 22 Dec 1992 01:33:27 +0100
Received: by ukanaix.cc.ukans.edu (AIX 3.1/UCB 5.61/4.03)
          id AA30347; Mon, 21 Dec 92 18:32:00 -0600
From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
Message-Id: <9212220032.AA30347@ukanaix.cc.ukans.edu>
Subject: Re: Searching
To: timbl@nxoc01.cern.ch
Date: Mon, 21 Dec 92 18:31:59 CST
Cc: www-talk@nxoc01.cern.ch
In-Reply-To: <9212210926.AA00227@www3.cern.ch>; from "Tim Berners-Lee" at Dec 21, 92 10:26 am
X-Mailer: ELM [version 2.3 PL2]

> 
> >  From: montulli@ukanaix.cc.ukans.edu (Lou Montulli)
> >  Date: Fri, 18 Dec 92 15:26:25 CST
> 
> >  WAIS searching is adequate for many applications but ergonomically 
> 
> >  it has a long way to go.  The currently search methods provided by 
> 
> >  WWW and Gopher are inadequate for many needs.
> 
> Lou,
> 
> I agree that a forms intreface is something they all lack, and there
> have been a number of proposals to make documents into forms.
> (The main problem is, we don't have editors yet. When we do, then
> there will be plenty of work on forms.)
> 
> >  For an example, assume a hypothetical database for calendar information.
> >  It is designed to allow the user to pick among a finite set of events 
> 
> >  and show them based on a date range.  A CWIS interface to the data
> >  might look like the following.
> 
> In fact, your example is a good one for showing how flexible
> W3 can be! See documentation with examples in 
> 
> http://info.cern.ch/hypertext/WWW/Provider/RadioButtons.html
> 
> Here's one of an infinite :-) number of ways of doing it.
> Let's suppose the categories are called A-Z.  At any time the
> user has a certain number of categories selected, and we
> represent his screen at the time with the document name
> 
> 	/Calendar/ABSGLMZ/Setup.html
> 
> When he is in this state, his screen shows something like that
> below.  This is obviosly just a hypertext document generated by
> the server in response to a request for /Calendar/ABSGLMZ/Setup.html.
> I have represented link anchors with [brackets] here - think of it
> with a point & click interface or a line-mode numeric selection.
>   ----------------------------------------------------------------
>         Welcome to The University of Kansas Events Server
>   
> 
>             See [list of all these 569 events]
>   
> 
>             Starting search date:  Dec, 18 1992
>               Ending search date:  Jan, 18 1993
>   
> 
>  This is a calendar of events in the following categories (select links
>  to exclude them from the calendar)
> 
>    Academic field    [exclude]     Museum & gallery   [exclude]
>    Academic year     [exclude]     Music              [exclude]
>    Athletic          [exclude]     Other cultural     [exclude]
> 
>  There are 569 events in these categories: See complete [list],
>  or type keywords.
>  
> 
>  Other categories available as as follows (Follow links to include them
>  in the calendar)
>  
> 
>    Ceremonies & recognitions  [include]  Parties		  [include]  
> 
>    Club & group meetings      [include]  Recreational		  [include]  
> 
>    Conferences & workshops    [include]  Service & charitable     [include]  
> 
>    Film                       [include]  Special academic matters [include]  
> 
>    Holidays, etc              [include]  Theatre                  [include]  
> 
>    Lecture                    [include]  Training events          [include]  
> 
>    Local & area               [include]  University governance    [include]
> 
> You can also set the [start] and [end] search dates.
> ___________________________________________________________________________
> The user can select any of the 20 fields as being on or off by following
> links. It is as though there are 2**20 virtual calendars.  (The user is in fact
> naviagting a hypercube here, which is exactly what (s)he does when using radio
> buttons anyway. The user intreface is not changed in fact from a panel).
> Here I have assumed that the "document" can accept searches, and we say that
> any search text given will be taken as keywords. There are links to a few
> other nodes:
> 
>  /Calendar/ASGLMZ/Setup.html    Identical except category B excluded (etc)
>  /Calendar/ABCSGLMZ/Setup.html  Identical except category C included (etc)
>  /Calendar/ABSGLMZ/Start.html   Identical except keywrds taken as start date
>  /Calendar/ABSGLMZ/End.html     Identical except keywords taken as end date
>  /Calendar/ABSGLMZ/List.html    Includes the list of events in categories
> 
> (I should have included the search dates in the string like
>  /Calendar/921218/930118/ABSGLMZ/*.html but also I would advise in practice
>  /Calendar/LastMonth/ABSGLMZ/*.html as a default)
>  
> 
> >  How can this be done 
> 
> >  given the current implementation of WWW and others like it? 
> 
> 
> You can see that the program to generate these pages is simpler than the
> interactive CWIS program to write.
> 
> Another neat thing is that when the user has found the ideal combination,
> she can put a bookmark on it, or make a link from her home page or any
> other document to it.  With LastMonth as the search date, she can follow
> this link to review the calendar any time.
> 
> >  :lou
> 
> Tim
> 
Sorry for the long intro but it is relevent to the message.

This interface is problimatic in that it will be extremly slow to navigate.
To turn on or off the 20 different catagories, the user would have to
navigate 20 different screens of data, waiting for the transfer and the
repaint for each one.  I also think that this program would be as hard or
harder to write than the original, although it does give data that the 
client can display natively.  

I believe this is a case where you will have to give the client a little
more smarts than before.  A template could be designed that intructs the
client on how to query the user in several ways.  The client would make
all the relevent queries itself and then query the server.  This could
look something like this:
-------------------------------------------------------
      Welcome to The University of Kansas Events Server

          Press return at any time to show events.

          Starting search date:  <field_name:s_date  query_type:date>
            Ending search date:  <field_name:e_date  query_type:date>

                          Categories
  <field_name:Acad  query_type:boolean  init_val:on>Academic field
  <field_name:Acad  query_type:boolean  init_val:on>Academic year
  <field_name:Athl  query_type:boolean  init_val:on>Athletic    
  <field_name:Cere  query_type:boolean  init_val:on>Ceremonies & recognitions
  <field_name:Club  query_type:boolean  init_val:on>Club & group meetings   
  <field_name:Conf  query_type:boolean  init_val:on>Conferences & workshops
  <field_name:Film  query_type:boolean  init_val:on>Film                  
  <field_name:Holi  query_type:boolean  init_val:on>Holidays, etc        
  <field_name:Lect  query_type:boolean  init_val:on>Lecture             
  <field_name:Loca  query_type:boolean  init_val:on>Local & area       

----------------------------------------------
The client would replace the links shown with the appropriate objects
such as radio buttons or stars or however the client wished to represent
a boolean type.  The date type would be handled in the same way.

When the user was satisfied with his selections he would activate the 
search and the client would pass back the values of all the fields to
the server.

This represents considerably more effort in the development of the client,
but it makes the development of database servers much, much easier.  I
suspect the one time effort of adding it to a client is much better in
the long run than the effort of adding it to every database server.

:lou
-- 
  **************************************************************************
  *           T H E   U N I V E R S I T Y   O F   K A N S A S              *
  *         Lou  MONTULLI @ Ukanvax.bitnet         			   *
  *                         Kuhub.cc.ukans.edu               	           *
  *  Nothing difficult,     Ukanaix.cc.ukans.edu    ACS Computing Services *
  *   is ever easy!         	913/864-0436	       Lawrence, KS 66044  *
  *					         			   *
  *  For how we live is so different from how we ought to live that he who *
  *  studies what ought to be done rather than what is done will learn the *
  *  way to his downfall rather than to his preservation.  -Machiavelli    *
  **************************************************************************


From timbl@www3.cern.ch  Tue Dec 22 11:44:27 1992
Return-Path: <timbl@www3.cern.ch>
Received: from dxmint.cern.ch by  nxoc01.cern.ch  (NeXT-1.0 (From Sendmail 5.52)/NeXT-2.0)
	id AA00331; Tue, 22 Dec 92 11:44:27 MET
Received: by dxmint.cern.ch (5.65/DEC-Ultrix/4.3)
	id AA15220; Tue, 22 Dec 1992 11:58:35 +0100
Received: by www3.cern.ch (NX5.67c/NX3.0S)
	id AA01063; Tue, 22 Dec 92 11:51:09 +0100
Date: Tue, 22 Dec 92 11:51:09 +0100
From: Tim Berners-Lee <timbl@www3.cern.ch>
Message-Id: <9212221051.AA01063@www3.cern.ch>
Received: by NeXT.Mailer (1.87.1)
Received: by NeXT Mailer (1.87.1)
To: www-talk@nxoc01.cern.ch, www-announce@nxoc01.cern.ch
Subject: CERN WWW service over Christmas shutdown
Reply-To: timbl@nxoc01.cern.ch


CERN has its traditional power-saving salary-saving shutdown over Christmas
and the new year.  During this time the WWW server on info.cern.ch should
(I hope!) continue running and still be connected with the outside world.
The basic web overviews by subject etc will therefore be available, as will
be anonymous FTP and telnet services.

The computer center however and the servers in the ECP division will
shut down, so some CERN-related information will be unavailable for all or part  
of the period from today to the 5th January. Please accept our apologies for  
such missing services.

A merry festive season and a productive 1993 to all our readers!

	Tim Berners-Lee

__________________________________________________________
Tim Berners-Lee                       timbl@info.cern.ch
World Wide Web team leader           (NeXTMail is ok)	
CERN, CN Division                     Tel: +41(22)767 3755
1211 Geneva 23, Switzerland           Fax: +41(22)767 7155



